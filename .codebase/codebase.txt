/* ===== AI Course For Student/lesson1.html ===== */
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bu·ªïi 1: Kh√°m Ph√° ·ª®ng D·ª•ng Tr√≠ Tu·ªá Nh√¢n T·∫°o (AI)</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@400;500;600;700&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Be Vietnam Pro', sans-serif;
            scroll-behavior: smooth;
            background-color: #f3f4f6;
        }

        #navbar {
            position: sticky;
            top: 0;
            z-index: 50;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .slide-container {
            padding-top: 1rem;
        }

        .slide {
            background-color: white;
            padding: 2.5rem;
            border-radius: 0.75rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            margin-bottom: 2rem;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
            min-height: calc(100vh - 120px);
            display: none;
            flex-direction: column;
            justify-content: center;
        }

        .slide.active {
            display: flex;
            opacity: 1;
            transform: translateY(0);
        }

        .slide-content-wrapper {
            flex-grow: 1;
            width: 100%;
            max-width: 1024px;
            margin: 0 auto;
        }

        .prompt-block {
            background-color: #f3f4f6;
            border-left: 4px solid #4f46e5;
            padding: 1rem;
            margin-top: 1rem;
            border-radius: 0.5rem;
        }

        .response-block {
            background-color: #f0fdf4;
            border-left: 4px solid #22c55e;
            padding: 1rem;
            margin-top: 1rem;
            border-radius: 0.5rem;
        }

        .prompt-block p,
        .response-block p {
            margin: 0;
        }

        img.slide-image {
            max-width: 100%;
            height: auto;
            border-radius: 0.75rem;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }
    </style>
</head>

<body class="text-gray-800">

    <nav id="navbar" class="p-4">
        <div class="container mx-auto flex flex-wrap justify-between items-center">
            <h1 class="text-xl font-bold text-indigo-600">B√†i 1: Kh√°m Ph√° AI</h1>
            <div class="flex items-center mt-2 sm:mt-0">
                <button id="prevSlide"
                    class="bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-lg shadow mr-2 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    <i class="fas fa-arrow-left mr-1"></i> Slide Tr∆∞·ªõc
                </button>
                <button id="nextSlide"
                    class="bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    Slide Ti·∫øp <i class="fas fa-arrow-right ml-1"></i>
                </button>
            </div>
            <div class="text-sm text-gray-600 mt-2 sm:mt-0 w-full sm:w-auto text-center sm:text-left sm:ml-4">
                Slide <span id="currentSlideNum">1</span> / <span id="totalSlidesNum"></span>
            </div>
        </div>
    </nav>

    <div class="container mx-auto p-4 slide-container">
        <!-- Slide 1: Welcome -->
        <div id="slide-1" class="slide">
            <div class="slide-content-wrapper text-center">
                <h2 class="text-5xl font-bold text-indigo-700 mb-4">B√†i 1: Kh√°m Ph√° ·ª®ng D·ª•ng</h2>
                <p class="text-6xl font-bold text-indigo-500 mb-8">Tr√≠ Tu·ªá Nh√¢n T·∫°o (AI)</p>
                <img src="https://placehold.co/600x350/6366f1/ffffff?text=AI+Learning" alt=""
                    class="slide-image mx-auto">
                <p class="mt-10 text-xl text-gray-700">Ch√†o m·ª´ng c√°c b·∫°n ƒë·∫øn v·ªõi bu·ªïi h·ªçc ƒë·∫ßu ti√™n ƒë·∫ßy th√∫ v·ªã!</p>
            </div>
        </div>

        <!-- Slide 2: M·ª•c ti√™u -->
        <div id="slide-2" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-8 text-center">üéØ M·ª•c Ti√™u Bu·ªïi H·ªçc</h3>
                <div class="grid md:grid-cols-2 gap-6 text-lg">
                    <div class="bg-indigo-50 p-6 rounded-lg shadow-md flex items-center">
                        <i class="fas fa-brain text-3xl text-indigo-500 mr-4"></i>
                        <span>Hi·ªÉu kh√°i ni·ªám c∆° b·∫£n v·ªÅ AI.</span>
                    </div>
                    <div class="bg-green-50 p-6 rounded-lg shadow-md flex items-center">
                        <i class="fas fa-mobile-alt text-3xl text-green-500 mr-4"></i>
                        <span>Nh·∫≠n bi·∫øt c√°c ·ª©ng d·ª•ng c·ªßa AI trong ƒë·ªùi s·ªëng.</span>
                    </div>
                    <div class="bg-yellow-50 p-6 rounded-lg shadow-md flex items-center">
                        <i class="fas fa-rocket text-3xl text-yellow-500 mr-4"></i>
                        <span>Bi·∫øt c√°ch b·∫Øt ƒë·∫ßu h·ªçc AI.</span>
                    </div>
                    <div class="bg-blue-50 p-6 rounded-lg shadow-md flex items-center">
                        <i class="fas fa-tools text-3xl text-blue-500 mr-4"></i>
                        <span>L√†m quen v·ªõi c√°c c√¥ng c·ª• AI ƒë∆°n gi·∫£n.</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 3: AI l√† g√¨? -->
        <div id="slide-3" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6 text-center">AI l√† g√¨?</h3>
                <div class="text-center mb-8">
                    <p class="text-2xl text-gray-700 leading-relaxed max-w-3xl mx-auto">Trong l·ªõp m√¨nh c√≥ b·∫°n n√†o bi·∫øt
                        AI l√† g√¨ v√† ƒë·ªÉ l√†m g√¨ kh√¥ng nh·ªâ?</p>
                </div>
                <div class="grid md:grid-cols-2 gap-8 items-center">
                    <div>
                        <img src="https://placehold.co/400x300/a5b4fc/1e1b4b?text=Thinking+Machine" alt=""
                            class="slide-image">
                    </div>
                    <div class="bg-gray-100 p-6 rounded-lg">
                        <p class="text-xl leading-relaxed">
                            <strong>AI</strong>, hay <strong>Tr√≠ tu·ªá nh√¢n t·∫°o</strong>, l√† m·ªôt c√¥ng ngh·ªá cho ph√©p m√°y
                            t√≠nh ho·∫∑c m√°y m√≥c c√≥ kh·∫£ nƒÉng <strong>"suy nghƒ©"</strong> v√† <strong>"h·ªçc h·ªèi"</strong>
                            gi·ªëng nh∆∞ con ng∆∞·ªùi.
                        </p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 4: C√°c kh√°i ni·ªám ch√≠nh -->
        <div id="slide-4" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-8 text-center">C√°c Th√†nh Ph·∫ßn C·ªët L√µi c·ªßa AI</h3>
                <div class="grid md:grid-cols-2 gap-8">
                    <div class="bg-blue-50 p-6 rounded-lg shadow-md">
                        <h4 class="text-2xl font-bold text-blue-700 mb-3">Machine Learning (H·ªçc m√°y)</h4>
                        <p class="mb-3 text-lg text-gray-700">L√† m·ªôt nh√°nh c·ªßa AI cho ph√©p m√°y t√≠nh <strong>t·ª± h·ªçc h·ªèi
                                t·ª´ d·ªØ li·ªáu</strong> m√† kh√¥ng c·∫ßn l·∫≠p tr√¨nh c·ª• th·ªÉ cho t·ª´ng nhi·ªám v·ª•.</p>
                        <p class="text-md text-gray-600"><strong>V√≠ d·ª•:</strong> T√≠nh nƒÉng nh·∫≠n di·ªán khu√¥n m·∫∑t ƒë·ªÉ m·ªü
                            kh√≥a ƒëi·ªán tho·∫°i.</p>
                    </div>
                    <div class="bg-green-50 p-6 rounded-lg shadow-md">
                        <h4 class="text-2xl font-bold text-green-700 mb-3">NLP (X·ª≠ l√Ω ng√¥n ng·ªØ t·ª± nhi√™n)</h4>
                        <p class="mb-3 text-lg text-gray-700">L√† lƒ©nh v·ª±c c·ªßa AI gi√∫p m√°y t√≠nh <strong>hi·ªÉu v√† t∆∞∆°ng
                                t√°c</strong> v·ªõi ng√¥n ng·ªØ c·ªßa con ng∆∞·ªùi.</p>
                        <p class="text-md text-gray-600"><strong>V√≠ d·ª•:</strong> Tr·ª£ l√Ω ·∫£o Siri hay Google Assistant
                            hi·ªÉu c√¢u h·ªèi v√† tr·∫£ l·ªùi b·∫°n.</p>
                    </div>
                </div>
                <div class="mt-8 text-center">
                    <img src="https://placehold.co/450x250/7e3af2/FFFFFF?text=Data+%C4%90i+v%C3%A0o+%E2%86%92+AI+H%E1%BB%8Dc+%E2%86%92+K%E1%BA%BFt+qu%E1%BA%A3"
                        alt="" class="slide-image mx-auto">
                </div>
            </div>
        </div>

        <!-- Slide 5: ·ª®ng d·ª•ng AI -->
        <div id="slide-5" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-8 text-center">·ª®ng d·ª•ng AI trong ƒë·ªùi s·ªëng</h3>
                <div class="text-center mb-6">
                    <p class="text-xl text-gray-600">C√≥ ai ƒë√£ t·ª´ng s·ª≠ d·ª•ng m·ªôt ·ª©ng d·ª•ng AI n√†o ch∆∞a? C·∫£m nh·∫≠n c·ªßa b·∫°n ra
                        sao?</p>
                </div>
                <div class="grid md:grid-cols-2 gap-8">
                    <div class="text-center">
                        <img src="https://placehold.co/400x250/3b82f6/ffffff?text=Tr%E1%BB%A3+l%C3%BD+%E1%BA%A3o" alt=""
                            class="slide-image mx-auto mb-4">
                        <h4 class="text-xl font-semibold">Tr·ª£ l√Ω ·∫£o</h4>
                        <p>Siri, Google Assistant, Alexa gi√∫p ƒë·∫∑t l·ªãch h·∫πn, t√¨m th√¥ng tin, ƒëi·ªÅu khi·ªÉn thi·∫øt b·ªã.</p>
                    </div>
                    <div class="text-center">
                        <img src="https://placehold.co/400x250/ef4444/ffffff?text=G%E1%BB%A3i+%C3%BD+n%E1%BB%99i+dung"
                            alt="" class="slide-image mx-auto mb-4">
                        <h4 class="text-xl font-semibold">G·ª£i √Ω n·ªôi dung</h4>
                        <p>Netflix, YouTube, Spotify g·ª£i √Ω phim, video, b√†i h√°t d·ª±a tr√™n s·ªü th√≠ch c·ªßa b·∫°n.</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 6: Gi·ªõi thi·ªáu ChatGPT -->
        <div id="slide-6" class="slide">
            <div class="slide-content-wrapper text-center">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6">L√†m quen v·ªõi c√¥ng c·ª• AI: ChatGPT</h3>
                <p class="text-xl text-gray-700 mb-6 max-w-3xl mx-auto">ChatGPT l√† m·ªôt m√¥ h√¨nh ng√¥n ng·ªØ m·∫°nh m·∫Ω, c√≥ th·ªÉ
                    tr√≤ chuy·ªán, tr·∫£ l·ªùi c√¢u h·ªèi, vi·∫øt vƒÉn, v√† l√†m nhi·ªÅu h∆°n th·∫ø n·ªØa!</p>
                <img src="https://placehold.co/600x350/10b981/ffffff?text=ChatGPT+Interface" alt=""
                    class="slide-image mx-auto">
                <p class="mt-6 text-lg text-gray-600">B√¢y gi·ªù, ch√∫ng ta h√£y c√πng nhau truy c·∫≠p v√†o ChatGPT nh√©!</p>
            </div>
        </div>

        <!-- Slide 7: Th·ª±c h√†nh ChatGPT 1 -->
        <div id="slide-7" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-2 text-center">Th·ª±c h√†nh c√πng ChatGPT</h3>
                <p class="text-2xl text-center text-gray-600 mb-6">D√πng AI ƒë·ªÉ h·ªçc Ti·∫øng Anh</p>

                <h4 class="text-xl font-bold text-gray-800 mb-2">üí° T√¨nh hu·ªëng 1: D·ªãch v√† gi·∫£i th√≠ch vƒÉn b·∫£n</h4>
                <p class="text-gray-700 mb-4">B·∫°n c√≥ m·ªôt ƒëo·∫°n vƒÉn Ti·∫øng Anh kh√≥ hi·ªÉu? H√£y nh·ªù ChatGPT!</p>

                <div class="prompt-block">
                    <p class="font-semibold text-indigo-800"><i class="fas fa-user mr-2"></i>B·∫°n h·ªèi AI:</p>
                    <p class="mt-2">"H√£y d·ªãch ƒëo·∫°n vƒÉn sau sang ti·∫øng Vi·ªát v√† gi·∫£i th√≠ch c√°c t·ª´ kh√≥: 'Artificial
                        intelligence is the simulation of human intelligence in machines programmed to think like humans
                        and mimic their actions.'"</p>
                </div>

                <div class="response-block mt-4">
                    <p class="font-semibold text-green-800"><i class="fas fa-robot mr-2"></i>AI tr·∫£ l·ªùi:</p>
                    <p class="mt-2"><strong>B·∫£n d·ªãch:</strong> "Tr√≠ tu·ªá nh√¢n t·∫°o l√† s·ª± m√¥ ph·ªèng tr√≠ th√¥ng minh c·ªßa con
                        ng∆∞·ªùi trong c√°c m√°y m√≥c ƒë∆∞·ª£c l·∫≠p tr√¨nh ƒë·ªÉ suy nghƒ© gi·ªëng con ng∆∞·ªùi v√† b·∫Øt ch∆∞·ªõc h√†nh ƒë·ªông c·ªßa
                        h·ªç."</p>
                    <p class="mt-2"><strong>Gi·∫£i th√≠ch:</strong><br>
                        - <strong>simulation:</strong> s·ª± m√¥ ph·ªèng, b·∫Øt ch∆∞·ªõc.<br>
                        - <strong>mimic:</strong> b·∫Øt ch∆∞·ªõc, nh·∫°i l·∫°i.</p>
                </div>
            </div>
        </div>

        <!-- Slide 8: Th·ª±c h√†nh ChatGPT 2 -->
        <div id="slide-8" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-2 text-center">Th·ª±c h√†nh c√πng ChatGPT</h3>
                <p class="text-2xl text-center text-gray-600 mb-6">D√πng AI ƒë·ªÉ h·ªçc Ti·∫øng Anh</p>

                <h4 class="text-xl font-bold text-gray-800 mb-2">üí° T√¨nh hu·ªëng 2: L√™n d√†n √Ω cho b√†i vi·∫øt</h4>
                <p class="text-gray-700 mb-4">B·∫°n ƒëang b√≠ √Ω t∆∞·ªüng cho b√†i vƒÉn? AI c√≥ th·ªÉ gi√∫p b·∫°n!</p>

                <div class="prompt-block">
                    <p class="font-semibold text-indigo-800"><i class="fas fa-user mr-2"></i>B·∫°n h·ªèi AI:</p>
                    <p class="mt-2">"L·∫≠p d√†n √Ω cho m·ªôt ƒëo·∫°n vƒÉn ti·∫øng Anh v·ªÅ ch·ªß ƒë·ªÅ 'my favorite hobby'."</p>
                </div>

                <div class="response-block mt-4">
                    <p class="font-semibold text-green-800"><i class="fas fa-robot mr-2"></i>AI tr·∫£ l·ªùi:</p>
                    <p class="mt-2">
                        <strong>D√†n √Ω cho ch·ªß ƒë·ªÅ "My Favorite Hobby":</strong><br>
                        <strong>1. M·ªü b√†i:</strong> Gi·ªõi thi·ªáu s·ªü th√≠ch c·ªßa b·∫°n l√† g√¨ (v√≠ d·ª•: reading books).<br>
                        <strong>2. Th√¢n b√†i:</strong><br>
                        &nbsp;&nbsp;&nbsp;- T·∫°i sao b·∫°n th√≠ch n√≥? (N√≥ gi√∫p th∆∞ gi√£n, h·ªçc ki·∫øn th·ª©c m·ªõi,...).<br>
                        &nbsp;&nbsp;&nbsp;- B·∫°n th∆∞·ªùng th·ª±c hi·ªán s·ªü th√≠ch n√†y khi n√†o, ·ªü ƒë√¢u?<br>
                        &nbsp;&nbsp;&nbsp;- K·ªÉ v·ªÅ m·ªôt cu·ªën s√°ch/tr·∫£i nghi·ªám ƒë√°ng nh·ªõ.<br>
                        <strong>3. K·∫øt b√†i:</strong> T√≥m t·∫Øt l·∫°i t√¨nh y√™u c·ªßa b·∫°n d√†nh cho s·ªü th√≠ch ƒë√≥.
                    </p>
                </div>
            </div>
        </div>

        <!-- Slide 9: Th·ª±c h√†nh ChatGPT 3 -->
        <div id="slide-9" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-2 text-center">Th·ª±c h√†nh c√πng ChatGPT</h3>
                <p class="text-2xl text-center text-gray-600 mb-6">D√πng AI ƒë·ªÉ h·ªçc Ti·∫øng Anh</p>

                <h4 class="text-xl font-bold text-gray-800 mb-2">üí° T√¨nh hu·ªëng 3: Luy·ªán giao ti·∫øp v√† s·ª≠a l·ªói</h4>
                <p class="text-gray-700 mb-4">B·∫°n mu·ªën c√≥ m·ªôt ng∆∞·ªùi b·∫°n ƒë·ªÉ luy·ªán n√≥i v√† s·ª≠a l·ªói sai 24/7?</p>

                <div class="prompt-block">
                    <p class="font-semibold text-indigo-800"><i class="fas fa-user mr-2"></i>B·∫°n n√≥i v·ªõi AI:</p>
                    <p class="mt-2">"Let's have a small talk about shopping. Please correct my mistakes."</p>
                </div>

                <div class="response-block mt-4">
                    <p class="font-semibold text-green-800"><i class="fas fa-robot mr-2"></i>AI tr·∫£ l·ªùi:</p>
                    <p class="mt-2">
                        "Of course! I'd love to chat about shopping. What have you bought recently?"
                    </p>
                </div>

                <div class="prompt-block mt-4">
                    <p class="font-semibold text-indigo-800"><i class="fas fa-user mr-2"></i>B·∫°n tr·∫£ l·ªùi:</p>
                    <p class="mt-2">"I buyed a new T-shirt yesterday. It have a blue color."</p>
                </div>

                <div class="response-block mt-4">
                    <p class="font-semibold text-green-800"><i class="fas fa-robot mr-2"></i>AI s·ª≠a l·ªói:</p>
                    <p class="mt-2">
                        Great! Here's a small correction: <br>
                        "I <strong>bought</strong> a new T-shirt yesterday. It <strong>has</strong> a blue color." (or
                        "It's blue.")<br>
                        'Buy' is an irregular verb, so the past tense is 'bought'. Keep going! What else?
                    </p>
                </div>
            </div>
        </div>

        <!-- Slide 10: Challenge -->
        <div id="slide-10" class="slide">
            <div class="slide-content-wrapper text-center">
                <i class="fas fa-trophy text-6xl text-yellow-400 mb-6"></i>
                <h2 class="text-5xl font-bold text-indigo-700 mb-6">Th·ª≠ Th√°ch S√°ng T·∫°o!</h2>
                <p class="text-2xl text-gray-700 mb-8 max-w-3xl mx-auto">H√£y v·∫≠n d·ª•ng ki·∫øn th·ª©c v·ª´a h·ªçc v√† s·ª± tr·ª£ gi√∫p
                    c·ªßa AI ƒë·ªÉ <strong>t·∫°o ra m·ªôt c√¢u chuy·ªán ng·∫Øn</strong>. C√¢u chuy·ªán c·∫ßn c√≥ nh√¢n v·∫≠t, b·ªëi c·∫£nh v√† m·ªôt
                    c·ªët truy·ªán ƒë∆°n gi·∫£n.</p>
                <img src="https://placehold.co/500x300/f59e0b/ffffff?text=Create+A+Story" alt=""
                    class="slide-image mx-auto">
            </div>
        </div>

        <!-- Slide 11: Summary -->
        <div id="slide-11" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-indigo-700 mb-8">T·ªïng K·∫øt Bu·ªïi H·ªçc</h2>
                <div class="text-xl text-gray-700 space-y-5 max-w-3xl text-left bg-gray-50 p-8 rounded-lg shadow">
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>Ch√∫ng ta ƒë√£ hi·ªÉu <strong>AI l√† g√¨</strong>
                        v√† c√°c kh√°i ni·ªám c·ªët l√µi (H·ªçc m√°y, NLP).</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>Ch√∫ng ta ƒë√£ bi·∫øt c√°c <strong>·ª©ng d·ª•ng c·ªßa
                            AI</strong> trong cu·ªôc s·ªëng (tr·ª£ l√Ω ·∫£o, g·ª£i √Ω phim).</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>Ch√∫ng ta ƒë√£ th·ª±c h√†nh s·ª≠ d·ª•ng
                        <strong>ChatGPT</strong> ƒë·ªÉ h·ªçc ti·∫øng Anh v√† s√°ng t·∫°o.
                    </p>
                </div>
                <div
                    class="mt-12 bg-green-100 border-l-4 border-green-500 text-green-700 p-6 rounded-r-lg shadow-lg w-full max-w-3xl">
                    <h4 class="text-2xl font-bold mb-2">H·∫πn g·∫∑p l·∫°i ·ªü Bu·ªïi 2!</h4>
                    <p class="text-lg">Ch√∫ng ta s·∫Ω kh√°m ph√° nhi·ªÅu ƒëi·ªÅu th√∫ v·ªã h∆°n n·ªØa!</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const slides = Array.from(document.querySelectorAll('.slide'));
            const prevButton = document.getElementById('prevSlide');
            const nextButton = document.getElementById('nextSlide');
            const currentSlideNumDisplay = document.getElementById('currentSlideNum');
            const totalSlidesNumDisplay = document.getElementById('totalSlidesNum');

            let currentSlide = 0;

            if (slides.length > 0) {
                totalSlidesNumDisplay.textContent = slides.length;
            } else {
                if (currentSlideNumDisplay) currentSlideNumDisplay.textContent = '0';
                if (totalSlidesNumDisplay) totalSlidesNumDisplay.textContent = '0';
            }

            function showSlide(index) {
                slides.forEach((slide, i) => {
                    if (i === index) {
                        slide.style.display = 'flex';
                        setTimeout(() => slide.classList.add('active'), 10);
                    } else {
                        slide.classList.remove('active');
                        setTimeout(() => {
                            if (!slide.classList.contains('active')) {
                                slide.style.display = 'none';
                            }
                        }, 500); // Must match the transition duration in CSS
                    }
                });
                if (currentSlideNumDisplay) {
                    currentSlideNumDisplay.textContent = index + 1;
                }
                updateNavButtons();
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }

            function updateNavButtons() {
                if (!prevButton || !nextButton) return;
                prevButton.disabled = currentSlide === 0;
                nextButton.disabled = currentSlide === slides.length - 1;
            }

            // Setup navigation
            if (prevButton && nextButton) {
                prevButton.addEventListener('click', () => {
                    if (currentSlide > 0) {
                        currentSlide--;
                        showSlide(currentSlide);
                    }
                });

                nextButton.addEventListener('click', () => {
                    if (currentSlide < slides.length - 1) {
                        currentSlide++;
                        showSlide(currentSlide);
                    }
                });
            }

            // Initial setup
            if (slides.length > 0) {
                showSlide(currentSlide);
            }
        });
    </script>
</body>

</html>

/* ===== AI Course For Student/lesson2.html ===== */
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>B√†i 2: T·ªïng h·ª£p v√† Ch·∫Øt l·ªçc Th√¥ng tin v·ªõi AI</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@400;500;600;700&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Be Vietnam Pro', sans-serif;
            scroll-behavior: smooth;
            background-color: #f3f4f6;
        }

        #navbar {
            position: sticky;
            top: 0;
            z-index: 50;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .slide-container {
            padding-top: 1rem;
        }

        .slide {
            background-color: white;
            padding: 2.5rem;
            border-radius: 0.75rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            margin-bottom: 2rem;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
            min-height: calc(100vh - 120px);
            display: none;
            flex-direction: column;
            justify-content: center;
        }

        .slide.active {
            display: flex;
            opacity: 1;
            transform: translateY(0);
        }

        .slide-content-wrapper {
            flex-grow: 1;
            width: 100%;
            max-width: 1024px;
            margin: 0 auto;
        }

        .prompt-block {
            background-color: #f3f4f6;
            border-left: 4px solid #4f46e5;
            padding: 1rem;
            margin-top: 1rem;
            border-radius: 0.5rem;
        }

        .response-block {
            background-color: #f0fdf4;
            border-left: 4px solid #22c55e;
            padding: 1rem;
            margin-top: 1rem;
            border-radius: 0.5rem;
        }

        .note-block {
            background-color: #fffbeb;
            border-left: 4px solid #f59e0b;
            padding: 1rem;
            margin-top: 1rem;
            border-radius: 0.5rem;
        }

        .prompt-block p,
        .response-block p,
        .note-block p {
            margin: 0;
        }

        img.slide-image {
            max-width: 100%;
            height: auto;
            border-radius: 0.75rem;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }
    </style>
</head>

<body class="text-gray-800">

    <nav id="navbar" class="p-4">
        <div class="container mx-auto flex flex-wrap justify-between items-center">
            <h1 class="text-xl font-bold text-indigo-600">B√†i 2: T·ªïng h·ª£p & Ch·∫Øt l·ªçc Th√¥ng tin v·ªõi AI</h1>
            <div class="flex items-center mt-2 sm:mt-0">
                <button id="prevSlide"
                    class="bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-lg shadow mr-2 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    <i class="fas fa-arrow-left mr-1"></i> Slide Tr∆∞·ªõc
                </button>
                <button id="nextSlide"
                    class="bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    Slide Ti·∫øp <i class="fas fa-arrow-right ml-1"></i>
                </button>
            </div>
            <div class="text-sm text-gray-600 mt-2 sm:mt-0 w-full sm:w-auto text-center sm:text-left sm:ml-4">
                Slide <span id="currentSlideNum">1</span> / <span id="totalSlidesNum"></span>
            </div>
        </div>
    </nav>

    <div class="container mx-auto p-4 slide-container">
        <!-- Slide 1: Welcome -->
        <div id="slide-1" class="slide">
            <div class="slide-content-wrapper text-center">
                <h2 class="text-5xl font-bold text-indigo-700 mb-4">B√†i 2: T·ªïng h·ª£p v√† Ch·∫Øt l·ªçc</h2>
                <p class="text-6xl font-bold text-indigo-500 mb-8">Th√¥ng tin v·ªõi AI</p>
                <img src="https://placehold.co/600x350/6366f1/ffffff?text=H%E1%BB%8Dc+T%E1%BA%ADp+Th%C3%B4ng+Minh"
                    alt="H·ªçc t·∫≠p th√¥ng minh v·ªõi AI" class="slide-image mx-auto">
                <p class="mt-10 text-xl text-gray-700">C√πng kh√°m ph√° c√°ch bi·∫øn AI th√†nh tr·ª£ th·ªß h·ªçc t·∫≠p ƒë·∫Øc l·ª±c!</p>
            </div>
        </div>

        <!-- Slide 2: M·ª•c ti√™u bu·ªïi h·ªçc -->
        <div id="slide-2" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-8 text-center">üéØ M·ª•c Ti√™u Bu·ªïi H·ªçc</h3>
                <div class="space-y-4 text-lg max-w-2xl mx-auto">
                    <div class="bg-indigo-50 p-5 rounded-lg shadow-md flex items-start">
                        <i class="fas fa-search text-2xl text-indigo-500 mr-4 mt-1"></i>
                        <span>Bi·∫øt c√°ch <strong>t√¨m ki·∫øm, ch·∫Øt l·ªçc, v√† x√°c minh</strong> th√¥ng tin t·ª´ AI.</span>
                    </div>
                    <div class="bg-green-50 p-5 rounded-lg shadow-md flex items-start">
                        <i class="fas fa-tasks text-2xl text-green-500 mr-4 mt-1"></i>
                        <span>Bi·∫øt s·ª≠ d·ª•ng AI ƒë·ªÉ <strong>luy·ªán t·∫≠p, t·ªïng h·ª£p, l√™n k·∫ø ho·∫°ch</strong> h·ªçc t·∫≠p hi·ªáu
                            qu·∫£.</span>
                    </div>
                    <div class="bg-yellow-50 p-5 rounded-lg shadow-md flex items-start">
                        <i class="fas fa-pen-to-square text-2xl text-yellow-500 mr-4 mt-1"></i>
                        <span>Bi·∫øt <strong>bi√™n so·∫°n l·∫°i</strong> n·ªôi dung do AI cung c·∫•p theo ng√¥n ng·ªØ v√† √Ω hi·ªÉu c·ªßa
                            ri√™ng m√¨nh.</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 3: Kh·ªüi ƒë·ªông -->
        <div id="slide-3" class="slide">
            <div class="slide-content-wrapper text-center">
                <i class="fas fa-question-circle text-6xl text-indigo-500 mb-6"></i>
                <h3 class="text-4xl font-semibold text-gray-800 mb-8">C√¢u h·ªèi kh·ªüi ƒë·ªông</h3>
                <p class="text-3xl text-gray-700 leading-relaxed max-w-3xl mx-auto">Trong l·ªõp m√¨nh, c√≥ b·∫°n n√†o ƒë√£ t·ª´ng
                    √°p d·ª•ng AI v√†o vi·ªác h·ªçc t·∫≠p ch∆∞a?</p>
                <p class="text-xl text-gray-500 mt-4">(V√≠ d·ª•: h·ªèi b√†i, d·ªãch thu·∫≠t, t√¨m √Ω t∆∞·ªüng,...)</p>
            </div>
        </div>

        <!-- Slide 4: Gi·ªõi thi·ªáu Prompt -->
        <div id="slide-4" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6 text-center">Y√™u c·∫ßu AI h·ªó tr·ª£ h·ªçc t·∫≠p</h3>
                <p class="text-center text-xl mb-6">Ch√∫ng ta "ra l·ªánh" cho AI b·∫±ng m·ªôt th·ª© g·ªçi l√†
                    <strong>Prompt</strong>.
                </p>
                <div class="prompt-block">
                    <p class="font-semibold text-indigo-800"><i class="fas fa-user mr-2"></i> B·∫°n y√™u c·∫ßu (Prompt):</p>
                    <p class="mt-2">"T√¥i s·∫Øp thi cu·ªëi k·ª≥ m√¥n Sinh h·ªçc l·ªõp 10, ch∆∞∆°ng tr√¨nh g·ªìm c√°c b√†i v·ªÅ T·∫ø b√†o v√† Ph√¢n
                        b√†o. H√£y l·∫≠p cho t√¥i m·ªôt k·∫ø ho·∫°ch √¥n t·∫≠p trong 3 ng√†y."</p>
                </div>
                <div class="response-block mt-4">
                    <p class="font-semibold text-green-800"><i class="fas fa-robot mr-2"></i> AI c√≥ th·ªÉ tr·∫£ l·ªùi:</p>
                    <p class="mt-2"><strong>K·∫ø ho·∫°ch √¥n t·∫≠p Sinh h·ªçc 10 trong 3 ng√†y:</strong><br>
                        <strong>Ng√†y 1: L√Ω thuy·∫øt T·∫ø b√†o</strong><br>
                        - S√°ng: √în t·∫≠p c·∫•u tr√∫c t·∫ø b√†o nh√¢n s∆° v√† nh√¢n th·ª±c.<br>
                        - Chi·ªÅu: So s√°nh 2 lo·∫°i t·∫ø b√†o, vai tr√≤ c√°c b√†o quan.<br>
                        <strong>Ng√†y 2: L√Ω thuy·∫øt Ph√¢n b√†o</strong><br>
                        - S√°ng: √în t·∫≠p nguy√™n ph√¢n.<br>
                        - Chi·ªÅu: √în t·∫≠p gi·∫£m ph√¢n v√† √Ω nghƒ©a.<br>
                        <strong>Ng√†y 3: Luy·ªán t·∫≠p</strong><br>
                        - S√°ng: L√†m b√†i t·∫≠p tr·∫Øc nghi·ªám v·ªÅ nh·∫≠n bi·∫øt.<br>
                        - Chi·ªÅu: Gi·∫£i c√°c b√†i t·∫≠p t·ª± lu·∫≠n v·ªÅ c∆° ch·∫ø.
                    </p>
                </div>
            </div>
        </div>

        <!-- Slide 5: Prompt l√† g√¨? -->
        <div id="slide-5" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6 text-center">V·∫≠y... Prompt AI l√† g√¨?</h3>
                <div class="bg-gray-100 p-8 rounded-lg text-center">
                    <p class="text-2xl leading-relaxed">
                        <strong>Prompt</strong> l√† <strong>c√¢u l·ªánh, y√™u c·∫ßu, ho·∫∑c ch·ªâ d·∫´n</strong> b·∫°n nh·∫≠p v√†o ƒë·ªÉ AI
                        hi·ªÉu v√† th·ª±c hi·ªán m·ªôt nhi·ªám v·ª•.
                    </p>
                    <p class="mt-4 text-xl text-gray-600">N√≥i ƒë∆°n gi·∫£n: <strong>Prompt l√† c√°ch b·∫°n "giao ti·∫øp" v·ªõi
                            AI.</strong></p>
                </div>
                <div class="prompt-block mt-8">
                    <p class="font-semibold text-indigo-800"><i class="fas fa-user mr-2"></i> V√≠ d·ª• Prompt:</p>
                    <p class="mt-2">"Gi·∫£i ph∆∞∆°ng tr√¨nh b·∫≠c hai: x¬≤ - 5x + 6 = 0 v√† gi·∫£i th√≠ch t·ª´ng b∆∞·ªõc."</p>
                </div>
                <div class="response-block mt-4">
                    <p class="font-semibold text-green-800"><i class="fas fa-robot mr-2"></i> AI s·∫Ω ph·∫£n h·ªìi:</p>
                    <p class="mt-2">Tuy·ªát v·ªùi! D∆∞·ªõi ƒë√¢y l√† c√°ch gi·∫£i ph∆∞∆°ng tr√¨nh x¬≤ - 5x + 6 = 0:...</p>
                </div>
            </div>
        </div>

        <!-- Slide 6: T·∫°i sao prompt l·∫°i quan tr·ªçng? -->
        <div id="slide-6" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-8 text-center">T·∫°i sao ph·∫£i vi·∫øt Prompt "chu·∫©n"?
                </h3>
                <div class="grid md:grid-cols-2 gap-6 text-lg">
                    <div class="bg-blue-50 p-6 rounded-lg">
                        <h4 class="font-bold text-blue-800 mb-2">‚úÖ Giao ti·∫øp ch√≠nh x√°c</h4>
                        <p>Prompt r√µ r√†ng ‚Üí AI hi·ªÉu ƒë√∫ng √Ω b·∫°n.</p>
                    </div>
                    <div class="bg-green-50 p-6 rounded-lg">
                        <h4 class="font-bold text-green-800 mb-2">‚úÖ K·∫øt qu·∫£ ch·∫•t l∆∞·ª£ng h∆°n</h4>
                        <p>Prompt t·ªët ‚Üí C√¢u tr·∫£ l·ªùi s√¢u s·∫Øc, ƒë√∫ng nhu c·∫ßu.</p>
                    </div>
                    <div class="bg-yellow-50 p-6 rounded-lg">
                        <h4 class="font-bold text-yellow-800 mb-2">‚úÖ Ti·∫øt ki·ªám th·ªùi gian</h4>
                        <p>Kh√¥ng c·∫ßn h·ªèi ƒëi h·ªèi l·∫°i nhi·ªÅu l·∫ßn ƒë·ªÉ c√≥ c√¢u tr·∫£ l·ªùi ∆∞ng √Ω.</p>
                    </div>
                    <div class="bg-purple-50 p-6 rounded-lg">
                        <h4 class="font-bold text-purple-800 mb-2">‚úÖ K·ªπ nƒÉng c·ªßa t∆∞∆°ng lai</h4>
                        <p>Prompt Engineering (k·ªπ thu·∫≠t ra l·ªánh) l√† m·ªôt k·ªπ nƒÉng s·ªë quan tr·ªçng.</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 7: Prompt t·ªët vs Prompt ch∆∞a t·ªët -->
        <div id="slide-7" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-8 text-center">So s√°nh: Prompt t·ªët v√† ch∆∞a t·ªët</h3>
                <div class="grid md:grid-cols-2 gap-8">
                    <div class="bg-red-50 p-6 rounded-lg border border-red-200">
                        <h4 class="text-2xl font-bold text-red-700 mb-4 text-center">‚ùå Prompt ch∆∞a t·ªët</h4>
                        <p class="text-gray-700 italic border-l-4 border-red-300 pl-4 py-2">‚ÄúGi·∫£i b√†i n√†y gi√∫p t√¥i‚Äù</p>
                        <p class="text-gray-700 italic border-l-4 border-red-300 pl-4 py-2 mt-4">‚ÄúGi√∫p t√¥i √¥n H√≥a‚Äù</p>
                        <p class="text-gray-700 italic border-l-4 border-red-300 pl-4 py-2 mt-4">"T√≥m t·∫Øt L·ªãch s·ª≠ Vi·ªát
                            Nam"</p>
                    </div>
                    <div class="bg-green-50 p-6 rounded-lg border border-green-200">
                        <h4 class="text-2xl font-bold text-green-700 mb-4 text-center">‚úÖ Prompt t·ªët</h4>
                        <p class="text-gray-700 border-l-4 border-green-300 pl-4 py-2">‚ÄúT√¥i l√† h·ªçc sinh l·ªõp 11. H√£y gi·∫£i
                            ph∆∞∆°ng tr√¨nh ƒë·∫°o h√†m: y = 3x¬≤ + 2x - 1 v√† gi·∫£i th√≠ch t·ª´ng b∆∞·ªõc.‚Äù</p>
                        <p class="text-gray-700 border-l-4 border-green-300 pl-4 py-2 mt-2">‚ÄúT√¥i ƒëang √¥n thi H√≥a l·ªõp 10.
                            H√£y t√≥m t·∫Øt b·∫£ng so s√°nh gi·ªØa li√™n k·∫øt ion v√† c·ªông h√≥a tr·ªã, c√≥ v√≠ d·ª•.‚Äù</p>
                        <p class="text-gray-700 border-l-4 border-green-300 pl-4 py-2 mt-2">"T√≥m t·∫Øt l·ªãch s·ª≠ Vi·ªát Nam
                            giai ƒëo·∫°n 1945-1954 cho h·ªçc sinh l·ªõp 12, t·∫≠p trung v√†o c√°c s·ª± ki·ªán ch√≠nh."</p>
                    </div>
                </div>
                <p class="text-center mt-8 text-xl font-semibold text-indigo-700">üëâ Prompt c√†ng chi ti·∫øt, c√†ng nhi·ªÅu
                    b·ªëi c·∫£nh ‚Üí C√¢u tr·∫£ l·ªùi c√†ng ch√≠nh x√°c!</p>
            </div>
        </div>

        <!-- Slide 8: C√¥ng th·ª©c prompt hi·ªáu qu·∫£ -->
        <div id="slide-8" class="slide">
            <div class="slide-content-wrapper text-center">
                <i class="fas fa-magic-wand-sparkles text-6xl text-yellow-500 mb-6"></i>
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6">C√¥ng th·ª©c Prompt "Th·∫ßn k·ª≥" cho h·ªçc t·∫≠p</h3>
                <div class="note-block text-left text-lg p-6">
                    <p><strong>[Vai tr√≤ c·ªßa b·∫°n]</strong>. H√£y gi√∫p t√¥i <strong>[M·ª•c ti√™u c·∫ßn ƒë·∫°t]</strong> v·ªÅ
                        <strong>[Ch·ªß ƒë·ªÅ/V·∫•n ƒë·ªÅ]</strong> b·∫±ng c√°ch <strong>[H√†nh ƒë·ªông c·ªßa AI]</strong>. Cu·ªëi c√πng
                        <strong>[Y√™u c·∫ßu b·ªï sung]</strong>.
                    </p>
                </div>
                <div class="text-left mt-6 space-y-2 text-md">
                    <p><strong class="text-indigo-600">Vai tr√≤:</strong> T√¥i l√† h·ªçc sinh l·ªõp m·∫•y, ƒëang g·∫∑p kh√≥ khƒÉn
                        g√¨...</p>
                    <p><strong class="text-indigo-600">M·ª•c ti√™u:</strong> hi·ªÉu b√†i, gi·∫£i b√†i t·∫≠p, l√™n d√†n √Ω...</p>
                    <p><strong class="text-indigo-600">Ch·ªß ƒë·ªÅ:</strong> c√¥ng th·ª©c, kh√°i ni·ªám c·ª• th·ªÉ...</p>
                    <p><strong class="text-indigo-600">H√†nh ƒë·ªông:</strong> gi·∫£i th√≠ch d·ªÖ hi·ªÉu, cho v√≠ d·ª•, t·∫°o b·∫£ng so
                        s√°nh...</p>
                    <p><strong class="text-indigo-600">Y√™u c·∫ßu b·ªï sung:</strong> cho th√™m b√†i t·∫≠p, t·∫°o c√¢u h·ªèi tr·∫Øc
                        nghi·ªám...</p>
                </div>
            </div>
        </div>

        <!-- Slide 9: V√≠ d·ª• C√¥ng th·ª©c -->
        <div id="slide-9" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6 text-center">√Åp d·ª•ng c√¥ng th·ª©c</h3>
                <div class="prompt-block">
                    <p class="font-semibold text-indigo-800"><i class="fas fa-user mr-2"></i> Prompt m·∫´u:</p>
                    <p class="mt-2">
                        <span class="bg-yellow-200 px-1 rounded">[T√¥i l√† h·ªçc sinh l·ªõp 12 ƒëang √¥n thi m√¥n V·∫≠t L√Ω, ph·∫ßn
                            S√≥ng c∆°]</span>.
                        H√£y gi√∫p t√¥i <span class="bg-green-200 px-1 rounded">[hi·ªÉu r√µ b·∫£n ch·∫•t c·ªßa hi·ªán t∆∞·ª£ng giao thoa
                            s√≥ng]</span>.
                        H√£y <span class="bg-blue-200 px-1 rounded">[gi·∫£i th√≠ch ƒëi·ªÅu ki·ªán ƒë·ªÉ c√≥ giao thoa, ƒë∆∞a ra c√¥ng
                            th·ª©c t√≠nh v·ªã tr√≠ c·ª±c ƒë·∫°i, c·ª±c ti·ªÉu v√† cho 2 v√≠ d·ª• minh h·ªça d·ªÖ hi·ªÉu]</span>.
                        Cu·ªëi c√πng, <span class="bg-purple-200 px-1 rounded">[h√£y cho t√¥i 3 b√†i t·∫≠p tr·∫Øc nghi·ªám v·ªÅ d·∫°ng
                            n√†y ƒë·ªÉ luy·ªán t·∫≠p]</span>.
                    </p>
                </div>
                <div class="response-block mt-4">
                    <p class="font-semibold text-green-800"><i class="fas fa-robot mr-2"></i> AI s·∫Ω tr·∫£ l·ªùi m·ªôt c√°ch chi
                        ti·∫øt v√† ƒë·∫ßy ƒë·ªß:</p>
                    <p class="mt-2">Ch√†o b·∫°n, r·∫•t vui ƒë∆∞·ª£c gi√∫p b·∫°n √¥n t·∫≠p ph·∫ßn giao thoa s√≥ng. D∆∞·ªõi ƒë√¢y l√† gi·∫£i th√≠ch
                        chi ti·∫øt...</p>
                    <ul class="list-disc list-inside mt-2 space-y-1">
                        <li>Gi·∫£i th√≠ch hi·ªán t∆∞·ª£ng.</li>
                        <li>ƒêi·ªÅu ki·ªán (2 ngu·ªìn k·∫øt h·ª£p).</li>
                        <li>C√¥ng th·ª©c c·ª±c ƒë·∫°i, c·ª±c ti·ªÉu.</li>
                        <li>V√≠ d·ª• minh h·ªça (giao thoa s√≥ng n∆∞·ªõc).</li>
                        <li>3 c√¢u h·ªèi tr·∫Øc nghi·ªám.</li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Slide 10: T·ªëi ∆∞u h√≥a ghi ch√∫ -->
        <div id="slide-10" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-2 text-center">·ª®ng d·ª•ng 1: T·ªëi ∆∞u h√≥a ghi ch√∫</h3>
                <p class="text-2xl text-center text-gray-600 mb-8">Bi·∫øn ghi ch√∫ l·ªôn x·ªôn th√†nh t√†i li·ªáu d·ªÖ h·ªçc</p>
                <div class="grid md:grid-cols-2 gap-8 items-center">
                    <div>
                        <h4 class="text-xl font-bold mb-2">V·∫•n ƒë·ªÅ th∆∞·ªùng g·∫∑p:</h4>
                        <ul class="list-disc list-inside space-y-2 text-lg">
                            <li>Ghi ch√∫ v·ªôi, ch·ªØ x·∫•u, kh√≥ ƒë·ªçc l·∫°i.</li>
                            <li>Thi·∫øu c·∫•u tr√∫c, kh√¥ng h·ªá th·ªëng.</li>
                            <li>T·ªën th·ªùi gian ƒë·ªÉ ch√©p l·∫°i, s·∫Øp x·∫øp.</li>
                        </ul>
                        <img src="https://placehold.co/400x250/fca5a5/7f1d1d?text=Ghi+ch%C3%BA+l%E1%BB%99n+x%E1%BB%99n"
                            alt="Ghi ch√∫ l·ªôn x·ªôn" class="slide-image mt-4">
                    </div>
                    <div>
                        <h4 class="text-xl font-bold text-green-700 mb-2">Gi·∫£i ph√°p v·ªõi AI:</h4>
                        <ul class="list-disc list-inside space-y-2 text-lg">
                            <li>AI t·ª± ƒë·ªông s·∫Øp x·∫øp l·∫°i ghi ch√∫.</li>
                            <li>T·∫°o b·∫£ng bi·ªÉu, d√†n √Ω r√µ r√†ng.</li>
                            <li>B·ªï sung c√°c ph·∫ßn c√≤n thi·∫øu (n·∫øu c·∫ßn).</li>
                        </ul>
                        <img src="https://placehold.co/400x250/86efac/14532d?text=Ghi+ch%C3%BA+c%C3%B3+c%E1%BA%A5u+tr%C3%BAc"
                            alt="Ghi ch√∫ c√≥ c·∫•u tr√∫c" class="slide-image mt-4">
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 11: C√°ch l√†m - T·ªëi ∆∞u ghi ch√∫ -->
        <div id="slide-11" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6 text-center">C√°ch l√†m: T·ªëi ∆∞u ghi ch√∫</h3>
                <h4 class="text-xl font-bold mb-2">B∆∞·ªõc 1: Chu·∫©n b·ªã ghi ch√∫ th√¥</h4>
                <div class="note-block">
                    <p>N·ªôi dung b√†i: T·∫ø b√†o. t·∫ø b√†o l√† ƒë∆°n v·ªã c∆° b·∫£n. c√≥ m√†ng, ch·∫•t t·∫ø b√†o, nh√¢n. t·∫ø b√†o nh√¢n th·ª±c kh√°c
                        t·∫ø b√†o nh√¢n s∆°. ty th·ªÉ t·∫°o ra nƒÉng l∆∞·ª£ng. l·ª•c l·∫°p ·ªü tv, qh·ª£p</p>
                </div>
                <h4 class="text-xl font-bold mb-2 mt-6">B∆∞·ªõc 2: Ra l·ªánh cho AI</h4>
                <div class="prompt-block">
                    <p>"Gi√∫p t√¥i s·∫Øp x·∫øp l·∫°i c√°c ghi ch√∫ sau v·ªÅ b√†i 'T·∫ø b√†o' th√†nh m·ªôt b·∫£ng g·ªìm 3 c·ªôt: Kh√°i ni·ªám, ƒê·∫∑c
                        ƒëi·ªÉm ch√≠nh, v√† Ch·ª©c nƒÉng. N·∫øu th·∫•y ph·∫ßn n√†o c√≤n thi·∫øu, h√£y b·ªï sung ng·∫Øn g·ªçn."</p>
                </div>
                <h4 class="text-xl font-bold mb-2 mt-6">B∆∞·ªõc 3: Nh·∫≠n k·∫øt qu·∫£</h4>
                <div class="response-block overflow-x-auto">
                    <table class="w-full text-left text-sm">
                        <thead class="bg-green-100">
                            <tr>
                                <th class="p-2">Kh√°i ni·ªám</th>
                                <th class="p-2">ƒê·∫∑c ƒëi·ªÉm ch√≠nh</th>
                                <th class="p-2">Ch·ª©c nƒÉng</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="border-b">
                                <td class="p-2 font-semibold">T·∫ø b√†o</td>
                                <td class="p-2">ƒê∆°n v·ªã c∆° b·∫£n c·ªßa s·ª± s·ªëng</td>
                                <td class="p-2">C·∫•u t·∫°o, duy tr√¨ v√† ph√°t tri·ªÉn c∆° th·ªÉ</td>
                            </tr>
                            <tr class="border-b">
                                <td class="p-2 font-semibold">T·∫ø b√†o nh√¢n th·ª±c</td>
                                <td class="p-2">C√≥ m√†ng nh√¢n, h·ªá th·ªëng n·ªôi m√†ng ph·ª©c t·∫°p</td>
                                <td class="p-2">C·∫•u t·∫°o n√™n ƒêV, TV, N·∫•m</td>
                            </tr>
                            <tr class="border-b">
                                <td class="p-2 font-semibold">Ty th·ªÉ</td>
                                <td class="p-2">B√†o quan c√≥ m√†ng k√©p</td>
                                <td class="p-2">"Nh√† m√°y nƒÉng l∆∞·ª£ng" - t·∫°o ATP</td>
                            </tr>
                            <tr>
                                <td class="p-2 font-semibold">L·ª•c l·∫°p</td>
                                <td class="p-2">(B·ªï sung) Ch·ª©a di·ªáp l·ª•c, ch·ªâ c√≥ ·ªü TV</td>
                                <td class="p-2">(B·ªï sung) Th·ª±c hi·ªán quang h·ª£p</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Slide 12: T·∫°o c√¢u h·ªèi √¥n t·∫≠p -->
        <div id="slide-12" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-2 text-center">·ª®ng d·ª•ng 2: T·∫°o c√¢u h·ªèi √¥n t·∫≠p</h3>
                <p class="text-2xl text-center text-gray-600 mb-8">H·ªçc ch·ªß ƒë·ªông b·∫±ng c√°ch t·ª± ki·ªÉm tra ki·∫øn th·ª©c</p>
                <div class="text-center mb-6">
                    <p class="text-xl text-gray-700"><strong>T·∫°i sao c·∫ßn luy·ªán t·∫≠p b·∫±ng c√¢u h·ªèi?</strong></p>
                    <p class="text-lg text-gray-600">H·ªçc b·∫±ng c√°ch tr·∫£ l·ªùi c√¢u h·ªèi (Active Recall) gi√∫p b·∫°n ghi nh·ªõ l√¢u
                        v√† s√¢u h∆°n nhi·ªÅu so v·ªõi vi·ªác ch·ªâ ƒë·ªçc l·∫°i (Passive Review).</p>
                </div>
                <img src="https://placehold.co/700x300/a5b4fc/1e1b4b?text=Active+Recall+%3E+Passive+Review"
                    alt="Active Recall is better than Passive Review" class="slide-image mx-auto">
            </div>
        </div>

        <!-- Slide 13: C√°ch l√†m - T·∫°o c√¢u h·ªèi -->
        <div id="slide-13" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6 text-center">C√°ch l√†m: T·∫°o c√¢u h·ªèi √¥n t·∫≠p</h3>
                <h4 class="text-xl font-bold mb-2">C√°ch 1: T·∫°o t·ª´ ghi ch√∫ c√≥ s·∫µn</h4>
                <div class="prompt-block">
                    <p>"D·ª±a tr√™n ghi ch√∫ sau, h√£y t·∫°o cho t√¥i 3 c√¢u h·ªèi tr·∫Øc nghi·ªám v√† 1 c√¢u h·ªèi t·ª± lu·∫≠n ng·∫Øn: [d√°n ghi
                        ch√∫ v·ªÅ b√†i T·∫ø b√†o v√†o ƒë√¢y]"</p>
                </div>
                <h4 class="text-xl font-bold mb-2 mt-6">C√°ch 2: T·∫°o t·ª´ m·ª•c ti√™u h·ªçc t·∫≠p</h4>
                <p class="text-gray-600 mb-2">Khi b·∫°n ch∆∞a c√≥ ghi ch√∫, h√£y d√πng ch√≠nh ƒë·ªÅ c∆∞∆°ng ho·∫∑c m·ª•c ti√™u trong s√°ch
                    gi√°o khoa.</p>
                <div class="prompt-block">
                    <p>"T√¥i ƒëang h·ªçc b√†i 'Quang h·ª£p ·ªü th·ª±c v·∫≠t'. M·ª•c ti√™u c·∫ßn n·∫Øm l√†: 'Tr√¨nh b√†y ƒë∆∞·ª£c kh√°i ni·ªám quang
                        h·ª£p, vi·∫øt ph∆∞∆°ng tr√¨nh t·ªïng qu√°t, n√™u vai tr√≤ c·ªßa quang h·ª£p'. H√£y t·∫°o 5 c√¢u h·ªèi √¥n t·∫≠p (c·∫£ tr·∫Øc
                        nghi·ªám v√† t·ª± lu·∫≠n) bao qu√°t c√°c m·ª•c ti√™u n√†y."</p>
                </div>
                <div class="response-block mt-4">
                    <p class="font-semibold text-green-800"><i class="fas fa-robot mr-2"></i> K·∫øt qu·∫£ t·ª´ AI:</p>
                    <p class="mt-2"><strong>C√¢u 1 (TN):</strong> ƒê√¢u l√† s·∫£n ph·∫©m c·ªßa qu√° tr√¨nh quang h·ª£p?<br>
                        A. O‚ÇÇ v√† H‚ÇÇO &nbsp;&nbsp; B. CO‚ÇÇ v√† NƒÉng l∆∞·ª£ng &nbsp;&nbsp; C. C‚ÇÜH‚ÇÅ‚ÇÇO‚ÇÜ v√† O‚ÇÇ ...</p>
                    <p class="mt-2"><strong>C√¢u 2 (TL):</strong> N√™u vai tr√≤ c·ªßa quang h·ª£p ƒë·ªëi v·ªõi sinh gi·ªõi.</p>
                </div>
            </div>
        </div>

        <!-- Slide 14: L∆∞u √Ω quan tr·ªçng -->
        <div id="slide-14" class="slide">
            <div class="slide-content-wrapper text-center">
                <i class="fas fa-exclamation-triangle text-6xl text-amber-500 mb-6"></i>
                <h3 class="text-4xl font-semibold text-gray-800 mb-8">L∆∞u √ù C·ª±c K·ª≥ Quan Tr·ªçng!</h3>
                <div class="text-left max-w-2xl mx-auto space-y-5 text-xl">
                    <div class="bg-gray-100 p-5 rounded-lg flex items-start">
                        <i class="fas fa-user-check text-blue-500 mr-4 mt-1"></i>
                        <p><strong>Lu√¥n ki·ªÉm tra l·∫°i th√¥ng tin.</strong> AI c√≥ th·ªÉ sai ho·∫∑c ƒë∆∞a ra th√¥ng tin kh√¥ng ph√π
                            h·ª£p. H√£y ƒë·ªëi chi·∫øu v·ªõi s√°ch gi√°o khoa v√† t√†i li·ªáu ch√≠nh th·ªëng.</p>
                    </div>
                    <div class="bg-gray-100 p-5 rounded-lg flex items-start">
                        <i class="fas fa-brain text-green-500 mr-4 mt-1"></i>
                        <p><strong>AI l√† c√¥ng c·ª•, kh√¥ng ph·∫£i b·ªô n√£o thay th·∫ø.</strong> B·∫°n v·∫´n ph·∫£i l√† ng∆∞·ªùi ch·ªß ƒë·ªông t∆∞
                            duy, hi·ªÉu v√† ghi nh·ªõ ki·∫øn th·ª©c.</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 15: B√†i t·∫≠p th·ª±c h√†nh -->
        <div id="slide-15" class="slide">
            <div class="slide-content-wrapper text-center">
                <i class="fas fa-laptop-code text-6xl text-indigo-500 mb-6"></i>
                <h2 class="text-5xl font-bold text-indigo-700 mb-6">B√†i T·∫≠p Th·ª±c H√†nh</h2>
                <p class="text-2xl text-gray-700 mb-8 max-w-3xl mx-auto">B√¢y gi·ªù, h√£y c√πng √°p d·ª•ng nh·ªØng g√¨ ƒë√£ h·ªçc ƒë·ªÉ
                    gi·∫£i quy·∫øt m·ªôt t√¨nh hu·ªëng th·ª±c t·∫ø!</p>
                <img src="https://placehold.co/500x300/818cf8/ffffff?text=Let's+Practice!" alt="Th·ª±c h√†nh"
                    class="slide-image mx-auto">
            </div>
        </div>

        <!-- Slide 16: Th·ª±c h√†nh - Task 1 -->
        <div id="slide-16" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-4 text-center">Th·ª±c h√†nh - Nhi·ªám v·ª• 1</h3>
                <p class="text-2xl text-center text-gray-600 mb-6">S·∫Øp x·∫øp l·∫°i ghi ch√∫ l·ªôn x·ªôn</p>
                <h4 class="font-bold text-lg">T√¨nh hu·ªëng:</h4>
                <p class="mb-4">B·∫°n v·ª´a h·ªçc xong b√†i "C√°c t√°c ph·∫©m ch√≠nh c·ªßa Nguy·ªÖn Du" v√† c√≥ m·ªôt m·ªõ ghi ch√∫ nh∆∞ sau:
                </p>
                <div class="note-block">
                    <p>Nguy·ªÖn Du, ƒë·∫°i thi h√†o. c√≥ truy·ªán ki·ªÅu ƒë·ªânh nh·∫•t, t√™n ch·ªØ l√† thanh t√¢m t√†i nh√¢n. vi·∫øt b·∫±ng ch·ªØ
                        n√¥m. c√≤n c√≥ vƒÉn chi√™u h·ªìn n·ªØa, th∆° ch·ªØ h√°n th√¨ c√≥ thanh hi√™n thi t·∫≠p, nam trung t·∫°p ng√¢m, b·∫Øc
                        h√†nh t·∫°p l·ª•c. truy·ªán ki·ªÅu c√≤n g·ªçi l√† ƒëo·∫°n tr∆∞·ªùng t√¢n thanh. n·ªôi dung v·ªÅ s·ªë ph·∫≠n ph·ª• n·ªØ. gi√° tr·ªã
                        nh√¢n ƒë·∫°o.</p>
                </div>
                <h4 class="font-bold text-lg mt-6">Y√™u c·∫ßu:</h4>
                <p>H√£y vi·∫øt m·ªôt prompt ƒë·ªÉ y√™u c·∫ßu AI s·∫Øp x·∫øp l·∫°i c√°c th√¥ng tin tr√™n th√†nh m·ªôt b·∫£ng r√µ r√†ng, ph√¢n lo·∫°i
                    theo <strong>T√°c ph·∫©m ch·ªØ N√¥m</strong> v√† <strong>T√°c ph·∫©m ch·ªØ H√°n</strong>, c√≥ c·ªôt ghi ch√∫ th√™m v·ªÅ
                    n·ªôi dung ho·∫∑c ƒë·∫∑c ƒëi·ªÉm n·ªïi b·∫≠t.</p>
            </div>
        </div>

        <!-- Slide 17: Th·ª±c h√†nh - Task 2 -->
        <div id="slide-17" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-4 text-center">Th·ª±c h√†nh - Nhi·ªám v·ª• 2</h3>
                <p class="text-2xl text-center text-gray-600 mb-6">T·∫°o c√¢u h·ªèi √¥n t·∫≠p</p>
                <h4 class="font-bold text-lg">T√¨nh hu·ªëng:</h4>
                <p class="mb-4">B·∫°n ƒë√£ c√≥ b·∫£ng th√¥ng tin g·ªçn g√†ng v·ªÅ c√°c t√°c ph·∫©m c·ªßa Nguy·ªÖn Du t·ª´ Nhi·ªám v·ª• 1.</p>
                <h4 class="font-bold text-lg mt-6">Y√™u c·∫ßu:</h4>
                <p>H√£y vi·∫øt m·ªôt prompt ƒë·ªÉ y√™u c·∫ßu AI t·∫°o ra:</p>
                <ul class="list-disc list-inside mt-2 space-y-2 text-lg">
                    <li><strong>3 c√¢u h·ªèi tr·∫Øc nghi·ªám</strong> ƒë·ªÉ ki·ªÉm tra vi·ªác ghi nh·ªõ t√™n t√°c ph·∫©m.</li>
                    <li><strong>2 c√¢u h·ªèi t·ª± lu·∫≠n ng·∫Øn</strong> ƒë·ªÉ ki·ªÉm tra hi·ªÉu bi·∫øt v·ªÅ n·ªôi dung v√† gi√° tr·ªã c·ªßa Truy·ªán
                        Ki·ªÅu.</li>
                </ul>
            </div>
        </div>

        <!-- Slide 18: T·ªïng k·∫øt -->
        <div id="slide-18" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-indigo-700 mb-8">T·ªïng K·∫øt Bu·ªïi H·ªçc</h2>
                <div class="text-xl text-gray-700 space-y-5 max-w-3xl text-left bg-gray-50 p-8 rounded-lg shadow">
                    <p><i class="fas fa-check-circle text-green-500 mr-3"></i>Ch√∫ng ta ƒë√£ hi·ªÉu <strong>Prompt l√†
                            g√¨</strong> v√† t·∫°i sao n√≥ quan tr·ªçng.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-3"></i>N·∫Øm ƒë∆∞·ª£c <strong>c√¥ng th·ª©c vi·∫øt prompt
                            hi·ªáu qu·∫£</strong> ƒë·ªÉ AI hi·ªÉu ƒë√∫ng √Ω.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-3"></i>Bi·∫øt c√°ch d√πng AI ƒë·ªÉ <strong>h·ªá th·ªëng h√≥a
                            ghi ch√∫</strong> v√† <strong>t·∫°o c√¢u h·ªèi √¥n t·∫≠p</strong>.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-3"></i>Lu√¥n nh·ªõ ph·∫£i <strong>ki·ªÉm ch·ª©ng th√¥ng
                            tin</strong> v√† xem AI nh∆∞ m·ªôt c√¥ng c·ª• h·ªó tr·ª£.</p>
                </div>
                <div
                    class="mt-12 bg-indigo-100 border-l-4 border-indigo-500 text-indigo-700 p-6 rounded-r-lg shadow-lg w-full max-w-3xl">
                    <h4 class="text-2xl font-bold mb-2">H·∫πn g·∫∑p l·∫°i ·ªü Bu·ªïi 3!</h4>
                    <p class="text-lg">Ch√∫ng ta s·∫Ω ti·∫øp t·ª•c kh√°m ph√° nh·ªØng ·ª©ng d·ª•ng s√°ng t·∫°o kh√°c c·ªßa AI!</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const slides = Array.from(document.querySelectorAll('.slide'));
            const prevButton = document.getElementById('prevSlide');
            const nextButton = document.getElementById('nextSlide');
            const currentSlideNumDisplay = document.getElementById('currentSlideNum');
            const totalSlidesNumDisplay = document.getElementById('totalSlidesNum');

            let currentSlide = 0;

            if (slides.length > 0) {
                totalSlidesNumDisplay.textContent = slides.length;
            } else {
                if (currentSlideNumDisplay) currentSlideNumDisplay.textContent = '0';
                if (totalSlidesNumDisplay) totalSlidesNumDisplay.textContent = '0';
            }

            function showSlide(index) {
                slides.forEach((slide, i) => {
                    if (i === index) {
                        slide.style.display = 'flex';
                        setTimeout(() => slide.classList.add('active'), 10);
                    } else {
                        slide.classList.remove('active');
                        setTimeout(() => {
                            if (!slide.classList.contains('active')) {
                                slide.style.display = 'none';
                            }
                        }, 500); // Must match the transition duration in CSS
                    }
                });
                if (currentSlideNumDisplay) {
                    currentSlideNumDisplay.textContent = index + 1;
                }
                updateNavButtons();
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }

            function updateNavButtons() {
                if (!prevButton || !nextButton) return;
                prevButton.disabled = currentSlide === 0;
                nextButton.disabled = currentSlide === slides.length - 1;
            }

            // Setup navigation
            if (prevButton && nextButton) {
                prevButton.addEventListener('click', () => {
                    if (currentSlide > 0) {
                        currentSlide--;
                        showSlide(currentSlide);
                    }
                });

                nextButton.addEventListener('click', () => {
                    if (currentSlide < slides.length - 1) {
                        currentSlide++;
                        showSlide(currentSlide);
                    }
                });
            }

            // Initial setup
            if (slides.length > 0) {
                showSlide(currentSlide);
            }
        });
    </script>
</body>

</html>

/* ===== Hau/khmt/index.html ===== */
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Thuy·∫øt tr√¨nh: Nghi√™n c·ª©u c√¥ng ngh·ªá Fine-tuning v√† thu·∫≠t to√°n Transformer trong X·ª≠ l√Ω Ng√¥n ng·ªØ T·ª± nhi√™n
    </title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/lucide@latest"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@300;400;500;600;700;800&display=swap"
        rel="stylesheet">
    <style>
        html,
        body {
            height: 100%;
            margin: 0;
            padding: 0;
            overflow: hidden;
            font-family: 'Be Vietnam Pro', sans-serif;
            background-color: #f8fafc;
            /* gray-50 */
        }

        #presentation-container {
            width: 100vw;
            height: 100vh;
            position: relative;
        }

        .slide {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.6s ease-in-out, transform 0.6s ease-in-out;
            transform: scale(0.98);
            pointer-events: none;
            padding: 4rem;
        }

        .slide.active {
            opacity: 1;
            transform: scale(1);
            pointer-events: auto;
        }

        .slide-content {
            animation: fadeInContent 1s ease-in-out;
            width: 100%;
            max-width: 1100px;
            margin: 0 auto;
        }

        @keyframes fadeInContent {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .animated-item {
            animation: fadeInItem 0.5s ease-in-out forwards;
            opacity: 0;
        }

        @keyframes fadeInItem {
            from {
                opacity: 0;
                transform: translateY(15px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .nav-button {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            z-index: 10;
            background-color: rgba(0, 0, 0, 0.3);
            color: white;
            border-radius: 50%;
            width: 44px;
            height: 44px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: background-color 0.3s ease, opacity 0.3s ease;
            opacity: 0.5;
        }

        .nav-button:hover {
            background-color: rgba(0, 0, 0, 0.6);
            opacity: 1;
        }

        .nav-button:disabled {
            opacity: 0.1;
            cursor: not-allowed;
        }

        #prevBtn {
            left: 20px;
        }

        #nextBtn {
            right: 20px;
        }

        #slide-counter {
            position: absolute;
            bottom: 20px;
            right: 20px;
            z-index: 10;
            background-color: rgba(0, 0, 0, 0.4);
            color: white;
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 14px;
        }

        #progress-bar {
            position: absolute;
            bottom: 0;
            left: 0;
            height: 4px;
            background-color: #3b82f6;
            z-index: 10;
            transition: width 0.3s ease;
        }
    </style>
</head>

<body>
    <div id="presentation-container">
        <!-- Slide 1: Ti√™u ƒë·ªÅ -->
        <div
            class="slide active items-center text-center bg-gradient-to-br from-gray-900 via-blue-900 to-indigo-900 text-white">
            <img src="https://placehold.co/100x100/ffffff/000000?text=HAU" alt="HAU Logo"
                class="absolute top-6 left-6 h-[70px] w-[70px] z-10 rounded-full"
                onerror="this.onerror=null; this.src='https://placehold.co/100x100/ffffff/000000?text=HAU';">
            <div class="slide-content">
                <p class="text-2xl md:text-3xl text-blue-300 mb-4 animated-item" style="animation-delay: 0.2s;">
                    Khoa h·ªçc m√°y t√≠nh v√† C√¥ng ngh·ªá ph·∫ßn m·ªÅm</p>
                <h1 class="text-5xl md:text-7xl font-extrabold mb-8 animated-item" style="animation-delay: 0.4s;">
                    Nghi√™n c·ª©u c√¥ng ngh·ªá Fine-tuning v√† thu·∫≠t to√°n Transformer trong X·ª≠ l√Ω Ng√¥n ng·ªØ T·ª± nhi√™n</h1>
                <div class="text-left mx-auto max-w-2xl bg-black bg-opacity-20 p-6 rounded-2xl border border-gray-700 animated-item"
                    style="animation-delay: 0.6s;">
                    <p class="text-lg mb-2"><span class="font-semibold text-gray-400">GVHD:</span> Th.s Nguy·ªÖn Qu·ªëc Huy
                    </p>
                    <p class="text-lg font-semibold mb-2 text-gray-300">Nh√≥m 1 th·ª±c hi·ªán:</p>
                    <ul class="grid grid-cols-2 gap-x-8 gap-y-1 text-base text-gray-300">
                        <li>Nguy·ªÖn V≈© Minh Long - 2155010151</li>
                        <li>Nguy·ªÖn Duy ƒê·∫°t - 2155010066</li>
                        <li>Nguy·ªÖn H·ªØu Tu·∫•n - 2155010236</li>
                        <li>Nguy·ªÖn Duy Huy - 2155010121</li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Slide 2: B·ªë c·ª•c -->
        <div class="slide bg-gray-50">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-12 border-l-8 border-blue-600 pl-6">N·ªôi dung tr√¨nh b√†y
                </h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-8 text-xl">
                    <div class="animated-item bg-white p-6 rounded-lg shadow-md flex items-center"
                        style="animation-delay: 0.2s;">
                        <i data-lucide="book-open" class="w-10 h-10 text-blue-600 mr-5"></i>
                        <div>
                            <h3 class="font-semibold text-2xl text-gray-800">Ch∆∞∆°ng 1: C∆° s·ªü l√Ω thuy·∫øt</h3>
                            <p class="text-gray-600">NLP, Transformer, T5 v√† Fine-tuning.</p>
                        </div>
                    </div>
                    <div class="animated-item bg-white p-6 rounded-lg shadow-md flex items-center"
                        style="animation-delay: 0.3s;">
                        <i data-lucide="cog" class="w-10 h-10 text-blue-600 mr-5"></i>
                        <div>
                            <h3 class="font-semibold text-2xl text-gray-800">Ch∆∞∆°ng 2: Ph√¢n t√≠ch & Hu·∫•n luy·ªán</h3>
                            <p class="text-gray-600">B√†i to√°n, d·ªØ li·ªáu v√† quy tr√¨nh Fine-tuning.</p>
                        </div>
                    </div>
                    <div class="animated-item bg-white p-6 rounded-lg shadow-md flex items-center"
                        style="animation-delay: 0.4s;">
                        <i data-lucide="bar-chart-3" class="w-10 h-10 text-blue-600 mr-5"></i>
                        <div>
                            <h3 class="font-semibold text-2xl text-gray-800">Ch∆∞∆°ng 3: Th·ª±c nghi·ªám & ƒê√°nh gi√°</h3>
                            <p class="text-gray-600">K·∫øt qu·∫£, v√≠ d·ª• th√†nh c√¥ng v√† h·∫°n ch·∫ø.</p>
                        </div>
                    </div>
                    <div class="animated-item bg-white p-6 rounded-lg shadow-md flex items-center"
                        style="animation-delay: 0.5s;">
                        <i data-lucide="flag" class="w-10 h-10 text-blue-600 mr-5"></i>
                        <div>
                            <h3 class="font-semibold text-2xl text-gray-800">K·∫øt lu·∫≠n & H∆∞·ªõng ph√°t tri·ªÉn</h3>
                            <p class="text-gray-600">T·ªïng k·∫øt v√† c√°c b∆∞·ªõc ƒëi ti·∫øp theo.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 3: Gi·ªõi thi·ªáu NLP -->
        <div class="slide bg-white">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-8 border-l-8 border-blue-600 pl-6">Ch∆∞∆°ng 1: C∆° S·ªü L√Ω
                    Thuy·∫øt</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-12 items-center">
                    <div class="animated-item" style="animation-delay: 0.2s;">
                        <h3 class="text-3xl font-semibold text-blue-700 mb-4">X·ª≠ l√Ω Ng√¥n ng·ªØ T·ª± nhi√™n (NLP) l√† g√¨?</h3>
                        <p class="text-gray-600 leading-relaxed text-lg">L√† lƒ©nh v·ª±c c·ªßa AI gi√∫p m√°y t√≠nh c√≥ kh·∫£ nƒÉng
                            <span class="font-semibold text-blue-600">hi·ªÉu, di·ªÖn gi·∫£i v√† t·∫°o ra</span> ng√¥n ng·ªØ c·ªßa con
                            ng∆∞·ªùi, thu h·∫πp kho·∫£ng c√°ch giao ti·∫øp gi·ªØa ng∆∞·ªùi v√† m√°y.
                        </p>
                        <div class="mt-6 space-y-3">
                            <div class="flex items-center"><i data-lucide="bot"
                                    class="w-6 h-6 mr-3 text-green-500"></i><span class="text-gray-700">Chatbots & Tr·ª£
                                    l√Ω ·∫£o</span></div>
                            <div class="flex items-center"><i data-lucide="languages"
                                    class="w-6 h-6 mr-3 text-green-500"></i><span class="text-gray-700">D·ªãch m√°y (Google
                                    Translate)</span></div>
                            <div class="flex items-center"><i data-lucide="spell-check-2"
                                    class="w-6 h-6 mr-3 text-green-500"></i><span class="text-gray-700">S·ª≠a l·ªói ch√≠nh t·∫£
                                    & Ng·ªØ ph√°p</span></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 4: B·ªëi c·∫£nh ra ƒë·ªùi Transformer -->
        <div class="slide bg-gray-50">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-8 border-l-8 border-blue-600 pl-6">B·ªëi c·∫£nh ra ƒë·ªùi
                    Transformer</h2>
                <div class="grid md:grid-cols-2 gap-10 items-center">
                    <div class="animated-item" style="animation-delay: 0.2s;">
                        <h3 class="text-3xl font-semibold text-red-700 mb-4">H·∫°n ch·∫ø c·ªßa m√¥ h√¨nh tu·∫ßn t·ª± (RNN/LSTM)</h3>
                        <ul class="space-y-3 text-lg text-gray-600 list-disc list-inside">
                            <li><strong>X·ª≠ l√Ω tu·∫ßn t·ª±:</strong> Kh√¥ng th·ªÉ x·ª≠ l√Ω song song, g√¢y ch·∫≠m ch·∫°p khi hu·∫•n luy·ªán
                                tr√™n c√°c chu·ªói d√†i.</li>
                            <li><strong>Ph·ª• thu·ªôc xa:</strong> Kh√≥ n·∫Øm b·∫Øt m·ªëi quan h·ªá gi·ªØa c√°c t·ª´ ·ªü c√°ch xa nhau do v·∫•n
                                ƒë·ªÅ "bi·∫øn m·∫•t gradient".</li>
                            <li><strong>N√∫t th·∫Øt c·ªï chai th√¥ng tin:</strong> To√†n b·ªô c√¢u ƒë·∫ßu v√†o b·ªã n√©n v√†o m·ªôt vector
                                ng·ªØ c·∫£nh duy nh·∫•t.</li>
                        </ul>
                    </div>
                    <div class="animated-item" style="animation-delay: 0.4s;">
                        <h3 class="text-3xl font-semibold text-green-700 mb-4">Gi·∫£i ph√°p ƒë·ªôt ph√° t·ª´ Google Brain</h3>
                        <div class="bg-white p-6 rounded-lg shadow-lg border-l-4 border-green-500">
                            <p class="text-lg text-gray-700">NƒÉm 2017, b√†i b√°o <strong class="text-green-800">"Attention
                                    Is All You Need"</strong> ƒë√£ gi·ªõi thi·ªáu ki·∫øn tr√∫c Transformer.</p>
                            <p class="text-lg text-gray-600 mt-3">Ho√†n to√†n lo·∫°i b·ªè c∆° ch·∫ø tu·∫ßn t·ª± v√† ch·ªâ d·ª±a v√†o
                                <strong class="text-green-800">Self-Attention</strong>, m·ªü ra k·ª∑ nguy√™n m·ªõi cho c√°c m√¥
                                h√¨nh ng√¥n ng·ªØ l·ªõn.
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 5: Ki·∫øn tr√∫c Transformer & Self-Attention -->
        <div class="slide bg-white">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-8 border-l-8 border-blue-600 pl-6">C∆° ch·∫ø Self-Attention
                </h2>
                <p class="text-xl text-gray-600 max-w-4xl mb-8 animated-item" style="animation-delay: 0.2s;">
                    Self-Attention cho ph√©p m·ªói t·ª´ trong c√¢u t√≠nh to√°n m·ª©c ƒë·ªô li√™n quan v·ªõi T·∫§T C·∫¢ c√°c t·ª´ kh√°c, t·∫°o ra
                    m·ªôt bi·ªÉu di·ªÖn ng·ªØ c·∫£nh phong ph√∫ h∆°n.
                </p>
                <div class="bg-gray-50 p-6 rounded-xl shadow-lg animated-item" style="animation-delay: 0.4s;">
                    <div
                        class="flex flex-col md:flex-row items-center justify-around space-y-4 md:space-y-0 md:space-x-4 text-center">
                        <div class="font-mono p-3 bg-white rounded shadow w-full md:w-auto">Input: "m√®o"</div>
                        <i data-lucide="arrow-right" class="transform rotate-90 md:rotate-0"></i>
                        <div class="flex space-x-2 w-full md:w-auto">
                            <div class="flex-1 p-3 bg-blue-100 text-blue-800 rounded shadow">Query (Q)<br /><span
                                    class="text-xs">T√¥i ƒëang t√¨m g√¨?</span></div>
                            <div class="flex-1 p-3 bg-yellow-100 text-yellow-800 rounded shadow">Key (K)<br /><span
                                    class="text-xs">T√¥i c√≥ th√¥ng tin g√¨?</span></div>
                            <div class="flex-1 p-3 bg-green-100 text-green-800 rounded shadow">Value (V)<br /><span
                                    class="text-xs">T√¥i mang gi√° tr·ªã g√¨?</span></div>
                        </div>
                    </div>
                    <div class="text-center my-4">
                        <i data-lucide="arrow-down" class="text-gray-400 w-8 h-8"></i>
                        <p class="text-gray-600 font-semibold">Attention Score = softmax( (Q * K·µÄ) / ‚àöd‚Çñ ) * V</p>
                        <i data-lucide="arrow-down" class="text-gray-400 w-8 h-8"></i>
                    </div>
                    <div class="p-4 bg-indigo-100 text-indigo-800 rounded shadow text-center">
                        <p class="font-bold text-lg">Output: Vector "m√®o" ƒë√£ ƒë∆∞·ª£c l√†m gi√†u ng·ªØ c·∫£nh</p>
                        <p class="text-sm">(V√≠ d·ª•: Hi·ªÉu r·∫±ng "m√®o" trong "con m√®o ƒëen" li√™n quan ƒë·∫øn "ƒëen" h∆°n "con")
                        </p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 6: M√¥ h√¨nh T5 -->
        <div class="slide bg-gray-50">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-8 border-l-8 border-blue-600 pl-6">M√¥ h√¨nh T5: M·ªôt cho
                    t·∫•t c·∫£</h2>
                <p class="text-xl text-gray-600 max-w-4xl mb-10 animated-item" style="animation-delay: 0.2s;">
                    T5 (Text-to-Text Transfer Transformer) ƒë·ªÅ xu·∫•t m·ªôt √Ω t∆∞·ªüng ƒë·ªôt ph√°: th·ªëng nh·∫•t m·ªçi b√†i to√°n NLP v·ªÅ
                    m·ªôt ƒë·ªãnh d·∫°ng duy nh·∫•t: <span class="font-semibold text-blue-600">nh·∫≠n v√†o m·ªôt chu·ªói vƒÉn b·∫£n v√† sinh
                        ra m·ªôt chu·ªói vƒÉn b·∫£n</span>.
                </p>
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                    <div class="bg-white p-6 rounded-xl shadow-md animated-item" style="animation-delay: 0.4s;">
                        <h4 class="text-xl font-bold text-gray-800 mb-3">D·ªãch m√°y</h4>
                        <p class="font-mono bg-gray-200 p-2 rounded text-sm text-gray-700">
                            <span class="text-red-600">d·ªãch Anh sang Vi·ªát:</span> a cat
                        </p>
                        <i data-lucide="arrow-right" class="my-2 text-blue-500"></i>
                        <p class="font-mono bg-blue-100 p-2 rounded text-sm text-blue-800">m·ªôt con m√®o</p>
                    </div>
                    <div class="bg-white p-6 rounded-xl shadow-md animated-item" style="animation-delay: 0.5s;">
                        <h4 class="text-xl font-bold text-gray-800 mb-3">T√≥m t·∫Øt</h4>
                        <p class="font-mono bg-gray-200 p-2 rounded text-sm text-gray-700">
                            <span class="text-red-600">t√≥m t·∫Øt:</span> H√† N·ªôi l√† th·ªß ƒë√¥ c·ªßa Vi·ªát Nam...
                        </p>
                        <i data-lucide="arrow-right" class="my-2 text-blue-500"></i>
                        <p class="font-mono bg-blue-100 p-2 rounded text-sm text-blue-800">H√† N·ªôi l√† th·ªß ƒë√¥ Vi·ªát Nam.
                        </p>
                    </div>
                    <div class="bg-white p-6 rounded-xl shadow-md animated-item" style="animation-delay: 0.6s;">
                        <h4 class="text-xl font-bold text-gray-800 mb-3">S·ª≠a l·ªói ch√≠nh t·∫£ (ƒê·ªÅ t√†i)</h4>
                        <p class="font-mono bg-gray-200 p-2 rounded text-sm text-gray-700">
                            <span class="text-red-600">s·ª≠a l·ªói ch√≠nh t·∫£:</span> b·∫ßu ch·ªùi h√¥m nay
                        </p>
                        <i data-lucide="arrow-right" class="my-2 text-blue-500"></i>
                        <p class="font-mono bg-blue-100 p-2 rounded text-sm text-blue-800">b·∫ßu tr·ªùi h√¥m nay</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 7: Fine-tuning vs. Training from Scratch -->
        <div class="slide bg-white">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-8 border-l-8 border-blue-600 pl-6">Fine-tuning vs.
                    Training from Scratch</h2>
                <div class="overflow-x-auto animated-item" style="animation-delay: 0.2s;">
                    <table class="w-full text-left border-collapse">
                        <thead>
                            <tr>
                                <th class="py-4 px-6 bg-gray-50 font-bold uppercase text-sm text-gray-600 border-b">Ti√™u
                                    ch√≠</th>
                                <th class="py-4 px-6 bg-red-50 font-bold uppercase text-sm text-red-700 border-b">
                                    Training from Scratch</th>
                                <th class="py-4 px-6 bg-green-50 font-bold uppercase text-sm text-green-700 border-b">
                                    Fine-tuning</th>
                            </tr>
                        </thead>
                        <tbody class="text-gray-700">
                            <tr>
                                <td class="py-4 px-6 border-b font-semibold">D·ªØ li·ªáu c·∫ßn thi·∫øt</td>
                                <td class="py-4 px-6 border-b">R·∫•t l·ªõn (H√†ng Terabytes)</td>
                                <td class="py-4 px-6 border-b">Nh·ªè, chuy√™n bi·ªát cho t√°c v·ª•</td>
                            </tr>
                            <tr>
                                <td class="py-4 px-6 border-b font-semibold">T√†i nguy√™n t√≠nh to√°n</td>
                                <td class="py-4 px-6 border-b">C·ª±c l·ªõn (H√†ng trƒÉm GPU, nhi·ªÅu tu·∫ßn/th√°ng)</td>
                                <td class="py-4 px-6 border-b">Th·∫•p h∆°n nhi·ªÅu (1 GPU, v√†i gi·ªù/ng√†y)</td>
                            </tr>
                            <tr>
                                <td class="py-4 px-6 border-b font-semibold">Th·ªùi gian ph√°t tri·ªÉn</td>
                                <td class="py-4 px-6 border-b">R·∫•t d√†i</td>
                                <td class="py-4 px-6 border-b">Ng·∫Øn</td>
                            </tr>
                            <tr>
                                <td class="py-4 px-6 border-b font-semibold">Hi·ªáu su·∫•t</td>
                                <td class="py-4 px-6 border-b">Th·∫•p n·∫øu d·ªØ li·ªáu gi·ªõi h·∫°n</td>
                                <td class="py-4 px-6 border-b">Th∆∞·ªùng cao h∆°n trong th·ª±c t·∫ø</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Slide 8: Vai tr√≤ c·ªßa Fine-tuning -->
        <div class="slide bg-gray-50">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-8 border-l-8 border-blue-600 pl-6">Vai tr√≤ c·ªßa
                    Fine-tuning</h2>
                <p class="text-xl text-gray-600 max-w-4xl mb-8 animated-item" style="animation-delay: 0.2s;">
                    Fine-tuning gi√∫p chuy·ªÉn ƒë·ªïi m·ªôt m√¥ h√¨nh ng√¥n ng·ªØ l·ªõn t·ªïng qu√°t th√†nh m·ªôt "chuy√™n gia" cho m·ªôt lƒ©nh
                    v·ª±c ho·∫∑c nhi·ªám v·ª• c·ª• th·ªÉ.
                </p>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="bg-white p-6 rounded-lg shadow-md animated-item" style="animation-delay: 0.3s;">
                        <h4 class="text-xl font-bold text-blue-700 mb-2 flex items-center"><i data-lucide="target"
                                class="mr-3"></i>Chuy√™n bi·ªát h√≥a nhi·ªám v·ª•</h4>
                        <p class="text-gray-600">D·∫°y m√¥ h√¨nh c√°ch √°p d·ª•ng ki·∫øn th·ª©c r·ªông l·ªõn v√†o m·ªôt ƒë·ªãnh d·∫°ng
                            input/output c·ª• th·ªÉ (v√≠ d·ª•: s·ª≠a l·ªói, ph√¢n t√≠ch c·∫£m x√∫c).</p>
                    </div>
                    <div class="bg-white p-6 rounded-lg shadow-md animated-item" style="animation-delay: 0.4s;">
                        <h4 class="text-xl font-bold text-blue-700 mb-2 flex items-center"><i data-lucide="microscope"
                                class="mr-3"></i>Th√≠ch nghi mi·ªÅn d·ªØ li·ªáu</h4>
                        <p class="text-gray-600">Gi√∫p m√¥ h√¨nh h·ªçc c√°c thu·∫≠t ng·ªØ, s·∫Øc th√°i, phong c√°ch c·ªßa m·ªôt lƒ©nh v·ª±c
                            chuy√™n ng√†nh (y t·∫ø, lu·∫≠t, t√†i ch√≠nh).</p>
                    </div>
                    <div class="bg-white p-6 rounded-lg shadow-md animated-item" style="animation-delay: 0.5s;">
                        <h4 class="text-xl font-bold text-blue-700 mb-2 flex items-center"><i data-lucide="trending-up"
                                class="mr-3"></i>C·∫£i thi·ªán hi·ªáu su·∫•t</h4>
                        <p class="text-gray-600">ƒê·∫°t ƒë·ªô ch√≠nh x√°c cao h∆°n ƒë√°ng k·ªÉ so v·ªõi vi·ªác ch·ªâ s·ª≠ d·ª•ng m√¥ h√¨nh g·ªëc
                            v·ªõi c√°c c√¢u l·ªánh (prompting).</p>
                    </div>
                    <div class="bg-white p-6 rounded-lg shadow-md animated-item" style="animation-delay: 0.6s;">
                        <h4 class="text-xl font-bold text-blue-700 mb-2 flex items-center"><i
                                data-lucide="sliders-horizontal" class="mr-3"></i>ƒê·ªãnh h∆∞·ªõng h√†nh vi</h4>
                        <p class="text-gray-600">Hu·∫•n luy·ªán m√¥ h√¨nh ƒë·ªÉ t·∫°o ra c√°c c√¢u tr·∫£ l·ªùi tu√¢n th·ªß m·ªôt ƒë·ªãnh d·∫°ng,
                            vƒÉn phong ho·∫∑c quy t·∫Øc an to√†n nh·∫•t ƒë·ªãnh.</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 9: Ph√¢n t√≠ch b√†i to√°n -->
        <div class="slide bg-white">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-8 border-l-8 border-blue-600 pl-6">Ch∆∞∆°ng 2: Ph√¢n t√≠ch &
                    Hu·∫•n luy·ªán</h2>
                <h3 class="text-3xl font-semibold text-blue-700 mb-6 animated-item" style="animation-delay: 0.2s;">B√†i
                    to√°n: S·ª≠a l·ªói ch√≠nh t·∫£ Ti·∫øng Vi·ªát</h3>
                <p class="text-xl text-gray-600 max-w-4xl mb-8 animated-item" style="animation-delay: 0.3s;">
                    Ti·∫øng Vi·ªát c√≥ h·ªá th·ªëng thanh ƒëi·ªáu v√† ph∆∞∆°ng ng·ªØ ph·ª©c t·∫°p, d·∫´n ƒë·∫øn nhi·ªÅu lo·∫°i l·ªói ch√≠nh t·∫£ ƒë·∫∑c th√π.
                </p>
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6 text-center">
                    <div class="bg-gray-50 p-6 rounded-lg animated-item" style="animation-delay: 0.4s;">
                        <p class="text-lg line-through text-red-500">s·∫£n su·∫•t</p>
                        <i data-lucide="arrow-down" class="my-2 mx-auto text-gray-400"></i>
                        <p class="text-lg font-semibold text-green-600">s·∫£n xu·∫•t</p>
                        <h4 class="mt-3 font-bold text-gray-700">L·ªói ph√°t √¢m (s/x, ch/tr)</h4>
                    </div>
                    <div class="bg-gray-50 p-6 rounded-lg animated-item" style="animation-delay: 0.5s;">
                        <p class="text-lg line-through text-red-500">chia s·∫Ω</p>
                        <i data-lucide="arrow-down" class="my-2 mx-auto text-gray-400"></i>
                        <p class="text-lg font-semibold text-green-600">chia s·∫ª</p>
                        <h4 class="mt-3 font-bold text-gray-700">L·ªói d·∫•u thanh (?/~)</h4>
                    </div>
                    <div class="bg-gray-50 p-6 rounded-lg animated-item" style="animation-delay: 0.6s;">
                        <p class="text-lg line-through text-red-500">suy ngƒ©</p>
                        <i data-lucide="arrow-down" class="my-2 mx-auto text-gray-400"></i>
                        <p class="text-lg font-semibold text-green-600">suy nghƒ©</p>
                        <h4 class="mt-3 font-bold text-gray-700">L·ªói quy t·∫Øc (ng/ngh)</h4>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 10: H∆∞·ªõng ti·∫øp c·∫≠n v√† d·ªØ li·ªáu -->
        <div class="slide bg-gray-50">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-8 border-l-8 border-blue-600 pl-6">H∆∞·ªõng ti·∫øp c·∫≠n & D·ªØ
                    li·ªáu</h2>
                <div class="grid md:grid-cols-2 gap-10">
                    <div class="animated-item" style="animation-delay: 0.2s;">
                        <h3 class="text-3xl font-semibold text-blue-700 mb-4">M√¥ h√¨nh: VietAI/vit5-base</h3>
                        <p class="text-lg text-gray-600">S·ª≠ d·ª•ng m√¥ h√¨nh T5 ƒë√£ ƒë∆∞·ª£c ti·ªÅn hu·∫•n luy·ªán tr√™n
                            <strong>30GB</strong> d·ªØ li·ªáu Ti·∫øng Vi·ªát b·ªüi VietAI. ƒê√¢y l√† n·ªÅn t·∫£ng v·ªØng ch·∫Øc, am hi·ªÉu s√¢u
                            s·∫Øc ng√¥n ng·ªØ Vi·ªát.
                        </p>
                        <div class="mt-6 bg-white p-4 rounded-lg shadow">
                            <h4 class="font-bold text-lg text-gray-700">Lu·ªìng ho·∫°t ƒë·ªông:</h4>
                            <div class="flex items-center justify-between text-center mt-2 text-sm">
                                <span class="bg-red-100 text-red-800 p-2 rounded">C√¢u l·ªói</span>
                                <i data-lucide="arrow-right" class="text-gray-400 flex-shrink-0 mx-2"></i>
                                <span class="bg-blue-100 text-blue-800 p-2 rounded flex-1">M√¥ h√¨nh ViT5 <br />
                                    (Fine-tuned)</span>
                                <i data-lucide="arrow-right" class="text-gray-400 flex-shrink-0 mx-2"></i>
                                <span class="bg-green-100 text-green-800 p-2 rounded">C√¢u ƒë√∫ng</span>
                            </div>
                        </div>
                    </div>
                    <div class="animated-item" style="animation-delay: 0.4s;">
                        <h3 class="text-3xl font-semibold text-blue-700 mb-4">D·ªØ li·ªáu: VSEC Corpus</h3>
                        <p class="text-lg text-gray-600">Fine-tuning tr√™n b·ªô d·ªØ li·ªáu <strong>VSEC</strong> (Vietnamese
                            Spelling Error Corpus) - b·ªô d·ªØ li·ªáu c√¥ng khai l·ªõn nh·∫•t cho b√†i to√°n n√†y, ch·ª©a h∆°n 9.000 c√¢u
                            ƒë∆∞·ª£c g√°n nh√£n l·ªói v√† s·ª≠a l·ªói th·ªß c√¥ng.</p>
                        <div class="mt-6 bg-white p-4 rounded-lg shadow">
                            <h4 class="font-bold text-lg text-gray-700">Quy tr√¨nh x·ª≠ l√Ω d·ªØ li·ªáu:</h4>
                            <div class="flex items-center space-x-2 text-sm mt-2">
                                <div class="flex-1 text-center bg-gray-100 p-2 rounded">ƒê·ªçc file .jsonl</div>
                                <i data-lucide="chevron-right" class="text-gray-400"></i>
                                <div class="flex-1 text-center bg-gray-100 p-2 rounded">T·∫°o c·∫∑p (c√¢u l·ªói, c√¢u ƒë√∫ng)
                                </div>
                                <i data-lucide="chevron-right" class="text-gray-400"></i>
                                <div class="flex-1 text-center bg-gray-100 p-2 rounded">Tokenize</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 11: K·∫øt qu·∫£ ƒë√°nh gi√° -->
        <div class="slide bg-white">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-8 border-l-8 border-blue-600 pl-6">Ch∆∞∆°ng 3: Th·ª±c nghi·ªám
                    & ƒê√°nh gi√°</h2>
                <h3 class="text-3xl font-semibold text-blue-700 mb-8 animated-item" style="animation-delay: 0.2s;">K·∫øt
                    qu·∫£ tr√™n t·∫≠p ki·ªÉm th·ª≠</h3>
                <div class="grid grid-cols-2 lg:grid-cols-4 gap-6 text-center">
                    <div class="bg-gray-50 p-6 rounded-xl shadow-lg transform hover:scale-105 transition-transform animated-item"
                        style="animation-delay: 0.4s;">
                        <p class="text-5xl font-bold text-blue-600">48.52</p>
                        <p class="text-xl font-semibold text-gray-700 mt-2">BLEU Score</p>
                        <p class="text-sm text-gray-500">ƒê·ªô t∆∞∆°ng ƒë·ªìng c·∫•u tr√∫c v√† tr√¥i ch·∫£y</p>
                    </div>
                    <div class="bg-gray-50 p-6 rounded-xl shadow-lg transform hover:scale-105 transition-transform animated-item"
                        style="animation-delay: 0.5s;">
                        <p class="text-5xl font-bold text-blue-600">0.968</p>
                        <p class="text-xl font-semibold text-gray-700 mt-2">ROUGE-L</p>
                        <p class="text-sm text-gray-500">ƒê·ªô t∆∞∆°ng ƒë·ªìng v·ªÅ n·ªôi dung</p>
                    </div>
                    <div class="bg-gray-50 p-6 rounded-xl shadow-lg transform hover:scale-105 transition-transform animated-item"
                        style="animation-delay: 0.6s;">
                        <p class="text-5xl font-bold text-green-600">4.7%</p>
                        <p class="text-xl font-semibold text-gray-700 mt-2">Word Error Rate (WER)</p>
                        <p class="text-sm text-gray-500">T·ª∑ l·ªá l·ªói t·ª´ (c√†ng th·∫•p c√†ng t·ªët)</p>
                    </div>
                    <div class="bg-gray-50 p-6 rounded-xl shadow-lg transform hover:scale-105 transition-transform animated-item"
                        style="animation-delay: 0.7s;">
                        <p class="text-5xl font-bold text-green-600">1.2%</p>
                        <p class="text-xl font-semibold text-gray-700 mt-2">Char Error Rate (CER)</p>
                        <p class="text-sm text-gray-500">T·ª∑ l·ªá l·ªói k√Ω t·ª± (c√†ng th·∫•p c√†ng t·ªët)</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 12: V√≠ d·ª• th·ª±c t·∫ø -->
        <div class="slide bg-gray-50">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-8 border-l-8 border-blue-600 pl-6">V√≠ d·ª• th·ª±c t·∫ø</h2>
                <div class="space-y-6">
                    <div class="bg-white p-6 rounded-lg shadow-md animated-item" style="animation-delay: 0.2s;">
                        <p class="text-gray-500 text-sm">C√¢u g·ªëc</p>
                        <p class="text-xl text-red-600">M√¥ h√¨nh n√†yy r·∫•t thong minh.</p>
                        <hr class="my-3">
                        <p class="text-gray-500 text-sm">M√¥ h√¨nh s·ª≠a</p>
                        <p class="text-xl text-green-600">M√¥ h√¨nh <span class="bg-green-100 px-1 rounded">n√†y</span> r·∫•t
                            <span class="bg-green-100 px-1 rounded">th√¥ng minh</span>.
                        </p>
                    </div>
                    <div class="bg-white p-6 rounded-lg shadow-md animated-item" style="animation-delay: 0.4s;">
                        <p class="text-gray-500 text-sm">C√¢u g·ªëc</p>
                        <p class="text-xl text-red-600">Ch√∫ng ta c·∫ßn suy ngƒ© th·∫≠t k·ªπ v√† chia s·∫Ω cho m·ªçi ng∆∞·ªùi.</p>
                        <hr class="my-3">
                        <p class="text-gray-500 text-sm">M√¥ h√¨nh s·ª≠a</p>
                        <p class="text-xl text-green-600">Ch√∫ng ta c·∫ßn suy <span
                                class="bg-green-100 px-1 rounded">nghƒ©</span> th·∫≠t k·ªπ v√† chia <span
                                class="bg-green-100 px-1 rounded">s·∫ª</span> cho m·ªçi ng∆∞·ªùi.</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 13: H·∫°n ch·∫ø -->
        <div class="slide bg-white">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-8 border-l-8 border-blue-600 pl-6">Ph√¢n t√≠ch h·∫°n ch·∫ø</h2>
                <p class="text-xl text-gray-600 max-w-4xl mb-8 animated-item" style="animation-delay: 0.2s;">
                    M·∫∑c d√π hi·ªáu su·∫•t cao, m√¥ h√¨nh v·∫´n c√≥ m·ªôt s·ªë h·∫°n ch·∫ø do s·ª± ph·ª©c t·∫°p c·ªßa ng√¥n ng·ªØ v√† gi·ªõi h·∫°n c·ªßa d·ªØ
                    li·ªáu hu·∫•n luy·ªán.
                </p>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="bg-gray-50 p-6 rounded-lg shadow-md animated-item" style="animation-delay: 0.5s;">
                        <div class="flex items-start">
                            <i data-lucide="help-circle" class="w-8 h-8 text-orange-500 mr-4 flex-shrink-0"></i>
                            <div>
                                <h4 class="text-xl font-bold text-gray-800 mb-2">M∆° h·ªì v·ªÅ ng·ªØ c·∫£nh</h4>
                                <p class="text-gray-600">V·ªõi c√°c t·ª´ ƒë·ªìng √¢m kh√°c nghƒ©a, m√¥ h√¨nh c√≥ th·ªÉ ch·ªçn ph∆∞∆°ng √°n
                                    ph·ªï bi·∫øn h∆°n thay v√¨ ph∆∞∆°ng √°n ƒë√∫ng theo ng·ªØ nghƒ©a. <br><span
                                        class="font-mono text-sm">Vd: "gia b√†i t·∫≠p" -> "ra b√†i t·∫≠p" (ƒë√°ng l·∫Ω l√†
                                        "giao")</span></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 14: K·∫øt lu·∫≠n v√† H∆∞·ªõng ph√°t tri·ªÉn -->
        <div class="slide bg-gray-50">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-8 border-l-8 border-blue-600 pl-6">K·∫øt lu·∫≠n & H∆∞·ªõng ph√°t
                    tri·ªÉn</h2>
                <div class="grid md:grid-cols-2 gap-12">
                    <div class="animated-item" style="animation-delay: 0.2s;">
                        <h3 class="text-3xl font-semibold text-blue-700 mb-4 flex items-center"><i
                                data-lucide="check-circle-2" class="w-8 h-8 mr-3 text-green-500"></i>K·∫øt lu·∫≠n</h3>
                        <ul class="space-y-3 list-disc list-inside text-lg text-gray-700">
                            <li>Nghi√™n c·ª©u th√†nh c√¥ng c∆° s·ªü l√Ω thuy·∫øt v·ªÅ Transformer v√† Fine-tuning.</li>
                            <li>√Åp d·ª•ng hi·ªáu qu·∫£ k·ªπ thu·∫≠t Fine-tuning, x√¢y d·ª±ng ƒë∆∞·ª£c m√¥ h√¨nh s·ª≠a l·ªói ch√≠nh t·∫£ ch·∫•t l∆∞·ª£ng
                                cao.</li>
                            <li>M√¥ h√¨nh ƒë·∫°t hi·ªáu su·∫•t ·∫•n t∆∞·ª£ng tr√™n t·∫≠p ki·ªÉm th·ª≠ (CER ch·ªâ 1.2%).</li>
                        </ul>
                    </div>
                    <div class="animated-item" style="animation-delay: 0.4s;">
                        <h3 class="text-3xl font-semibold text-blue-700 mb-4 flex items-center"><i
                                data-lucide="arrow-up-right" class="w-8 h-8 mr-3 text-indigo-500"></i>H∆∞·ªõng ph√°t tri·ªÉn
                        </h3>
                        <ul class="space-y-3 list-disc list-inside text-lg text-gray-700">
                            <li>L√†m gi√†u d·ªØ li·ªáu hu·∫•n luy·ªán (t·ª´ m·∫°ng x√£ h·ªôi, b√°o ch√≠...).</li>
                            <li>C·∫£i thi·ªán kh·∫£ nƒÉng x·ª≠ l√Ω c√°c tr∆∞·ªùng h·ª£p m∆° h·ªì, t·ª´ l√≥ng.</li>
                            <li>T·ªëi ∆∞u h√≥a m√¥ h√¨nh (l∆∞·ª£ng t·ª≠ h√≥a, ch∆∞ng c·∫•t) ƒë·ªÉ tri·ªÉn khai tr√™n c√°c thi·∫øt b·ªã y·∫øu.</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 15: Q&A -->
        <div
            class="slide items-center text-center bg-gradient-to-br from-gray-900 via-blue-900 to-indigo-900 text-white">
            <div class="slide-content">
                <h2 class="text-8xl font-extrabold mb-6 animated-item" style="animation-delay: 0.2s;">Q & A</h2>
                <p class="text-3xl text-gray-300 animated-item" style="animation-delay: 0.4s;">C·∫£m ∆°n th·∫ßy v√† c√°c b·∫°n ƒë√£
                    l·∫Øng nghe!</p>
            </div>
        </div>

        <!-- Navigation -->
        <button id="prevBtn" class="nav-button">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
        </button>
        <button id="nextBtn" class="nav-button">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
        </button>
        <div id="slide-counter"></div>
        <div id="progress-bar"></div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const slides = document.querySelectorAll('.slide');
            const prevBtn = document.getElementById('prevBtn');
            const nextBtn = document.getElementById('nextBtn');
            const slideCounter = document.getElementById('slide-counter');
            const progressBar = document.getElementById('progress-bar');
            let currentSlide = 0;

            // Function to re-trigger animations on active slide
            function triggerAnimations(slide) {
                const animatedItems = slide.querySelectorAll('.animated-item');
                animatedItems.forEach((item) => {
                    item.style.animation = 'none';
                    item.offsetHeight; /* trigger reflow */
                    item.style.animation = null;
                });
            }

            function showSlide(n) {
                if (n < 0 || n >= slides.length) return;

                slides[currentSlide].classList.remove('active');
                currentSlide = n;
                slides[currentSlide].classList.add('active');

                triggerAnimations(slides[currentSlide]);

                // Render icons for the current slide
                lucide.createIcons();

                updateNav();
            }

            function updateNav() {
                slideCounter.textContent = `${currentSlide + 1} / ${slides.length}`;
                progressBar.style.width = `${((currentSlide + 1) / slides.length) * 100}%`;
                prevBtn.disabled = currentSlide === 0;
                nextBtn.disabled = currentSlide === slides.length - 1;
            }

            function nextSlide() {
                if (currentSlide < slides.length - 1) {
                    showSlide(currentSlide + 1);
                }
            }

            function prevSlide() {
                if (currentSlide > 0) {
                    showSlide(currentSlide - 1);
                }
            }

            prevBtn.addEventListener('click', prevSlide);
            nextBtn.addEventListener('click', nextSlide);

            document.addEventListener('keydown', (e) => {
                if (e.key === 'ArrowRight' || e.key === ' ') {
                    e.preventDefault(); // Prevent space from scrolling
                    nextSlide();
                } else if (e.key === 'ArrowLeft') {
                    e.preventDefault();
                    prevSlide();
                }
            });

            // Initial setup
            showSlide(0);
        });
    </script>
</body>

</html>

/* --- B·ªè qua (Kh√¥ng ph·∫£i file text): Hau/mobile/chitietsp.png --- */

/* --- B·ªè qua (Kh√¥ng ph·∫£i file text): Hau/mobile/hau_logo.png --- */

/* ===== Hau/mobile/index.html ===== */
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Thuy·∫øt tr√¨nh: X√¢y D·ª±ng ·ª®ng D·ª•ng Mobile Qu·∫£n L√Ω Hi·ªáu S√°ch</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@300;400;500;600;700;800&display=swap"
        rel="stylesheet">
    <style>
        html,
        body {
            height: 100%;
            margin: 0;
            padding: 0;
            overflow: hidden;
            font-family: 'Be Vietnam Pro', sans-serif;
            background-color: #000;
        }

        #presentation-container {
            width: 100vw;
            height: 100vh;
            position: relative;
        }

        .slide {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.6s ease-in-out, transform 0.6s ease-in-out;
            transform: scale(0.98);
            pointer-events: none;
        }

        .slide.active {
            opacity: 1;
            transform: scale(1);
            pointer-events: auto;
        }

        .slide-content {
            animation: fadeInContent 1s ease-in-out;
            width: 100%;
            max-width: 1100px;
            margin: 0 auto;
            padding: 4rem;
        }

        @keyframes fadeInContent {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .animated-item {
            animation: fadeInItem 0.5s ease-in-out forwards;
            opacity: 0;
        }

        @keyframes fadeInItem {
            from {
                opacity: 0;
                transform: translateY(15px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .nav-button {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            z-index: 10;
            background-color: rgba(0, 0, 0, 0.3);
            color: white;
            border-radius: 50%;
            width: 44px;
            height: 44px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: background-color 0.3s ease, opacity 0.3s ease;
            opacity: 0.5;
        }

        .nav-button:hover {
            background-color: rgba(0, 0, 0, 0.6);
            opacity: 1;
        }

        .nav-button:disabled {
            opacity: 0.1;
            cursor: not-allowed;
        }

        #prevBtn {
            left: 20px;
        }

        #nextBtn {
            right: 20px;
        }

        #slide-counter {
            position: absolute;
            bottom: 20px;
            right: 20px;
            z-index: 10;
            background-color: rgba(0, 0, 0, 0.4);
            color: white;
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 14px;
        }

        #progress-bar {
            position: absolute;
            bottom: 0;
            left: 0;
            height: 4px;
            background-color: #3b82f6;
            z-index: 10;
            transition: width 0.3s ease;
        }

        .phone-mockup {
            background: #111;
            border: 8px solid #000;
            border-radius: 40px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            overflow: hidden;
            position: relative;
            padding-top: 177.77%;
            /* 9:16 aspect ratio */
        }

        .phone-mockup-content {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #f0f2f5;
            display: flex;
            align-items: center;
            justify-content: center;
        }
    </style>
</head>

<body>

    <div id="presentation-container">
        <!-- Slide 1: Ti√™u ƒë·ªÅ -->
        <div
            class="slide active items-center text-center p-8 bg-gradient-to-br from-gray-900 via-blue-900 to-indigo-900 text-white">
            <!-- Logo added in top left corner -->
            <img src="./hau_logo.png" alt="HAU Logo" class="absolute top-6 left-6 h-[100px] w-[100px] z-10">
            <div class="slide-content">
                <p class="text-2xl md:text-3xl text-blue-300 mb-4 animated-item" style="animation-delay: 0.2s;">Ph√°t
                    tri·ªÉn ·ª©ng d·ª•ng cho c√°c thi·∫øt b·ªã di ƒë·ªông</p>
                <h1 class="text-5xl md:text-7xl font-extrabold mb-8 animated-item" style="animation-delay: 0.4s;">X√¢y
                    D·ª±ng ·ª®ng D·ª•ng Mobile Qu·∫£n L√Ω Hi·ªáu S√°ch</h1>
                <div class="text-left mx-auto max-w-2xl bg-black bg-opacity-20 p-6 rounded-2xl border border-gray-700 animated-item"
                    style="animation-delay: 0.6s;">
                    <p class="text-lg mb-2"><span class="font-semibold text-gray-400">GVHD:</span> Nguy·ªÖn ƒê√¨nh Tu·∫•n</p>
                    <p class="text-lg font-semibold mb-2">Nh√≥m 1 - 21CN1:</p>
                    <ul class="grid grid-cols-2 gap-x-8 gap-y-1 text-base text-gray-300">
                        <li>Nguy·ªÖn Duy ƒê·∫°t - 2155010066</li>
                        <li>Nguy·ªÖn H·ªØu Tu·∫•n - 2155010236</li>
                        <li>V≈© H·∫£i Long - 2155010156</li>
                        <li>Nguy·ªÖn Duy Huy - 2155010121</li>
                        <li>Nguy·ªÖn V≈© Minh Long - 2155010151</li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Slide 2: Gi·ªõi thi·ªáu & B√†i to√°n -->
        <div class="slide bg-white">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-8 border-l-8 border-blue-600 pl-6">Gi·ªõi Thi·ªáu B√†i To√°n
                </h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-12 text-lg">
                    <div class="animated-item" style="animation-delay: 0.2s;">
                        <h3 class="text-3xl font-semibold text-blue-700 mb-4">B·ªëi c·∫£nh</h3>
                        <p class="text-gray-600 leading-relaxed">S·ª± ph√°t tri·ªÉn c·ªßa c√¥ng ngh·ªá v√† th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠ ƒë·∫∑t
                            ra th√°ch th·ª©c cho c√°c hi·ªáu s√°ch truy·ªÅn th·ªëng trong vi·ªác qu·∫£n l√Ω kho, theo d√µi doanh thu v√†
                            ti·∫øp c·∫≠n kh√°ch h√†ng.</p>
                    </div>
                    <div class="animated-item" style="animation-delay: 0.4s;">
                        <h3 class="text-3xl font-semibold text-blue-700 mb-4">M·ª•c ti√™u d·ª± √°n</h3>
                        <p class="text-gray-600 leading-relaxed">X√¢y d·ª±ng m·ªôt n·ªÅn t·∫£ng qu·∫£n l√Ω hi·ªáu s√°ch to√†n di·ªán, hi·ªáu
                            qu·∫£ v√† d·ªÖ s·ª≠ d·ª•ng, gi√∫p t·ªëi ∆∞u h√≥a quy tr√¨nh kinh doanh v√† n√¢ng cao tr·∫£i nghi·ªám kh√°ch h√†ng.
                        </p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 3: C∆° s·ªü l√Ω thuy·∫øt & C√¥ng ngh·ªá -->
        <div class="slide bg-gray-50">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-10 border-l-8 border-blue-600 pl-6">C√¥ng Ngh·ªá S·ª≠ D·ª•ng
                </h2>
                <div class="grid grid-cols-2 md:grid-cols-3 gap-8 text-center">
                    <div class="bg-white p-6 rounded-xl shadow-lg transform hover:scale-105 transition-transform duration-300 animated-item"
                        style="animation-delay: 0.2s;">
                        <h3 class="text-2xl font-bold text-blue-800">Microservices</h3>
                        <p class="text-gray-500 mt-2">Ki·∫øn tr√∫c h·ªá th·ªëng</p>
                    </div>
                    <div class="bg-white p-6 rounded-xl shadow-lg transform hover:scale-105 transition-transform duration-300 animated-item"
                        style="animation-delay: 0.3s;">
                        <h3 class="text-2xl font-bold text-blue-800">Spring Boot</h3>
                        <p class="text-gray-500 mt-2">Backend Services</p>
                    </div>
                    <div class="bg-white p-6 rounded-xl shadow-lg transform hover:scale-105 transition-transform duration-300 animated-item"
                        style="animation-delay: 0.4s;">
                        <h3 class="text-2xl font-bold text-blue-800">React Native</h3>
                        <p class="text-gray-500 mt-2">Mobile Application</p>
                    </div>
                    <div class="bg-white p-6 rounded-xl shadow-lg transform hover:scale-105 transition-transform duration-300 animated-item"
                        style="animation-delay: 0.5s;">
                        <h3 class="text-2xl font-bold text-blue-800">PostgreSQL</h3>
                        <p class="text-gray-500 mt-2">C∆° s·ªü d·ªØ li·ªáu ch√≠nh</p>
                    </div>
                    <div class="bg-white p-6 rounded-xl shadow-lg transform hover:scale-105 transition-transform duration-300 animated-item"
                        style="animation-delay: 0.6s;">
                        <h3 class="text-2xl font-bold text-blue-800">VNPay & MoMo</h3>
                        <p class="text-gray-500 mt-2">T√≠ch h·ª£p thanh to√°n</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 4: Ph√¢n t√≠ch y√™u c·∫ßu - Usecase -->
        <div class="slide bg-white">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-6 border-l-8 border-blue-600 pl-6">S∆° ƒê·ªì Usecase T·ªïng
                    Qu√°t</h2>
                <div class="w-full h-[550px] bg-gray-100 rounded-2xl p-4 flex items-center justify-center animated-item"
                    style="animation-delay: 0.2s;">
                    <img src="./so_do_use_case_tong_quat.png"
                        alt="S∆° ƒë·ªì Usecase t·ªïng qu√°t" class="max-h-full max-w-full w-full h-full object-contain">
                </div>
            </div>
        </div>

        <!-- Slide 5: Ph√¢n c·∫•p ch·ª©c nƒÉng -->
        <div class="slide bg-gray-50">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-6 border-l-8 border-blue-600 pl-6">S∆° ƒê·ªì Ph√¢n C·∫•p Ch·ª©c
                    NƒÉng</h2>
                <div class="w-full h-[550px] bg-white rounded-2xl p-6 flex items-center justify-center shadow-xl animated-item"
                    style="animation-delay: 0.2s;">
                    <img src="./so_do_phan_cap_chuc_nang.png" alt="S∆° ƒë·ªì ph√¢n c·∫•p ch·ª©c nƒÉng"
                        class="max-h-full max-w-full w-full h-full object-contain">
                </div>
            </div>
        </div>

        <!-- Slide 6: Ki·∫øn tr√∫c h·ªá th·ªëng -->
        <div class="slide bg-white">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-8 border-l-8 border-blue-600 pl-6">Ki·∫øn Tr√∫c H·ªá Th·ªëng
                    Microservices</h2>
                <div class="w-full text-sm flex flex-col items-center justify-center text-center animated-item"
                    style="animation-delay: 0.2s;">
                    <div class="bg-green-100 text-green-800 py-3 px-6 rounded-xl shadow-md font-semibold text-lg">Mobile
                        App (React Native)</div>
                    <div class="h-12 w-1 bg-gray-300 my-2 rounded"></div>
                    <div class="bg-blue-100 text-blue-800 py-3 px-6 rounded-xl shadow-md font-semibold text-lg">API
                        Gateway</div>
                    <div class="h-12 w-1 bg-gray-300 my-2 rounded"></div>
                    <div class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-5 gap-4 w-full my-4">
                        <div class="bg-indigo-100 text-indigo-800 p-3 rounded-lg shadow-sm">Identity Service</div>
                        <div class="bg-indigo-100 text-indigo-800 p-3 rounded-lg shadow-sm">Product Service</div>
                        <div class="bg-indigo-100 text-indigo-800 p-3 rounded-lg shadow-sm">Order Service</div>
                        <div class="bg-indigo-100 text-indigo-800 p-3 rounded-lg shadow-sm">Payment Service</div>
                        <div class="bg-indigo-100 text-indigo-800 p-3 rounded-lg shadow-sm">Notification Service</div>
                    </div>
                    <div class="bg-orange-100 text-orange-800 p-3 rounded-lg shadow-sm w-full">...v√† c√°c services kh√°c
                        (Category, Blog, Customer, File)</div>
                    <div class="h-12 w-1 bg-gray-300 my-2 rounded"></div>
                    <div class="flex space-x-6">
                        <div class="bg-red-100 text-red-800 p-4 rounded-xl shadow-md font-semibold">External Services
                        </div>
                        <div class="bg-yellow-100 text-yellow-800 p-4 rounded-xl shadow-md font-semibold">Databases
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 7: Ch·ª©c nƒÉng ch√≠nh (Mobile App) -->
        <div class="slide bg-gray-50">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-8 border-l-8 border-blue-600 pl-6">Ch·ª©c NƒÉng Ph√≠a Kh√°ch
                    H√†ng</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-x-12 gap-y-6 text-xl">
                    <ul class="space-y-4 list-none text-gray-700">
                        <li class="animated-item flex items-start" style="animation-delay: 0.2s;"><span
                                class="text-blue-500 mr-3 mt-1">‚úì</span><span>T√¨m ki·∫øm, l·ªçc s·∫£n ph·∫©m ƒëa ti√™u ch√≠.</span>
                        </li>
                        <li class="animated-item flex items-start" style="animation-delay: 0.3s;"><span
                                class="text-blue-500 mr-3 mt-1">‚úì</span><span>Xem chi ti·∫øt s·∫£n ph·∫©m (h√¨nh ·∫£nh, m√¥
                                t·∫£).</span></li>
                        <li class="animated-item flex items-start" style="animation-delay: 0.4s;"><span
                                class="text-blue-500 mr-3 mt-1">‚úì</span><span>Qu·∫£n l√Ω gi·ªè h√†ng.</span></li>
                        <li class="animated-item flex items-start" style="animation-delay: 0.5s;"><span
                                class="text-blue-500 mr-3 mt-1">‚úì</span><span>ƒê·∫∑t h√†ng v√† theo d√µi tr·∫°ng th√°i ƒë∆°n
                                h√†ng.</span></li>
                    </ul>
                    <ul class="space-y-4 list-none text-gray-700">
                        <li class="animated-item flex items-start" style="animation-delay: 0.6s;"><span
                                class="text-blue-500 mr-3 mt-1">‚úì</span><span>Thanh to√°n (VNPay, Momo) v√† COD.</span>
                        </li>
                        <li class="animated-item flex items-start" style="animation-delay: 0.7s;"><span
                                class="text-blue-500 mr-3 mt-1">‚úì</span><span>ƒê√°nh gi√° s·∫£n ph·∫©m (rating,
                                comment).</span></li>
                        <li class="animated-item flex items-start" style="animation-delay: 0.8s;"><span
                                class="text-blue-500 mr-3 mt-1">‚úì</span><span>Qu·∫£n l√Ω th√¥ng tin c√° nh√¢n, ƒë·ªãa ch·ªâ.</span>
                        </li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Slide 8: Ch·ª©c nƒÉng ch√≠nh (CMS) -->
        <div class="slide bg-white">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-8 border-l-8 border-blue-600 pl-6">Ch·ª©c NƒÉng Ph√≠a Qu·∫£n
                    Tr·ªã</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-x-12 gap-y-6 text-xl">
                    <ul class="space-y-4 list-none text-gray-700">
                        <li class="animated-item flex items-start" style="animation-delay: 0.2s;"><span
                                class="text-blue-500 mr-3 mt-1">‚úì</span><span>Qu·∫£n l√Ω s·∫£n ph·∫©m (th√™m, s·ª≠a, x√≥a,
                                ·∫©n).</span></li>
                        <li class="animated-item flex items-start" style="animation-delay: 0.3s;"><span
                                class="text-blue-500 mr-3 mt-1">‚úì</span><span>Qu·∫£n l√Ω danh m·ª•c.</span></li>
                        <li class="animated-item flex items-start" style="animation-delay: 0.4s;"><span
                                class="text-blue-500 mr-3 mt-1">‚úì</span><span>Qu·∫£n l√Ω ƒë∆°n h√†ng v√† tr·∫°ng th√°i.</span>
                        </li>
                        <li class="animated-item flex items-start" style="animation-delay: 0.5s;"><span
                                class="text-blue-500 mr-3 mt-1">‚úì</span><span>Qu·∫£n l√Ω ng∆∞·ªùi d√πng v√† ph√¢n quy·ªÅn.</span>
                        </li>
                    </ul>
                    <ul class="space-y-4 list-none text-gray-700">
                        <li class="animated-item flex items-start" style="animation-delay: 0.6s;"><span
                                class="text-blue-500 mr-3 mt-1">‚úì</span><span>Qu·∫£n l√Ω b√†i vi·∫øt (tin t·ª©c, review).</span>
                        </li>
                        <li class="animated-item flex items-start" style="animation-delay: 0.7s;"><span
                                class="text-blue-500 mr-3 mt-1">‚úì</span><span>Qu·∫£n l√Ω c√°c ƒë√°nh gi√° s·∫£n ph·∫©m.</span></li>
                        <li class="animated-item flex items-start" style="animation-delay: 0.8s;"><span
                                class="text-blue-500 mr-3 mt-1">‚úì</span><span>Qu·∫£n l√Ω c√°c y√™u c·∫ßu t∆∞ v·∫•n.</span></li>
                        <li class="animated-item flex items-start" style="animation-delay: 0.9s;"><span
                                class="text-blue-500 mr-3 mt-1">‚úì</span><span>Th·ªëng k√™, b√°o c√°o doanh thu.</span></li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Slide 9: Giao di·ªán Demo -->
        <div class="slide bg-gray-50">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-8 border-l-8 border-blue-600 pl-6">Giao Di·ªán ·ª®ng D·ª•ng
                </h2>
                <div class="grid grid-cols-1 sm:grid-cols-3 gap-10">
                    <div class="animated-item" style="animation-delay: 0.2s;">
                        <div class="phone-mockup p-0">
                            <img src="./trang chu.png" alt="">
                        </div>
                        <p class="p-4 text-center text-lg font-semibold text-gray-700">Trang ch·ªß</p>
                    </div>
                    <div class="animated-item" style="animation-delay: 0.4s;">
                        <div class="phone-mockup p-0">
                            <img src="./chitietsp.png" alt="">
                        </div>
                        <p class="p-4 text-center text-lg font-semibold text-gray-700">Chi ti·∫øt s·∫£n ph·∫©m</p>
                    </div>
                    <div class="animated-item" style="animation-delay: 0.6s;">
                        <div class="phone-mockup p-0">
                            <img src="./thanhtoan.png" alt="">
                        </div>
                        <p class="p-4 text-center text-lg font-semibold text-gray-700">Thanh to√°n</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 10: K·∫øt lu·∫≠n -->
        <div class="slide bg-white">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-8 border-l-8 border-blue-600 pl-6">K·∫øt Lu·∫≠n</h2>
                <div class="space-y-5 text-xl text-gray-700">
                    <p class="animated-item flex items-start" style="animation-delay: 0.2s;"><span
                            class="text-green-500 mr-4 mt-1 font-bold">‚úî</span><span>X√¢y d·ª±ng th√†nh c√¥ng h·ªá th·ªëng TMƒêT
                            ho√†n ch·ªânh, ƒë√°p ·ª©ng m·ª•c ti√™u ƒë·ªÅ ra.</span></p>
                    <p class="animated-item flex items-start" style="animation-delay: 0.4s;"><span
                            class="text-green-500 mr-4 mt-1 font-bold">‚úî</span><span>√Åp d·ª•ng th√†nh c√¥ng ki·∫øn tr√∫c
                            Microservices, ƒë·∫£m b·∫£o t√≠nh linh ho·∫°t, d·ªÖ b·∫£o tr√¨ v√† m·ªü r·ªông.</span></p>
                    <p class="animated-item flex items-start" style="animation-delay: 0.6s;"><span
                            class="text-green-500 mr-4 mt-1 font-bold">‚úî</span><span>T√≠ch h·ª£p th√†nh c√¥ng c√°c d·ªãch v·ª•
                            ngo√†i quan tr·ªçng (thanh to√°n, th√¥ng b√°o), n√¢ng cao tr·∫£i nghi·ªám ng∆∞·ªùi d√πng.</span></p>
                </div>
            </div>
        </div>

        <!-- Slide 11: H∆∞·ªõng ph√°t tri·ªÉn -->
        <div class="slide bg-gray-50">
            <div class="slide-content">
                <h2 class="text-5xl font-bold text-gray-800 mb-8 border-l-8 border-blue-600 pl-6">H∆∞·ªõng Ph√°t Tri·ªÉn</h2>
                <ul class="space-y-5 text-xl list-none text-gray-700">
                    <li class="animated-item flex items-start" style="animation-delay: 0.2s;"><span
                            class="text-blue-500 mr-4 mt-1">‚û§</span><span>M·ªü r·ªông t√≠ch h·ª£p c·ªïng thanh to√°n & ƒë∆°n v·ªã v·∫≠n
                            chuy·ªÉn.</span></li>
                    <li class="animated-item flex items-start" style="animation-delay: 0.4s;"><span
                            class="text-blue-500 mr-4 mt-1">‚û§</span><span>X√¢y d·ª±ng c√°c t√≠nh nƒÉng marketing & CSKH n√¢ng
                            cao (chatbot, loyalty program).</span></li>
                    <li class="animated-item flex items-start" style="animation-delay: 0.6s;"><span
                            class="text-blue-500 mr-4 mt-1">‚û§</span><span>·ª®ng d·ª•ng AI/Big Data ƒë·ªÉ c√° nh√¢n h√≥a tr·∫£i
                            nghi·ªám v√† g·ª£i √Ω s·∫£n ph·∫©m th√¥ng minh.</span></li>
                </ul>
            </div>
        </div>

        <!-- Slide 12: Q&A -->
        <div
            class="slide items-center text-center p-8 bg-gradient-to-br from-gray-900 via-blue-900 to-indigo-900 text-white">
            <div class="slide-content">
                <h2 class="text-7xl font-extrabold mb-6 animated-item" style="animation-delay: 0.2s;">Q & A</h2>
                <p class="text-3xl text-gray-300 animated-item" style="animation-delay: 0.4s;">C·∫£m ∆°n th·∫ßy v√† c√°c b·∫°n ƒë√£
                    l·∫Øng nghe!</p>
            </div>
        </div>

        <!-- Navigation -->
        <button id="prevBtn" class="nav-button">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
        </button>
        <button id="nextBtn" class="nav-button">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
        </button>
        <div id="slide-counter"></div>
        <div id="progress-bar"></div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const slides = document.querySelectorAll('.slide');
            const prevBtn = document.getElementById('prevBtn');
            const nextBtn = document.getElementById('nextBtn');
            const slideCounter = document.getElementById('slide-counter');
            const progressBar = document.getElementById('progress-bar');
            let currentSlide = 0;

            function showSlide(n) {
                if (n < 0 || n >= slides.length) return;

                slides[currentSlide].classList.remove('active');
                currentSlide = n;
                slides[currentSlide].classList.add('active');

                const animatedItems = slides[currentSlide].querySelectorAll('.animated-item');
                animatedItems.forEach((item) => {
                    item.style.animation = 'none';
                    item.offsetHeight;
                    item.style.animation = null;
                });

                updateNav();
            }

            function updateNav() {
                slideCounter.textContent = `${currentSlide + 1} / ${slides.length}`;
                progressBar.style.width = `${((currentSlide + 1) / slides.length) * 100}%`;
                prevBtn.disabled = currentSlide === 0;
                nextBtn.disabled = currentSlide === slides.length - 1;
            }

            function nextSlide() {
                if (currentSlide < slides.length - 1) {
                    showSlide(currentSlide + 1);
                }
            }

            function prevSlide() {
                if (currentSlide > 0) {
                    showSlide(currentSlide - 1);
                }
            }

            prevBtn.addEventListener('click', prevSlide);
            nextBtn.addEventListener('click', nextSlide);

            document.addEventListener('keydown', (e) => {
                if (e.key === 'ArrowRight' || e.key === ' ') {
                    nextSlide();
                } else if (e.key === 'ArrowLeft') {
                    prevSlide();
                }
            });

            showSlide(0);
        });
    </script>
</body>

</html>

/* --- B·ªè qua (Kh√¥ng ph·∫£i file text): Hau/mobile/so_do_phan_cap_chuc_nang.png --- */

/* --- B·ªè qua (Kh√¥ng ph·∫£i file text): Hau/mobile/so_do_use_case_tong_quat.png --- */

/* --- B·ªè qua (Kh√¥ng ph·∫£i file text): Hau/mobile/thanhtoan.png --- */

/* --- B·ªè qua (Kh√¥ng ph·∫£i file text): Hau/mobile/trang chu.png --- */

/* ===== index.html ===== */
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Course Syllabus</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        /* For spinning animation on the loading icon */
        .fa-spinner {
            animation: fa-spin 1s infinite linear;
        }
        @keyframes fa-spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>

<body class="bg-gray-100 text-gray-800">

    <div class="container mx-auto p-4 sm:p-6 lg:p-8">
        <header class="text-center mb-10">
            <h1 class="text-4xl md:text-5xl font-bold text-gray-900">My Course Syllabus</h1>
            <p class="text-lg text-gray-600 mt-2">An organized list of all lessons and materials.</p>
        </header>

        <main id="lessons-container" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            <p class="text-gray-500 col-span-full text-center">Loading lessons...</p>
        </main>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const lessonsContainer = document.getElementById('lessons-container');
            if (!lessonsContainer) {
                console.error("Lesson container not found!");
                return;
            }

            // Base URL for constructing the full lesson links.
            const baseUrl = 'https://deocomate.github.io/python-education-slides.github.io/';

            const colorMap = {
                blue: { bg: 'bg-blue-100', text: 'text-blue-800', border: 'border-blue-500', hoverBg: 'hover:bg-blue-200' },
                green: { bg: 'bg-green-100', text: 'text-green-800', border: 'border-green-500', hoverBg: 'hover:bg-green-200' },
                indigo: { bg: 'bg-indigo-100', text: 'text-indigo-800', border: 'border-indigo-500', hoverBg: 'hover:bg-indigo-200' },
                purple: { bg: 'bg-purple-100', text: 'text-purple-800', border: 'border-purple-500', hoverBg: 'hover:bg-purple-200' },
                default: { bg: 'bg-gray-100', text: 'text-gray-800', border: 'border-gray-500', hoverBg: 'hover:bg-gray-200' }
            };

            function renderCourses(courses) {
                lessonsContainer.innerHTML = '';

                courses.forEach(course => {
                    const courseColor = colorMap[course.color] || colorMap.default;
                    const card = document.createElement('div');
                    card.className = 'bg-white rounded-xl shadow-lg overflow-hidden transform hover:-translate-y-1 transition-transform duration-300';

                    const cardHeader = document.createElement('div');
                    cardHeader.className = `p-4 ${courseColor.bg} border-l-4 ${courseColor.border} flex items-center space-x-4`;

                    const icon = document.createElement('i');
                    icon.className = `${course.icon} ${courseColor.text} text-2xl w-8 text-center`;

                    const title = document.createElement('h2');
                    title.className = `text-xl font-bold ${courseColor.text}`;
                    title.textContent = course.category;

                    cardHeader.appendChild(icon);
                    cardHeader.appendChild(title);

                    const lessonList = document.createElement('ul');
                    lessonList.className = 'p-4 space-y-2';

                    course.lessons.forEach(lesson => {
                        // Use a container 'li' with 'relative' and 'group' for hover effect
                        const listItem = document.createElement('li');
                        listItem.className = 'relative group';

                        const link = document.createElement('a');
                        link.href = lesson.url;
                        link.textContent = lesson.title;
                        // Add padding on the right to make space for the button
                        link.className = `block p-3 pr-12 rounded-lg text-gray-700 font-medium ${courseColor.hoverBg} transition-colors duration-200`;

                        // Create the copy button
                        const copyButton = document.createElement('button');
                        copyButton.innerHTML = '<i class="fas fa-copy"></i>';
                        copyButton.title = 'Copy shortened link';
                        // Position the button inside the list item and show on hover
                        copyButton.className = `absolute top-1/2 right-3 transform -translate-y-1/2 p-2 rounded-full bg-gray-200 text-gray-600 opacity-0 group-hover:opacity-100 hover:bg-gray-300 transition-all duration-200`;
                        
                        // Event listener for the copy button
                        copyButton.addEventListener('click', async (e) => {
                            e.preventDefault(); // Prevent any link navigation
                            
                            const originalIcon = copyButton.innerHTML;
                            copyButton.innerHTML = '<i class="fas fa-spinner"></i>';
                            copyButton.disabled = true;

                            // Construct the full URL, removing the leading './'
                            const fullUrl = baseUrl + lesson.url.replace('./', '');
                            const encodedUrl = encodeURIComponent(fullUrl);

                            try {
                                // Use TinyURL API for shortening
                                const response = await fetch(`https://tinyurl.com/api-create.php?url=${encodedUrl}`);
                                if (!response.ok) {
                                    throw new Error(`API request failed with status ${response.status}`);
                                }
                                const shortUrl = await response.text();

                                // Copy to clipboard
                                await navigator.clipboard.writeText(shortUrl);

                                // Visual feedback for success
                                copyButton.innerHTML = '<i class="fas fa-check"></i>';
                                copyButton.classList.add('bg-green-500', 'text-white');

                            } catch (err) {
                                console.error('Failed to shorten or copy link:', err);
                                // Visual feedback for error
                                copyButton.innerHTML = '<i class="fas fa-times"></i>';
                                copyButton.classList.add('bg-red-500', 'text-white');
                            } finally {
                                // Revert button to original state after 2 seconds
                                setTimeout(() => {
                                    copyButton.innerHTML = originalIcon;
                                    copyButton.disabled = false;
                                    copyButton.classList.remove('bg-green-500', 'bg-red-500', 'text-white');
                                }, 2000);
                            }
                        });

                        listItem.appendChild(link);
                        listItem.appendChild(copyButton);
                        lessonList.appendChild(listItem);
                    });

                    card.appendChild(cardHeader);
                    card.appendChild(lessonList);
                    lessonsContainer.appendChild(card);
                });
            }

            fetch('./lessons.json')
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    renderCourses(data);
                })
                .catch(error => {
                    console.error('Error fetching lessons:', error);
                    lessonsContainer.innerHTML = `<p class="text-red-500 text-center col-span-full">Error loading lessons. Please make sure the file 'lessons.json' is in the same directory.</p>`;
                });
        });
    </script>
</body>

</html>

/* ===== lessons.json ===== */
[
    {
        "category": "Python Basic",
        "icon": "fab fa-python",
        "color": "blue",
        "lessons": [
            {
                "title": "Bi·ªÉn, ki·ªÉu d·ªØ li·ªáu, to√°n t·ª≠ v√† input, output trong Python",
                "url": "./Python Basic/variable_datatype_operator_input.html"
            },
            {
                "title": "C√¢u l·ªánh ƒëi·ªÅu ki·ªán c∆° b·∫£n",
                "url": "./Python Basic/if_else_statement.html"
            },
            {
                "title": "V√≤ng l·∫∑p n√¢ng cao v√† gi·ªõi thi·ªáu v·ªÅ list trong python",
                "url": "./Python Basic/loop_and_list.html"
            },
            {
                "title": "Dictionary, List & JSON",
                "url": "./Python Basic/dictionary_list_jsonfile.html"
            },
            {
                "title": "L√†m vi·ªác v·ªõi list v√† txt file",
                "url": "./Python Basic/list_txtfile.html"
            },
            {
                "title": "B√†i ki·ªÉm tra 1",
                "url": "./Python Basic/exam_midterm.html"
            }
        ]
    },
    {
        "category": "Web Basic (VN)",
        "icon": "fas fa-code",
        "color": "green",
        "lessons": [
            {
                "title": "Lesson 1: Gi·ªõi thi·ªáu v·ªÅ HTML, c√∫ ph√°p HTML c∆° b·∫£n",
                "url": "./Web Basic/lesson1.html"
            },
            {
                "title": "Lesson 2: C√∫ ph√°p inline v√† block",
                "url": "./Web Basic/lesson2.html"
            },
            {
                "title": "Lesson 3: CSS Box Model v√† Layouts",
                "url": "./Web Basic/lesson3.html"
            },
            {
                "title": "Lesson 4: CSS External, Flexbox and Layouts",
                "url": "./Web Basic/lesson4.html"
            },
            {
                "title": "Lesson 5: √în t·∫≠p, t·ªïng quan",
                "url": "./Web Basic/lesson5_overview.html"
            },
            {
                "title": "Lesson 6: B√†i ki·ªÉm tra gi·ªØa kho√°",
                "url": "./Web Basic/lesson6_midterm.html"
            }
        ]
    },
    {
        "category": "Web Basic (English)",
        "icon": "fas fa-globe",
        "color": "indigo",
        "lessons": [
            {
                "title": "Lesson 1: HTML Introduction, basic syntax and basic styling",
                "url": "./Web Basic English/lesson1.html"
            },
            {
                "title": "Lesson 2: HTML Inline and Block Style",
                "url": "./Web Basic English/lesson2.html"
            },
            {
                "title": "Lesson 3: CSS Box Model and Layouts",
                "url": "./Web Basic English/lesson3.html"
            },
            {
                "title": "Lesson 4: CSS External, Flexbox and Layouts",
                "url": "./Web Basic English/lesson4.html"
            },
            {
                "title": "Lesson 5: Overview",
                "url": "./Web Basic English/lesson5_overview.html"
            },
            {
                "title": "Lesson 6: Midterm Test",
                "url": "./Web Basic English/lesson6_midterm.html"
            }
        ]
    },
    {
        "category": "Kho√° h·ªçc AI",
        "icon": "fas fa-robot",
        "color": "purple",
        "lessons": [
            {
                "title": "Lesson 1: L√†m quen v·ªõi AI, h·ªçc c√°ch s·ª≠ d·ª•ng Chat GPT",
                "url": "./AI Course For Student/lesson1.html"
            },
            {
                "title": "Lesson 2: Ch·∫Øt l·ªçc th√¥ng tin v·ªõi AI",
                "url": "./AI Course For Student/lesson2.html"
            }
        ]
    },
    {
        "category": "Hau",
        "icon": "fas fa-mobile-alt",
        "color": "purple",
        "lessons": [
            {
                "title": "Slide cu·ªëi m√¥n mobile",
                "url": "./Hau/mobile/index.html"
            },
            {
                "title": "Slide cu·ªëi m√¥n KHMT v√† CNPM",
                "url": "./Hau/khmt/index.html"
            }
        ]
    }
]

/* ===== Python Basic/lesson1.html ===== */
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bu·ªïi 1: L·∫≠p Tr√¨nh Python C∆° B·∫£n</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            scroll-behavior: smooth;
        }

        .slide {
            min-height: 80vh;
            /* Chi·ªÅu cao t·ªëi thi·ªÉu cho slide */
            scroll-snap-align: start;
            scroll-margin-top: 60px;
            /* Kho·∫£ng c√°ch v·ªõi thanh ƒëi·ªÅu h∆∞·ªõng c·ªë ƒë·ªãnh */
        }

        .code-block {
            background-color: #2d3748;
            /* M√†u n·ªÅn t·ªëi cho kh·ªëi code */
            color: #e2e8f0;
            /* M√†u ch·ªØ s√°ng */
            padding: 1rem;
            border-radius: 0.5rem;
            font-family: 'Courier New', Courier, monospace;
            white-space: pre-wrap;
            /* Gi·ªØ nguy√™n ƒë·ªãnh d·∫°ng v√† xu·ªëng d√≤ng */
            word-wrap: break-word;
            /* T·ª± ƒë·ªông ng·∫Øt t·ª´ d√†i */
            font-size: 0.9em;
        }

        .code-block .comment {
            color: #9ae6b4;
            /* M√†u xanh l√° cho comment */
        }

        .code-block .keyword {
            color: #63b3ed;
            /* M√†u xanh d∆∞∆°ng cho t·ª´ kh√≥a */
        }

        .code-block .string {
            color: #faf089;
            /* M√†u v√†ng cho chu·ªói */
        }

        .code-block .number {
            color: #f6ad55;
            /* M√†u cam cho s·ªë */
        }

        .code-block .function {
            color: #d6bcfa;
            /* M√†u t√≠m cho t√™n h√†m */
        }

        /* Custom scrollbar for a cleaner look */
        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb {
            background: #888;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #555;
        }

        /* Fixed navigation bar */
        #navbar {
            position: sticky;
            top: 0;
            z-index: 50;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        /* Smooth transition for slide visibility */
        .slide-content {
            display: none;
            animation: fadeIn 0.5s ease-in-out;
        }

        .slide-content.active {
            display: block;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>

<body class="bg-gray-100 text-gray-800">

    <nav id="navbar" class="p-4 mb-4">
        <div class="container mx-auto flex justify-between items-center">
            <h1 class="text-xl font-bold text-blue-600">Python Bu·ªïi 1</h1>
            <div>
                <button id="prevSlide"
                    class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg shadow mr-2 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                        stroke="currentColor" class="w-5 h-5 inline-block mr-1">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
                    </svg>
                    Tr∆∞·ªõc
                </button>
                <button id="nextSlide"
                    class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    Sau
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                        stroke="currentColor" class="w-5 h-5 inline-block ml-1">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
                    </svg>
                </button>
            </div>
            <div class="text-sm text-gray-600">
                Slide <span id="currentSlideNum">1</span> / <span id="totalSlidesNum"></span>
            </div>
        </div>
    </nav>

    <div class="container mx-auto p-4">
        <div id="slide-1" class="slide-content active bg-white p-8 rounded-lg shadow-lg slide">
            <h2 class="text-4xl font-bold text-center text-blue-700 mb-6">Bu·ªïi 1: Gi·ªõi Thi·ªáu L·∫≠p Tr√¨nh Python</h2>
            <p class="text-2xl text-center text-gray-600 mb-12">Bi·∫øn, Ki·ªÉu d·ªØ li·ªáu, To√°n t·ª≠ v√† Nh·∫≠p/Xu·∫•t C∆° B·∫£n</p>
            <div class="flex justify-center">
                <img src="https://placehold.co/400x250/3B82F6/FFFFFF?text=Python+Programming"
                    alt="[H√¨nh ·∫£nh L·∫≠p tr√¨nh Python]" class="rounded-lg shadow-md">
            </div>
            <p class="text-center mt-8 text-lg text-gray-700">Ch√†o m·ª´ng c√°c b·∫°n ƒë·∫øn v·ªõi bu·ªïi h·ªçc ƒë·∫ßu ti√™n v·ªÅ Python!</p>
        </div>

        <div id="slide-2" class="slide-content bg-white p-8 rounded-lg shadow-lg slide">
            <h3 class="text-3xl font-semibold text-blue-600 mb-4">1. Bi·∫øn (Variables) trong Python</h3>
            <p class="mb-4 text-lg">Bi·∫øn l√† m·ªôt t√™n ƒë∆∞·ª£c ƒë·∫∑t cho m·ªôt v·ªã tr√≠ trong b·ªô nh·ªõ m√°y t√≠nh, d√πng ƒë·ªÉ l∆∞u tr·ªØ d·ªØ
                li·ªáu. B·∫°n c√≥ th·ªÉ coi bi·∫øn nh∆∞ m·ªôt chi·∫øc h·ªôp c√≥ nh√£n, b√™n trong ch·ª©a m·ªôt gi√° tr·ªã n√†o ƒë√≥.</p>
            <p class="mb-2 font-medium">Quy t·∫Øc ƒë·∫∑t t√™n bi·∫øn:</p>
            <ul class="list-disc list-inside mb-4 pl-4 text-gray-700">
                <li>T√™n bi·∫øn c√≥ th·ªÉ ch·ª©a ch·ªØ c√°i (a-z, A-Z), s·ªë (0-9) v√† d·∫•u g·∫°ch d∆∞·ªõi (_).</li>
                <li>T√™n bi·∫øn kh√¥ng ƒë∆∞·ª£c b·∫Øt ƒë·∫ßu b·∫±ng s·ªë.</li>
                <li>T√™n bi·∫øn ph√¢n bi·ªát ch·ªØ hoa, ch·ªØ th∆∞·ªùng (<code>myVar</code> kh√°c <code>myvar</code>).</li>
                <li>Kh√¥ng d√πng c√°c t·ª´ kh√≥a c·ªßa Python l√†m t√™n bi·∫øn (v√≠ d·ª•: <code>if</code>, <code>else</code>,
                    <code>for</code>, <code>while</code>,...).
                </li>
                <li>N√™n ƒë·∫∑t t√™n bi·∫øn c√≥ √Ω nghƒ©a, d·ªÖ hi·ªÉu (v√≠ d·ª•: <code>ten_hoc_vien</code>,
                    <code>diem_trung_binh</code>). Quy ∆∞·ªõc ph·ªï bi·∫øn l√† d√πng ch·ªØ th∆∞·ªùng v√† d·∫•u g·∫°ch d∆∞·ªõi (snake_case).
                </li>
            </ul>
            <p class="mb-2 font-medium">V√≠ d·ª•:</p>
            <div class="code-block">
                <span class="comment"># Khai b√°o bi·∫øn v√† g√°n gi√° tr·ªã</span><br>
                <span class="variable">ten_hoc_vien</span> = <span class="string">"Nguy·ªÖn VƒÉn An"</span><br>
                <span class="variable">tuoi</span> = <span class="number">20</span><br>
                <span class="variable">diem_python</span> = <span class="number">8.5</span><br><br>
                <span class="comment"># In gi√° tr·ªã c·ªßa bi·∫øn</span><br>
                <span class="function">print</span>(<span class="variable">ten_hoc_vien</span>) <span class="comment">#
                    Output: Nguy·ªÖn VƒÉn An</span><br>
                <span class="function">print</span>(<span class="variable">tuoi</span>) <span class="comment"># Output:
                    20</span>
            </div>
        </div>

        <div id="slide-3" class="slide-content bg-white p-8 rounded-lg shadow-lg slide">
            <h3 class="text-3xl font-semibold text-blue-600 mb-4">2. Ki·ªÉu D·ªØ Li·ªáu (Data Types)</h3>
            <p class="mb-4 text-lg">Ki·ªÉu d·ªØ li·ªáu x√°c ƒë·ªãnh lo·∫°i gi√° tr·ªã m√† m·ªôt bi·∫øn c√≥ th·ªÉ l∆∞u tr·ªØ v√† c√°c thao t√°c c√≥ th·ªÉ
                th·ª±c hi·ªán tr√™n gi√° tr·ªã ƒë√≥. Python c√≥ nhi·ªÅu ki·ªÉu d·ªØ li·ªáu t√≠ch h·ª£p s·∫µn.</p>
            <p class="mb-2 font-medium">M·ªôt s·ªë ki·ªÉu d·ªØ li·ªáu c∆° b·∫£n th∆∞·ªùng d√πng:</p>
            <ul class="list-disc list-inside mb-4 pl-4 text-gray-700">
                <li><strong>S·ªë nguy√™n (Integer - <code>int</code>):</strong> D√πng ƒë·ªÉ l∆∞u tr·ªØ c√°c s·ªë nguy√™n (kh√¥ng c√≥
                    ph·∫ßn th·∫≠p ph√¢n). V√≠ d·ª•: <code>10</code>, <code>-5</code>, <code>0</code>.</li>
                <li><strong>S·ªë th·ª±c (Floating-point - <code>float</code>):</strong> D√πng ƒë·ªÉ l∆∞u tr·ªØ c√°c s·ªë c√≥ ph·∫ßn th·∫≠p
                    ph√¢n. V√≠ d·ª•: <code>3.14</code>, <code>-0.5</code>, <code>2.0</code>.</li>
                <li><strong>Chu·ªói k√Ω t·ª± (String - <code>str</code>):</strong> D√πng ƒë·ªÉ l∆∞u tr·ªØ vƒÉn b·∫£n, ƒë∆∞·ª£c ƒë·∫∑t trong
                    d·∫•u nh√°y ƒë∆°n (<code>'</code>) ho·∫∑c nh√°y k√©p (<code>"</code>). V√≠ d·ª•: <code>"Xin ch√†o"</code>,
                    <code>'Python'</code>.
                </li>
                <li><strong>Logic (Boolean - <code>bool</code>):</strong> D√πng ƒë·ªÉ l∆∞u tr·ªØ gi√° tr·ªã ƒë√∫ng/sai
                    (<code>True</code> ho·∫∑c <code>False</code>). (S·∫Ω t√¨m hi·ªÉu k·ªπ h∆°n ·ªü c√°c bu·ªïi sau).</li>
            </ul>
            <p class="mb-2 font-medium">Python l√† ng√¥n ng·ªØ ki·ªÉu ƒë·ªông, nghƒ©a l√† b·∫°n kh√¥ng c·∫ßn khai b√°o t∆∞·ªùng minh ki·ªÉu d·ªØ
                li·ªáu c·ªßa bi·∫øn. Python s·∫Ω t·ª± ƒë·ªông x√°c ƒë·ªãnh ki·ªÉu d·ªØ li·ªáu d·ª±a tr√™n gi√° tr·ªã ƒë∆∞·ª£c g√°n.</p>
            <div class="code-block">
                <span class="variable">x</span> = <span class="number">10</span> <span class="comment"># x l√† ki·ªÉu
                    int</span><br>
                <span class="variable">y</span> = <span class="number">3.14</span> <span class="comment"># y l√† ki·ªÉu
                    float</span><br>
                <span class="variable">ten</span> = <span class="string">"Alice"</span> <span class="comment"># ten l√†
                    ki·ªÉu str</span><br>
                <span class="variable">la_sinh_vien</span> = <span class="keyword">True</span> <span class="comment">#
                    la_sinh_vien l√† ki·ªÉu bool</span><br><br>
                <span class="comment"># Ki·ªÉm tra ki·ªÉu d·ªØ li·ªáu c·ªßa bi·∫øn b·∫±ng h√†m type()</span><br>
                <span class="function">print</span>(<span class="function">type</span>(<span class="variable">x</span>))
                <span class="comment"># Output: &lt;class 'int'&gt;</span><br>
                <span class="function">print</span>(<span class="function">type</span>(<span class="variable">y</span>))
                <span class="comment"># Output: &lt;class 'float'&gt;</span><br>
                <span class="function">print</span>(<span class="function">type</span>(<span
                    class="variable">ten</span>)) <span class="comment"># Output: &lt;class 'str'&gt;</span>
            </div>
        </div>

        <div id="slide-4" class="slide-content bg-white p-8 rounded-lg shadow-lg slide">
            <h3 class="text-3xl font-semibold text-blue-600 mb-4">2.1. Ki·ªÉu D·ªØ Li·ªáu S·ªë Nguy√™n (<code>int</code>)</h3>
            <p class="mb-4 text-lg">Ki·ªÉu <code>int</code> (integer) d√πng ƒë·ªÉ bi·ªÉu di·ªÖn c√°c s·ªë nguy√™n, kh√¥ng c√≥ ph·∫ßn th·∫≠p
                ph√¢n.</p>
            <p class="mb-2 font-medium">V√≠ d·ª•:</p>
            <div class="code-block">
                <span class="variable">so_luong_sach</span> = <span class="number">150</span><br>
                <span class="variable">nam_hien_tai</span> = <span class="number">2024</span><br>
                <span class="variable">nhiet_do_am</span> = <span class="number">-10</span><br><br>

                <span class="function">print</span>(<span class="string">"S·ªë l∆∞·ª£ng s√°ch:"</span>, <span
                    class="variable">so_luong_sach</span>) <span class="comment"># Output: S·ªë l∆∞·ª£ng s√°ch: 150</span><br>
                <span class="function">print</span>(<span class="string">"Ki·ªÉu d·ªØ li·ªáu c·ªßa nam_hien_tai:"</span>, <span
                    class="function">type</span>(<span class="variable">nam_hien_tai</span>)) <span class="comment">#
                    Output: Ki·ªÉu d·ªØ li·ªáu c·ªßa nam_hien_tai: &lt;class 'int'&gt;</span>
            </div>
        </div>

        <div id="slide-5" class="slide-content bg-white p-8 rounded-lg shadow-lg slide">
            <h3 class="text-3xl font-semibold text-blue-600 mb-4">2.2. Ki·ªÉu D·ªØ Li·ªáu S·ªë Th·ª±c (<code>float</code>)</h3>
            <p class="mb-4 text-lg">Ki·ªÉu <code>float</code> (floating-point number) d√πng ƒë·ªÉ bi·ªÉu di·ªÖn c√°c s·ªë th·ª±c, t·ª©c
                l√† c√°c s·ªë c√≥ ph·∫ßn th·∫≠p ph√¢n.</p>
            <p class="mb-2 font-medium">V√≠ d·ª•:</p>
            <div class="code-block">
                <span class="variable">pi</span> = <span class="number">3.14159</span><br>
                <span class="variable">diem_trung_binh</span> = <span class="number">7.85</span><br>
                <span class="variable">gia_xang</span> = <span class="number">25000.0</span> <span class="comment">#
                    C≈©ng l√† float d√π ph·∫ßn th·∫≠p ph√¢n l√† .0</span><br><br>

                <span class="function">print</span>(<span class="string">"Gi√° tr·ªã Pi:"</span>, <span
                    class="variable">pi</span>) <span class="comment"># Output: Gi√° tr·ªã Pi: 3.14159</span><br>
                <span class="function">print</span>(<span class="string">"Ki·ªÉu d·ªØ li·ªáu c·ªßa diem_trung_binh:"</span>,
                <span class="function">type</span>(<span class="variable">diem_trung_binh</span>)) <span
                    class="comment"># Output: Ki·ªÉu d·ªØ li·ªáu c·ªßa diem_trung_binh: &lt;class 'float'&gt;</span>
            </div>
        </div>

        <div id="slide-6" class="slide-content bg-white p-8 rounded-lg shadow-lg slide">
            <h3 class="text-3xl font-semibold text-blue-600 mb-4">2.3. Ki·ªÉu D·ªØ Li·ªáu Chu·ªói (<code>str</code>)</h3>
            <p class="mb-4 text-lg">Ki·ªÉu <code>str</code> (string) d√πng ƒë·ªÉ bi·ªÉu di·ªÖn vƒÉn b·∫£n ho·∫∑c m·ªôt d√£y c√°c k√Ω t·ª±.
                Chu·ªói ƒë∆∞·ª£c ƒë·∫∑t trong d·∫•u nh√°y ƒë∆°n (<code>'...'</code>) ho·∫∑c d·∫•u nh√°y k√©p (<code>"..."</code>).</p>
            <p class="mb-2 font-medium">V√≠ d·ª•:</p>
            <div class="code-block">
                <span class="variable">loi_chao</span> = <span class="string">"Xin ch√†o c√°c b·∫°n!"</span><br>
                <span class="variable">ten_sach</span> = <span class="string">'L·∫≠p tr√¨nh Python c∆° b·∫£n'</span><br>
                <span class="variable">dia_chi</span> = <span class="string">"123 ƒê∆∞·ªùng ABC, Qu·∫≠n XYZ"</span><br><br>

                <span class="function">print</span>(<span class="variable">loi_chao</span>) <span class="comment">#
                    Output: Xin ch√†o c√°c b·∫°n!</span><br>
                <span class="function">print</span>(<span class="string">"Ki·ªÉu d·ªØ li·ªáu c·ªßa ten_sach:"</span>, <span
                    class="function">type</span>(<span class="variable">ten_sach</span>)) <span class="comment">#
                    Output: Ki·ªÉu d·ªØ li·ªáu c·ªßa ten_sach: &lt;class 'str'&gt;</span><br><br>

                <span class="comment"># N·ªëi chu·ªói (Concatenation)</span><br>
                <span class="variable">ho</span> = <span class="string">"Tr·∫ßn"</span><br>
                <span class="variable">ten</span> = <span class="string">"VƒÉn"</span><br>
                <span class="variable">dem</span> = <span class="string">"B√¨nh"</span><br>
                <span class="variable">ho_ten</span> = <span class="variable">ho</span> + <span class="string">"
                    "</span> + <span class="variable">ten</span> + <span class="string">" "</span> + <span
                    class="variable">dem</span><br>
                <span class="function">print</span>(<span class="string">"H·ªç v√† t√™n:"</span>, <span
                    class="variable">ho_ten</span>) <span class="comment"># Output: H·ªç v√† t√™n: Tr·∫ßn VƒÉn B√¨nh</span>
            </div>
        </div>

        <div id="slide-7" class="slide-content bg-white p-8 rounded-lg shadow-lg slide">
            <h3 class="text-3xl font-semibold text-blue-600 mb-4">3. To√°n T·ª≠ (Operators) trong Python</h3>
            <h4 class="text-2xl font-medium text-gray-700 mb-3">3.1. To√°n T·ª≠ S·ªë H·ªçc</h4>
            <p class="mb-4 text-lg">To√°n t·ª≠ s·ªë h·ªçc ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ th·ª±c hi·ªán c√°c ph√©p to√°n to√°n h·ªçc.</p>
            <table class="w-full table-auto border-collapse border border-gray-300 mb-4">
                <thead>
                    <tr class="bg-gray-200">
                        <th class="border border-gray-300 px-4 py-2">To√°n t·ª≠</th>
                        <th class="border border-gray-300 px-4 py-2">T√™n</th>
                        <th class="border border-gray-300 px-4 py-2">V√≠ d·ª• (a=10, b=3)</th>
                        <th class="border border-gray-300 px-4 py-2">K·∫øt qu·∫£</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td class="border border-gray-300 px-4 py-2"><code>+</code></td>
                        <td class="border border-gray-300 px-4 py-2">C·ªông</td>
                        <td class="border border-gray-300 px-4 py-2"><code>a + b</code></td>
                        <td class="border border-gray-300 px-4 py-2"><code>13</code></td>
                    </tr>
                    <tr>
                        <td class="border border-gray-300 px-4 py-2"><code>-</code></td>
                        <td class="border border-gray-300 px-4 py-2">Tr·ª´</td>
                        <td class="border border-gray-300 px-4 py-2"><code>a - b</code></td>
                        <td class="border border-gray-300 px-4 py-2"><code>7</code></td>
                    </tr>
                    <tr>
                        <td class="border border-gray-300 px-4 py-2"><code>*</code></td>
                        <td class="border border-gray-300 px-4 py-2">Nh√¢n</td>
                        <td class="border border-gray-300 px-4 py-2"><code>a * b</code></td>
                        <td class="border border-gray-300 px-4 py-2"><code>30</code></td>
                    </tr>
                    <tr>
                        <td class="border border-gray-300 px-4 py-2"><code>/</code></td>
                        <td class="border border-gray-300 px-4 py-2">Chia (k·∫øt qu·∫£ l√† float)</td>
                        <td class="border border-gray-300 px-4 py-2"><code>a / b</code></td>
                        <td class="border border-gray-300 px-4 py-2"><code>3.333...</code></td>
                    </tr>
                    <tr>
                        <td class="border border-gray-300 px-4 py-2"><code>//</code></td>
                        <td class="border border-gray-300 px-4 py-2">Chia l·∫•y ph·∫ßn nguy√™n</td>
                        <td class="border border-gray-300 px-4 py-2"><code>a // b</code></td>
                        <td class="border border-gray-300 px-4 py-2"><code>3</code></td>
                    </tr>
                    <tr>
                        <td class="border border-gray-300 px-4 py-2"><code>%</code></td>
                        <td class="border border-gray-300 px-4 py-2">Chia l·∫•y ph·∫ßn d∆∞ (Modulo)</td>
                        <td class="border border-gray-300 px-4 py-2"><code>a % b</code></td>
                        <td class="border border-gray-300 px-4 py-2"><code>1</code></td>
                    </tr>
                    <tr>
                        <td class="border border-gray-300 px-4 py-2"><code>**</code></td>
                        <td class="border border-gray-300 px-4 py-2">L≈©y th·ª´a</td>
                        <td class="border border-gray-300 px-4 py-2"><code>a ** b</code></td>
                        <td class="border border-gray-300 px-4 py-2"><code>1000</code> (10<sup>3</sup>)</td>
                    </tr>
                </tbody>
            </table>
            <div class="code-block">
                <span class="variable">a</span> = <span class="number">10</span><br>
                <span class="variable">b</span> = <span class="number">3</span><br><br>
                <span class="function">print</span>(<span class="string">"a + b ="</span>, <span
                    class="variable">a</span> + <span class="variable">b</span>) <span class="comment"># Output: a + b =
                    13</span><br>
                <span class="function">print</span>(<span class="string">"a / b ="</span>, <span
                    class="variable">a</span> / <span class="variable">b</span>) <span class="comment"># Output: a / b =
                    3.3333333333333335</span><br>
                <span class="function">print</span>(<span class="string">"a // b ="</span>, <span
                    class="variable">a</span> // <span class="variable">b</span>) <span class="comment"># Output: a // b
                    = 3</span><br>
                <span class="function">print</span>(<span class="string">"a % b ="</span>, <span
                    class="variable">a</span> % <span class="variable">b</span>) <span class="comment"># Output: a % b =
                    1</span>
            </div>
        </div>

        <div id="slide-8" class="slide-content bg-white p-8 rounded-lg shadow-lg slide">
            <h3 class="text-3xl font-semibold text-blue-600 mb-4">3.2. Ph√©p G√°n Gi√° Tr·ªã (Assignment Operator)</h3>
            <p class="mb-4 text-lg">To√°n t·ª≠ g√°n ch√≠nh l√† d·∫•u b·∫±ng (<code>=</code>). N√≥ ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ g√°n gi√° tr·ªã cho
                bi·∫øn.</p>
            <div class="code-block">
                <span class="variable">x</span> = <span class="number">5</span> <span class="comment"># G√°n gi√° tr·ªã 5
                    cho bi·∫øn x</span><br>
                <span class="variable">y</span> = <span class="variable">x</span> + <span class="number">2</span> <span
                    class="comment"># G√°n k·∫øt qu·∫£ c·ªßa (x + 2) cho bi·∫øn y (y s·∫Ω l√† 7)</span><br><br>
                <span class="function">print</span>(<span class="string">"Gi√° tr·ªã c·ªßa x:"</span>, <span
                    class="variable">x</span>) <span class="comment"># Output: Gi√° tr·ªã c·ªßa x: 5</span><br>
                <span class="function">print</span>(<span class="string">"Gi√° tr·ªã c·ªßa y:"</span>, <span
                    class="variable">y</span>) <span class="comment"># Output: Gi√° tr·ªã c·ªßa y: 7</span>
            </div>
            <p class="mt-4 mb-2 font-medium">To√°n t·ª≠ g√°n k·∫øt h·ª£p (Compound Assignment Operators):</p>
            <p class="mb-4 text-lg">Python cung c·∫•p c√°c to√°n t·ª≠ g√°n k·∫øt h·ª£p ƒë·ªÉ vi·∫øt code ng·∫Øn g·ªçn h∆°n.</p>
            <table class="w-full table-auto border-collapse border border-gray-300 mb-4">
                <thead>
                    <tr class="bg-gray-200">
                        <th class="border border-gray-300 px-4 py-2">To√°n t·ª≠</th>
                        <th class="border border-gray-300 px-4 py-2">T∆∞∆°ng ƒë∆∞∆°ng v·ªõi</th>
                        <th class="border border-gray-300 px-4 py-2">V√≠ d·ª• (cho x = 5)</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td class="border border-gray-300 px-4 py-2"><code>x += 2</code></td>
                        <td class="border border-gray-300 px-4 py-2"><code>x = x + 2</code></td>
                        <td class="border border-gray-300 px-4 py-2"><code>x</code> s·∫Ω l√† <code>7</code></td>
                    </tr>
                    <tr>
                        <td class="border border-gray-300 px-4 py-2"><code>x -= 2</code></td>
                        <td class="border border-gray-300 px-4 py-2"><code>x = x - 2</code></td>
                        <td class="border border-gray-300 px-4 py-2"><code>x</code> s·∫Ω l√† <code>3</code></td>
                    </tr>
                    <tr>
                        <td class="border border-gray-300 px-4 py-2"><code>x *= 2</code></td>
                        <td class="border border-gray-300 px-4 py-2"><code>x = x * 2</code></td>
                        <td class="border border-gray-300 px-4 py-2"><code>x</code> s·∫Ω l√† <code>10</code></td>
                    </tr>
                    <tr>
                        <td class="border border-gray-300 px-4 py-2"><code>x /= 2</code></td>
                        <td class="border border-gray-300 px-4 py-2"><code>x = x / 2</code></td>
                        <td class="border border-gray-300 px-4 py-2"><code>x</code> s·∫Ω l√† <code>2.5</code></td>
                    </tr>
                </tbody>
            </table>
            <div class="code-block">
                <span class="variable">count</span> = <span class="number">0</span><br>
                <span class="variable">count</span> += <span class="number">1</span> <span class="comment"># T∆∞∆°ng ƒë∆∞∆°ng
                    count = count + 1</span><br>
                <span class="function">print</span>(<span class="string">"Count:"</span>, <span
                    class="variable">count</span>) <span class="comment"># Output: Count: 1</span><br><br>
                <span class="variable">total</span> = <span class="number">100</span><br>
                <span class="variable">total</span> -= <span class="number">10</span> <span class="comment"># T∆∞∆°ng
                    ƒë∆∞∆°ng total = total - 10</span><br>
                <span class="function">print</span>(<span class="string">"Total:"</span>, <span
                    class="variable">total</span>) <span class="comment"># Output: Total: 90</span>
            </div>
        </div>

        <div id="slide-9" class="slide-content bg-white p-8 rounded-lg shadow-lg slide">
            <h3 class="text-3xl font-semibold text-blue-600 mb-4">4. H√†m <code>print()</code> - Xu·∫•t D·ªØ Li·ªáu</h3>
            <p class="mb-4 text-lg">H√†m <code>print()</code> ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ hi·ªÉn th·ªã (in) d·ªØ li·ªáu ra m√†n h√¨nh console.
            </p>
            <p class="mb-2 font-medium">C√°ch s·ª≠ d·ª•ng:</p>
            <ul class="list-disc list-inside mb-4 pl-4 text-gray-700">
                <li>In m·ªôt chu·ªói k√Ω t·ª±: <code>print("Xin ch√†o!")</code></li>
                <li>In gi√° tr·ªã c·ªßa bi·∫øn: <code>print(ten_bien)</code></li>
                <li>In nhi·ªÅu gi√° tr·ªã (c√°c gi√° tr·ªã c√°ch nhau b·ªüi d·∫•u ph·∫©y, m·∫∑c ƒë·ªãnh s·∫Ω c√≥ kho·∫£ng tr·∫Øng gi·ªØa ch√∫ng khi
                    in): <code>print("T√™n:", ten, "Tu·ªïi:", tuoi)</code></li>
                <li>ƒê·ªãnh d·∫°ng chu·ªói (f-string - c√°ch hi·ªán ƒë·∫°i v√† d·ªÖ ƒë·ªçc):
                    <code>print(f"B·∫°n {ten} nƒÉm nay {tuoi} tu·ªïi.")</code>
                </li>
            </ul>
            <div class="code-block">
                <span class="variable">ten</span> = <span class="string">"Mai"</span><br>
                <span class="variable">tuoi</span> = <span class="number">25</span><br><br>

                <span class="comment"># In chu·ªói c·ªë ƒë·ªãnh</span><br>
                <span class="function">print</span>(<span class="string">"Ch√†o m·ª´ng ƒë·∫øn v·ªõi Python!"</span>)<br>
                <span class="comment"># Output: Ch√†o m·ª´ng ƒë·∫øn v·ªõi Python!</span><br><br>

                <span class="comment"># In gi√° tr·ªã bi·∫øn</span><br>
                <span class="function">print</span>(<span class="variable">ten</span>)<br>
                <span class="comment"># Output: Mai</span><br><br>

                <span class="comment"># In nhi·ªÅu gi√° tr·ªã</span><br>
                <span class="function">print</span>(<span class="string">"T√™n c·ªßa b·∫°n l√†:"</span>, <span
                    class="variable">ten</span>, <span class="string">", b·∫°n"</span>, <span
                    class="variable">tuoi</span>, <span class="string">"tu·ªïi."</span>)<br>
                <span class="comment"># Output: T√™n c·ªßa b·∫°n l√†: Mai , b·∫°n 25 tu·ªïi.</span><br><br>

                <span class="comment"># S·ª≠ d·ª•ng f-string (khuy·∫øn kh√≠ch)</span><br>
                <span class="function">print</span>(<span class="string">f"Xin ch√†o {ten}, b·∫°n nƒÉm nay {tuoi}
                    tu·ªïi."</span>)<br>
                <span class="comment"># Output: Xin ch√†o Mai, b·∫°n nƒÉm nay 25 tu·ªïi.</span><br><br>

                <span class="variable">so_a</span> = <span class="number">10</span><br>
                <span class="variable">so_b</span> = <span class="number">20</span><br>
                <span class="function">print</span>(<span class="string">f"T·ªïng c·ªßa {so_a} v√† {so_b} l√† {so_a +
                    so_b}"</span>)<br>
                <span class="comment"># Output: T·ªïng c·ªßa 10 v√† 20 l√† 30</span>
            </div>
        </div>

        <div id="slide-10" class="slide-content bg-white p-8 rounded-lg shadow-lg slide">
            <h3 class="text-3xl font-semibold text-blue-600 mb-4">5. H√†m <code>input()</code> - Nh·∫≠p D·ªØ Li·ªáu</h3>
            <p class="mb-4 text-lg">H√†m <code>input()</code> ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ nh·∫≠n d·ªØ li·ªáu t·ª´ ng∆∞·ªùi d√πng qua b√†n ph√≠m.
            </p>
            <p class="mb-2 font-medium">ƒê·∫∑c ƒëi·ªÉm quan tr·ªçng:</p>
            <ul class="list-disc list-inside mb-4 pl-4 text-gray-700">
                <li>H√†m <code>input()</code> lu√¥n tr·∫£ v·ªÅ m·ªôt chu·ªói (<code>str</code>), ngay c·∫£ khi ng∆∞·ªùi d√πng nh·∫≠p s·ªë.
                </li>
                <li>B·∫°n c√≥ th·ªÉ truy·ªÅn m·ªôt chu·ªói v√†o h√†m <code>input()</code> ƒë·ªÉ hi·ªÉn th·ªã l·ªùi nh·∫Øc cho ng∆∞·ªùi d√πng. V√≠ d·ª•:
                    <code>input("Nh·∫≠p t√™n c·ªßa b·∫°n: ")</code>
                </li>
                <li>ƒê·ªÉ s·ª≠ d·ª•ng gi√° tr·ªã nh·∫≠p v√†o d∆∞·ªõi d·∫°ng s·ªë (<code>int</code> ho·∫∑c <code>float</code>), b·∫°n c·∫ßn √©p ki·ªÉu
                    (chuy·ªÉn ƒë·ªïi ki·ªÉu) b·∫±ng h√†m <code>int()</code> ho·∫∑c <code>float()</code>.</li>
            </ul>
            <div class="code-block">
                <span class="comment"># Nh·∫≠p t√™n ng∆∞·ªùi d√πng</span><br>
                <span class="variable">ten_nguoi_dung</span> = <span class="function">input</span>(<span
                    class="string">"Vui l√≤ng nh·∫≠p t√™n c·ªßa b·∫°n: "</span>)<br>
                <span class="function">print</span>(<span class="string">f"Xin ch√†o, {ten_nguoi_dung}!"</span>)<br><br>

                <span class="comment"># Nh·∫≠p tu·ªïi v√† √©p ki·ªÉu sang int</span><br>
                <span class="variable">chuoi_tuoi</span> = <span class="function">input</span>(<span class="string">"B·∫°n
                    bao nhi√™u tu·ªïi? "</span>)<br>
                <span class="variable">tuoi_nguoi_dung</span> = <span class="function">int</span>(<span
                    class="variable">chuoi_tuoi</span>) <span class="comment"># √âp ki·ªÉu sang s·ªë nguy√™n</span><br>
                <span class="function">print</span>(<span class="string">f"V·∫≠y l√† b·∫°n {tuoi_nguoi_dung} tu·ªïi. Sang nƒÉm
                    b·∫°n s·∫Ω {tuoi_nguoi_dung + 1} tu·ªïi."</span>)<br><br>

                <span class="comment"># Nh·∫≠p ƒëi·ªÉm trung b√¨nh v√† √©p ki·ªÉu sang float</span><br>
                <span class="variable">diem_tb_str</span> = <span class="function">input</span>(<span
                    class="string">"Nh·∫≠p ƒëi·ªÉm trung b√¨nh c·ªßa b·∫°n: "</span>)<br>
                <span class="variable">diem_tb</span> = <span class="function">float</span>(<span
                    class="variable">diem_tb_str</span>) <span class="comment"># √âp ki·ªÉu sang s·ªë th·ª±c</span><br>
                <span class="function">print</span>(<span class="string">f"ƒêi·ªÉm trung b√¨nh c·ªßa b·∫°n l√†:
                    {diem_tb}"</span>)
            </div>
            <p class="mt-4 text-orange-600 font-semibold">L∆∞u √Ω: N·∫øu ng∆∞·ªùi d√πng nh·∫≠p vƒÉn b·∫£n khi b·∫°n c·ªë g·∫Øng √©p ki·ªÉu
                sang <code>int()</code> ho·∫∑c <code>float()</code>, ch∆∞∆°ng tr√¨nh s·∫Ω b√°o l·ªói (<code>ValueError</code>). X·ª≠
                l√Ω l·ªói s·∫Ω ƒë∆∞·ª£c h·ªçc ·ªü c√°c bu·ªïi sau.</p>
        </div>

        <div id="slide-11" class="slide-content bg-white p-8 rounded-lg shadow-lg slide">
            <h3 class="text-3xl font-semibold text-blue-600 mb-4">6. V√≠ d·ª• T·ªïng H·ª£p 1: T√≠nh Tu·ªïi</h3>
            <p class="mb-4 text-lg">Y√™u c·∫ßu: Vi·∫øt ch∆∞∆°ng tr√¨nh nh·∫≠p v√†o nƒÉm sinh c·ªßa m·ªôt ng∆∞·ªùi, sau ƒë√≥ t√≠nh v√† in ra
                tu·ªïi c·ªßa ng∆∞·ªùi ƒë√≥ (gi·∫£ s·ª≠ nƒÉm hi·ªán t·∫°i l√† 2024).</p>
            <div class="code-block">
                <span class="variable">nam_hien_tai</span> = <span class="number">2024</span><br><br>

                <span class="comment"># Nh·∫≠p nƒÉm sinh t·ª´ ng∆∞·ªùi d√πng</span><br>
                <span class="variable">chuoi_nam_sinh</span> = <span class="function">input</span>(<span
                    class="string">"Nh·∫≠p nƒÉm sinh c·ªßa b·∫°n: "</span>)<br><br>

                <span class="comment"># √âp ki·ªÉu nƒÉm sinh sang s·ªë nguy√™n</span><br>
                <span class="variable">nam_sinh</span> = <span class="function">int</span>(<span
                    class="variable">chuoi_nam_sinh</span>)<br><br>

                <span class="comment"># T√≠nh tu·ªïi</span><br>
                <span class="variable">tuoi</span> = <span class="variable">nam_hien_tai</span> - <span
                    class="variable">nam_sinh</span><br><br>

                <span class="comment"># In k·∫øt qu·∫£</span><br>
                <span class="function">print</span>(<span class="string">f"B·∫°n nƒÉm nay {tuoi} tu·ªïi."</span>)
            </div>
            <p class="mt-4 text-lg"><strong>Th·ª≠ ch·∫°y ch∆∞∆°ng tr√¨nh:</strong></p>
            <p class="text-gray-700">N·∫øu b·∫°n nh·∫≠p nƒÉm sinh l√† <code>1995</code>, k·∫øt qu·∫£ s·∫Ω l√†:
                <code>B·∫°n nƒÉm nay 29 tu·ªïi.</code>
            </p>
        </div>

        <div id="slide-12" class="slide-content bg-white p-8 rounded-lg shadow-lg slide">
            <h3 class="text-3xl font-semibold text-blue-600 mb-4">7. V√≠ d·ª• T·ªïng H·ª£p 2: Ch√†o H·ªèi C√° Nh√¢n</h3>
            <p class="mb-4 text-lg">Y√™u c·∫ßu: Vi·∫øt ch∆∞∆°ng tr√¨nh nh·∫≠p v√†o t√™n v√† th√†nh ph·ªë c·ªßa m·ªôt ng∆∞·ªùi, sau ƒë√≥ in ra m·ªôt
                l·ªùi ch√†o c√° nh√¢n h√≥a.</p>
            <div class="code-block">
                <span class="comment"># Nh·∫≠p t√™n t·ª´ ng∆∞·ªùi d√πng</span><br>
                <span class="variable">ten</span> = <span class="function">input</span>(<span class="string">"Nh·∫≠p t√™n
                    c·ªßa b·∫°n: "</span>)<br><br>

                <span class="comment"># Nh·∫≠p th√†nh ph·ªë t·ª´ ng∆∞·ªùi d√πng</span><br>
                <span class="variable">thanh_pho</span> = <span class="function">input</span>(<span class="string">"B·∫°n
                    ƒë·∫øn t·ª´ th√†nh ph·ªë n√†o? "</span>)<br><br>

                <span class="comment"># In l·ªùi ch√†o c√° nh√¢n h√≥a</span><br>
                <span class="function">print</span>(<span class="string">f"Ch√†o b·∫°n {ten}! R·∫•t vui ƒë∆∞·ª£c bi·∫øt b·∫°n ƒë·∫øn t·ª´
                    {thanh_pho}."</span>)
            </div>
            <p class="mt-4 text-lg"><strong>Th·ª≠ ch·∫°y ch∆∞∆°ng tr√¨nh:</strong></p>
            <p class="text-gray-700">N·∫øu b·∫°n nh·∫≠p t√™n l√† <code>Lan</code> v√† th√†nh ph·ªë l√† <code>H√† N·ªôi</code>, k·∫øt qu·∫£
                s·∫Ω l√†: <code>Ch√†o b·∫°n Lan! R·∫•t vui ƒë∆∞·ª£c bi·∫øt b·∫°n ƒë·∫øn t·ª´ H√† N·ªôi.</code></p>
        </div>

        <div id="slide-13" class="slide-content bg-white p-8 rounded-lg shadow-lg slide">
            <h3 class="text-3xl font-semibold text-green-600 mb-4">8. B√†i T·∫≠p Th·ª±c H√†nh</h3>
            <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i t·∫≠p 1: Th√¥ng Tin C√° Nh√¢n</h4>
            <p class="mb-2 text-lg"><strong>Y√™u c·∫ßu:</strong> Vi·∫øt m·ªôt ch∆∞∆°ng tr√¨nh Python th·ª±c hi·ªán c√°c b∆∞·ªõc sau:</p>
            <ol class="list-decimal list-inside mb-4 pl-4 text-gray-700">
                <li>Y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p v√†o <strong>t√™n</strong> c·ªßa h·ªç.</li>
                <li>Y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p v√†o <strong>tu·ªïi</strong> c·ªßa h·ªç.</li>
                <li>Y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p v√†o <strong>t√™n tr∆∞·ªùng ƒë·∫°i h·ªçc</strong> (ho·∫∑c tr∆∞·ªùng h·ªçc/c√¥ng ty) c·ªßa h·ªç.
                </li>
                <li>In ra m·ªôt c√¢u t·ªïng h·ª£p th√¥ng tin, v√≠ d·ª•: "Ch√†o b·∫°n [T√™n], b·∫°n [Tu·ªïi] tu·ªïi v√† ƒëang h·ªçc/l√†m vi·ªác t·∫°i
                    [T√™n tr∆∞·ªùng]."</li>
            </ol>
            <p class="mb-2 font-medium">V√≠ d·ª• output mong mu·ªën:</p>
            <div class="code-block">
                <span class="comment"># Input m·∫´u:</span><br>
                <span class="comment"># T√™n: An</span><br>
                <span class="comment"># Tu·ªïi: 21</span><br>
                <span class="comment"># Tr∆∞·ªùng: ƒê·∫°i h·ªçc B√°ch Khoa</span><br><br>
                <span class="comment"># Output mong mu·ªën:</span><br>
                <span class="string">"Ch√†o b·∫°n An, b·∫°n 21 tu·ªïi v√† ƒëang h·ªçc/l√†m vi·ªác t·∫°i ƒê·∫°i h·ªçc B√°ch Khoa."</span>
            </div>
        </div>

        <div id="slide-14" class="slide-content bg-white p-8 rounded-lg shadow-lg slide">
            <h3 class="text-3xl font-semibold text-green-600 mb-4">8. B√†i T·∫≠p Th·ª±c H√†nh (Ti·∫øp theo)</h3>
            <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i t·∫≠p 2: T√≠nh Di·ªán T√≠ch H√¨nh Ch·ªØ Nh·∫≠t</h4>
            <p class="mb-2 text-lg"><strong>Y√™u c·∫ßu:</strong> Vi·∫øt m·ªôt ch∆∞∆°ng tr√¨nh Python th·ª±c hi·ªán c√°c b∆∞·ªõc sau:</p>
            <ol class="list-decimal list-inside mb-4 pl-4 text-gray-700">
                <li>Y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p v√†o <strong>chi·ªÅu d√†i</strong> c·ªßa h√¨nh ch·ªØ nh·∫≠t (c√≥ th·ªÉ l√† s·ªë th·ª±c).</li>
                <li>Y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p v√†o <strong>chi·ªÅu r·ªông</strong> c·ªßa h√¨nh ch·ªØ nh·∫≠t (c√≥ th·ªÉ l√† s·ªë th·ª±c).</li>
                <li>T√≠nh <strong>di·ªán t√≠ch</strong> c·ªßa h√¨nh ch·ªØ nh·∫≠t theo c√¥ng th·ª©c: Di·ªán t√≠ch = Chi·ªÅu d√†i * Chi·ªÅu
                    r·ªông.</li>
                <li>In ra di·ªán t√≠ch ƒë√£ t√≠nh ƒë∆∞·ª£c, k√®m theo th√¥ng tin r√µ r√†ng.</li>
            </ol>
            <p class="mb-2 font-medium">V√≠ d·ª• output mong mu·ªën:</p>
            <div class="code-block">
                <span class="comment"># Input m·∫´u:</span><br>
                <span class="comment"># Chi·ªÅu d√†i: 10.5</span><br>
                <span class="comment"># Chi·ªÅu r·ªông: 5.2</span><br><br>
                <span class="comment"># Output mong mu·ªën:</span><br>
                <span class="string">"Di·ªán t√≠ch h√¨nh ch·ªØ nh·∫≠t v·ªõi chi·ªÅu d√†i 10.5 v√† chi·ªÅu r·ªông 5.2 l√†: 54.6"</span>
            </div>
        </div>

        <div id="slide-15" class="slide-content bg-white p-8 rounded-lg shadow-lg slide">
            <h3 class="text-3xl font-semibold text-green-600 mb-4">8. B√†i T·∫≠p Th·ª±c H√†nh (Ti·∫øp theo)</h3>
            <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i t·∫≠p 3: Chuy·ªÉn ƒê·ªïi Ti·ªÅn T·ªá (ƒê∆°n Gi·∫£n)</h4>
            <p class="mb-2 text-lg"><strong>Y√™u c·∫ßu:</strong> Vi·∫øt m·ªôt ch∆∞∆°ng tr√¨nh Python th·ª±c hi·ªán c√°c b∆∞·ªõc sau:</p>
            <ol class="list-decimal list-inside mb-4 pl-4 text-gray-700">
                <li>Y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p v√†o m·ªôt s·ªë ti·ªÅn b·∫±ng <strong>USD</strong> (ƒê√¥ la M·ªπ).</li>
                <li>Gi·∫£ s·ª≠ t·ªâ gi√° c·ªë ƒë·ªãnh l√† <strong>1 USD = 23500 VND</strong>.</li>
                <li>T√≠nh s·ªë ti·ªÅn t∆∞∆°ng ·ª©ng b·∫±ng <strong>VND</strong> (Vi·ªát Nam ƒê·ªìng).</li>
                <li>In ra s·ªë ti·ªÅn ƒë√£ quy ƒë·ªïi.</li>
            </ol>
            <p class="mb-2 font-medium">V√≠ d·ª• output mong mu·ªën:</p>
            <div class="code-block">
                <span class="comment"># Input m·∫´u:</span><br>
                <span class="comment"># S·ªë ti·ªÅn USD: 50</span><br><br>
                <span class="comment"># Output mong mu·ªën:</span><br>
                <span class="string">"50 USD t∆∞∆°ng ƒë∆∞∆°ng v·ªõi 1175000 VND."</span>
            </div>
        </div>

        <div id="slide-16" class="slide-content bg-white p-8 rounded-lg shadow-lg slide">
            <h3 class="text-3xl font-semibold text-blue-600 mb-4">9. T√≥m T·∫Øt v√† C√¢u H·ªèi</h3>
            <p class="mb-4 text-lg">Trong bu·ªïi h·ªçc h√¥m nay, ch√∫ng ta ƒë√£ t√¨m hi·ªÉu v·ªÅ:</p>
            <ul class="list-disc list-inside mb-4 pl-4 text-gray-700 space-y-2">
                <li><strong>Bi·∫øn:</strong> C√°ch ƒë·∫∑t t√™n v√† l∆∞u tr·ªØ d·ªØ li·ªáu.</li>
                <li><strong>Ki·ªÉu d·ªØ li·ªáu c∆° b·∫£n:</strong> <code>int</code> (s·ªë nguy√™n), <code>float</code> (s·ªë th·ª±c),
                    <code>str</code> (chu·ªói).
                </li>
                <li><strong>To√°n t·ª≠:</strong> To√°n t·ª≠ s·ªë h·ªçc (<code>+</code>, <code>-</code>, <code>*</code>,
                    <code>/</code>, <code>//</code>, <code>%</code>, <code>**</code>) v√† to√°n t·ª≠ g√°n (<code>=</code>,
                    <code>+=</code>, ...).
                </li>
                <li><strong>H√†m <code>print()</code>:</strong> ƒê·ªÉ xu·∫•t (in) d·ªØ li·ªáu ra m√†n h√¨nh.</li>
                <li><strong>H√†m <code>input()</code>:</strong> ƒê·ªÉ nh·∫≠p d·ªØ li·ªáu t·ª´ ng∆∞·ªùi d√πng v√† t·∫ßm quan tr·ªçng c·ªßa vi·ªác
                    √©p ki·ªÉu.</li>
            </ul>
            <p class="text-lg mb-6">ƒê√¢y l√† nh·ªØng ki·∫øn th·ª©c n·ªÅn t·∫£ng r·∫•t quan tr·ªçng ƒë·ªÉ ti·∫øp t·ª•c h√†nh tr√¨nh h·ªçc l·∫≠p tr√¨nh
                Python c·ªßa b·∫°n!</p>
            <div class="flex justify-center mb-8">
                <img src="https://placehold.co/300x200/10B981/FFFFFF?text=Q%26A" alt="[H√¨nh ·∫£nh H·ªèi v√† ƒê√°p]"
                    class="rounded-lg shadow-md">
            </div>
            <h4 class="text-2xl font-semibold text-center text-green-600">B·∫°n c√≥ c√¢u h·ªèi n√†o kh√¥ng?</h4>
        </div>

    </div>

    <script>
        const slides = document.querySelectorAll('.slide-content');
        const prevButton = document.getElementById('prevSlide');
        const nextButton = document.getElementById('nextSlide');
        const currentSlideNumDisplay = document.getElementById('currentSlideNum');
        const totalSlidesNumDisplay = document.getElementById('totalSlidesNum');

        let currentSlide = 0;
        totalSlidesNumDisplay.textContent = slides.length;

        function showSlide(index) {
            slides.forEach((slide, i) => {
                if (i === index) {
                    slide.classList.add('active');
                } else {
                    slide.classList.remove('active');
                }
            });
            currentSlideNumDisplay.textContent = index + 1;
            updateNavButtons();
        }

        function updateNavButtons() {
            prevButton.disabled = currentSlide === 0;
            nextButton.disabled = currentSlide === slides.length - 1;
        }

        prevButton.addEventListener('click', () => {
            if (currentSlide > 0) {
                currentSlide--;
                showSlide(currentSlide);
            }
        });

        nextButton.addEventListener('click', () => {
            if (currentSlide < slides.length - 1) {
                currentSlide++;
                showSlide(currentSlide);
            }
        });

        // Initialize first slide
        showSlide(currentSlide);
    </script>

</body>

</html>

/* ===== Python Basic/lesson2.html ===== */
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bu·ªïi 2: C√¢u L·ªánh ƒêi·ªÅu Ki·ªán trong Python</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            scroll-behavior: smooth;
            background-color: #f3f4f6;
            /* Slightly off-white background for the body */
        }

        /* Fixed navigation bar */
        #navbar {
            position: sticky;
            top: 0;
            z-index: 50;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .slide-container {
            padding-top: 1rem;
            /* Add some space below the navbar */
        }

        .slide {
            background-color: white;
            padding: 2rem;
            /* p-8 */
            border-radius: 0.5rem;
            /* rounded-lg */
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            /* shadow-lg */
            margin-bottom: 2rem;
            /* Space between slides if they were all visible (though only one is active) */
            display: none;
            /* Hidden by default */
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
            min-height: calc(100vh - 120px);
            /* Ensure slide takes up significant viewport height minus navbar and some padding */
            display: flex;
            flex-direction: column;
        }

        .slide.active {
            display: flex;
            /* Use flex to allow content to grow */
            opacity: 1;
            transform: translateY(0);
        }

        .slide-content-wrapper {
            flex-grow: 1;
            /* Allow content to take available space */
        }


        .code-block {
            background-color: #2d3748;
            color: #e2e8f0;
            padding: 1rem;
            border-radius: 0.5rem;
            font-family: 'Courier New', Courier, monospace;
            white-space: pre-wrap;
            word-wrap: break-word;
            font-size: 0.9em;
            margin-top: 0.5rem;
            margin-bottom: 1rem;
        }

        .code-block .comment {
            color: #9ae6b4;
        }

        .code-block .keyword {
            color: #63b3ed;
        }

        .code-block .string {
            color: #faf089;
        }

        .code-block .number {
            color: #f6ad55;
        }

        .code-block .function {
            color: #d6bcfa;
        }

        .code-block .operator {
            color: #f687b3;
        }

        .code-block .boolean {
            color: #f6ad55;
        }

        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb {
            background: #888;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #555;
        }

        /* Ensure images are responsive and don't overflow */
        img {
            max-width: 100%;
            height: auto;
            border-radius: 0.375rem;
            /* rounded-md */
        }
    </style>
</head>

<body class="text-gray-800">

    <nav id="navbar" class="p-4">
        <div class="container mx-auto flex flex-wrap justify-between items-center">
            <h1 class="text-xl font-bold text-green-600">Python Bu·ªïi 2: C√¢u L·ªánh ƒêi·ªÅu Ki·ªán</h1>
            <div class="flex items-center mt-2 sm:mt-0">
                <button id="prevSlide"
                    class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-lg shadow mr-2 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                        stroke="currentColor" class="w-5 h-5 inline-block mr-1">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
                    </svg>
                    Tr∆∞·ªõc
                </button>
                <button id="nextSlide"
                    class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    Sau
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                        stroke="currentColor" class="w-5 h-5 inline-block ml-1">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
                    </svg>
                </button>
            </div>
            <div class="text-sm text-gray-600 mt-2 sm:mt-0 ml-0 sm:ml-4">
                Slide <span id="currentSlideNum">1</span> / <span id="totalSlidesNum"></span>
            </div>
        </div>
    </nav>

    <div class="container mx-auto p-4 slide-container">
        <div id="slide-1" class="slide">
            <div class="slide-content-wrapper">
                <h2 class="text-4xl font-bold text-center text-green-700 mb-6">Bu·ªïi 2: C√¢u L·ªánh ƒêi·ªÅu Ki·ªán trong Python
                </h2>
                <p class="text-2xl text-center text-gray-600 mb-12">L√†m ch·ªß lu·ªìng ch∆∞∆°ng tr√¨nh v·ªõi <code>if</code>,
                    <code>else</code>, v√† <code>elif</code>
                </p>
                <div class="flex justify-center my-8">
                    <img src="https://placehold.co/400x250/22C55E/FFFFFF?text=Conditional+Logic"
                        alt="[H√¨nh ·∫£nh Logic ƒêi·ªÅu Ki·ªán]" class="shadow-md">
                </div>
                <p class="text-center mt-8 text-lg text-gray-700">C√πng kh√°m ph√° c√°ch Python ƒë∆∞a ra quy·∫øt ƒë·ªãnh!</p>
            </div>
        </div>

        <div id="slide-2" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-green-600 mb-4">1. Gi·ªõi Thi·ªáu C√¢u L·ªánh ƒêi·ªÅu Ki·ªán</h3>
                <p class="mb-4 text-lg">Trong cu·ªôc s·ªëng, ch√∫ng ta th∆∞·ªùng xuy√™n ph·∫£i ƒë∆∞a ra quy·∫øt ƒë·ªãnh d·ª±a tr√™n nh·ªØng
                    ƒëi·ªÅu ki·ªán nh·∫•t ƒë·ªãnh. V√≠ d·ª•: "N·∫øu tr·ªùi m∆∞a, t√¥i s·∫Ω mang √¥."</p>
                <p class="mb-4 text-lg">Trong l·∫≠p tr√¨nh, c√¢u l·ªánh ƒëi·ªÅu ki·ªán (conditional statements) cho ph√©p ch∆∞∆°ng
                    tr√¨nh th·ª±c thi nh·ªØng kh·ªëi m√£ kh√°c nhau t√πy thu·ªôc v√†o vi·ªác m·ªôt ho·∫∑c nhi·ªÅu ƒëi·ªÅu ki·ªán c√≥ ƒë∆∞·ª£c th·ªèa m√£n
                    (ƒë√∫ng - <code>True</code>) hay kh√¥ng (sai - <code>False</code>).</p>
                <p class="mb-2 font-medium text-lg">T·∫°i sao c·∫ßn c√¢u l·ªánh ƒëi·ªÅu ki·ªán?</p>
                <ul class="list-disc list-inside mb-4 pl-4 text-gray-700">
                    <li>T·∫°o ra c√°c ch∆∞∆°ng tr√¨nh linh ho·∫°t, c√≥ kh·∫£ nƒÉng ph·∫£n ·ª©ng v·ªõi c√°c t√¨nh hu·ªëng kh√°c nhau.</li>
                    <li>Ki·ªÉm so√°t lu·ªìng th·ª±c thi c·ªßa ch∆∞∆°ng tr√¨nh.</li>
                    <li>X·ª≠ l√Ω c√°c tr∆∞·ªùng h·ª£p ƒë·∫∑c bi·ªát ho·∫∑c l·ªói c√≥ th·ªÉ x·∫£y ra.</li>
                </ul>
                <p class="text-lg">Python s·ª≠ d·ª•ng c√°c t·ª´ kh√≥a <code>if</code>, <code>else</code>, v√† <code>elif</code>
                    (vi·∫øt t·∫Øt c·ªßa "else if") ƒë·ªÉ x√¢y d·ª±ng c√°c c√¢u l·ªánh ƒëi·ªÅu ki·ªán.</p>
                <div class="flex justify-center mt-6">
                    <img src="https://placehold.co/350x200/A3E635/FFFFFF?text=Decision+Making"
                        alt="[H√¨nh ·∫£nh Ra Quy·∫øt ƒê·ªãnh]" class="shadow-md">
                </div>
            </div>
        </div>

        <div id="slide-3" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-green-600 mb-4">2. L·ªánh <code>if</code> (N·∫øu)</h3>
                <p class="mb-4 text-lg">L·ªánh <code>if</code> ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ th·ª±c thi m·ªôt kh·ªëi m√£ n·∫øu m·ªôt ƒëi·ªÅu ki·ªán c·ª•
                    th·ªÉ l√† ƒë√∫ng (<code>True</code>).</p>
                <p class="mb-2 font-medium">C√∫ ph√°p:</p>
                <div class="code-block">
                    <span class="keyword">if</span> <span class="variable">dieu_kien</span><span
                        class="operator">:</span><br>
                    <span class="comment"> # Kh·ªëi l·ªánh s·∫Ω ƒë∆∞·ª£c th·ª±c thi n·∫øu dieu_kien l√† True</span><br>
                    <span class="comment"> # (L∆∞u √Ω th·ª•t ƒë·∫ßu d√≤ng)</span><br>
                    <span class="variable"> hanh_dong_1</span><br>
                    <span class="variable"> hanh_dong_2</span>
                </div>
                <p class="mt-4 mb-2 text-lg"><strong>Quan tr·ªçng:</strong> Kh·ªëi l·ªánh b√™n trong <code>if</code> ph·∫£i ƒë∆∞·ª£c
                    th·ª•t v√†o ƒë·∫ßu d√≤ng (th∆∞·ªùng l√† 4 d·∫•u c√°ch ho·∫∑c 1 ph√≠m Tab). Python s·ª≠ d·ª•ng vi·ªác th·ª•t l·ªÅ ƒë·ªÉ x√°c ƒë·ªãnh
                    ph·∫°m vi c·ªßa kh·ªëi l·ªánh.</p>
                <p class="mb-2 font-medium">V√≠ d·ª•:</p>
                <div class="code-block">
                    <span class="variable">tuoi</span> <span class="operator">=</span> <span
                        class="number">18</span><br><br>
                    <span class="keyword">if</span> <span class="variable">tuoi</span> <span
                        class="operator">&gt;=</span> <span class="number">18</span><span class="operator">:</span><br>
                    <span class="function"> print</span>(<span class="string">"B·∫°n ƒë√£ ƒë·ªß tu·ªïi v·ªã th√†nh
                        ni√™n."</span>)<br><br>
                    <span class="comment"># Output: B·∫°n ƒë√£ ƒë·ªß tu·ªïi v·ªã th√†nh ni√™n.</span>
                </div>
            </div>
        </div>

        <div id="slide-4" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-green-600 mb-4">3. L·ªánh <code>else</code> (N·∫øu kh√¥ng th√¨)</h3>
                <p class="mb-4 text-lg">L·ªánh <code>else</code> th∆∞·ªùng ƒëi k√®m v·ªõi l·ªánh <code>if</code>. Kh·ªëi l·ªánh b√™n
                    trong <code>else</code> s·∫Ω ƒë∆∞·ª£c th·ª±c thi n·∫øu ƒëi·ªÅu ki·ªán c·ªßa <code>if</code> l√† sai
                    (<code>False</code>).</p>
                <p class="mb-2 font-medium">C√∫ ph√°p:</p>
                <div class="code-block">
                    <span class="keyword">if</span> <span class="variable">dieu_kien</span><span
                        class="operator">:</span><br>
                    <span class="comment"> # Kh·ªëi l·ªánh th·ª±c thi n·∫øu dieu_kien l√† True</span><br>
                    <span class="variable"> hanh_dong_A</span><br>
                    <span class="keyword">else</span><span class="operator">:</span><br>
                    <span class="comment"> # Kh·ªëi l·ªánh th·ª±c thi n·∫øu dieu_kien l√† False</span><br>
                    <span class="variable"> hanh_dong_B</span>
                </div>
                <p class="mb-2 font-medium mt-4">V√≠ d·ª•:</p>
                <div class="code-block">
                    <span class="variable">nhiet_do</span> <span class="operator">=</span> <span
                        class="number">15</span><br><br>
                    <span class="keyword">if</span> <span class="variable">nhiet_do</span> <span
                        class="operator">&gt;</span> <span class="number">25</span><span class="operator">:</span><br>
                    <span class="function"> print</span>(<span class="string">"Tr·ªùi n√≥ng, n√™n m·∫∑c ƒë·ªì m√°t
                        m·∫ª."</span>)<br>
                    <span class="keyword">else</span><span class="operator">:</span><br>
                    <span class="function"> print</span>(<span class="string">"Tr·ªùi m√°t ho·∫∑c l·∫°nh, nh·ªõ mang √°o
                        kho√°c."</span>)<br><br>
                    <span class="comment"># Output: Tr·ªùi m√°t ho·∫∑c l·∫°nh, nh·ªõ mang √°o kho√°c.</span>
                </div>
            </div>
        </div>

        <div id="slide-5" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-green-600 mb-4">4. L·ªánh <code>elif</code> (N·∫øu kh√¥ng th√¨ n·∫øu)
                </h3>
                <p class="mb-4 text-lg">L·ªánh <code>elif</code> (vi·∫øt t·∫Øt c·ªßa "else if") cho ph√©p b·∫°n ki·ªÉm tra nhi·ªÅu ƒëi·ªÅu
                    ki·ªán m·ªôt c√°ch tu·∫ßn t·ª±. N√≥ ƒë∆∞·ª£c s·ª≠ d·ª•ng khi c√≥ nhi·ªÅu h∆°n hai kh·∫£ nƒÉng.</p>
                <p class="mb-2 font-medium">C√∫ ph√°p:</p>
                <div class="code-block">
                    <span class="keyword">if</span> <span class="variable">dieu_kien_1</span><span
                        class="operator">:</span><br>
                    <span class="comment"> # Kh·ªëi l·ªánh th·ª±c thi n·∫øu dieu_kien_1 l√† True</span><br>
                    <span class="variable"> hanh_dong_1</span><br>
                    <span class="keyword">elif</span> <span class="variable">dieu_kien_2</span><span
                        class="operator">:</span><br>
                    <span class="comment"> # Kh·ªëi l·ªánh th·ª±c thi n·∫øu dieu_kien_1 l√† False v√† dieu_kien_2 l√†
                        True</span><br>
                    <span class="variable"> hanh_dong_2</span><br>
                    <span class="keyword">elif</span> <span class="variable">dieu_kien_3</span><span
                        class="operator">:</span><br>
                    <span class="comment"> # Kh·ªëi l·ªánh th·ª±c thi n·∫øu c√°c ƒëi·ªÅu ki·ªán tr∆∞·ªõc False v√† dieu_kien_3 l√†
                        True</span><br>
                    <span class="variable"> hanh_dong_3</span><br>
                    <span class="comment"># ... c√≥ th·ªÉ c√≥ nhi·ªÅu elif kh√°c</span><br>
                    <span class="keyword">else</span><span class="operator">:</span><br>
                    <span class="comment"> # Kh·ªëi l·ªánh th·ª±c thi n·∫øu t·∫•t c·∫£ c√°c ƒëi·ªÅu ki·ªán tr√™n ƒë·ªÅu False</span><br>
                    <span class="variable"> hanh_dong_mac_dinh</span>
                </div>
                <p class="mt-4 text-lg"><strong>L∆∞u √Ω:</strong> Python s·∫Ω ki·ªÉm tra c√°c ƒëi·ªÅu ki·ªán t·ª´ tr√™n xu·ªëng d∆∞·ªõi.
                    Ngay khi m·ªôt ƒëi·ªÅu ki·ªán <code>if</code> ho·∫∑c <code>elif</code> l√† ƒë√∫ng, kh·ªëi l·ªánh t∆∞∆°ng ·ª©ng s·∫Ω ƒë∆∞·ª£c
                    th·ª±c thi v√† c√°c ƒëi·ªÅu ki·ªán <code>elif</code> ho·∫∑c <code>else</code> c√≤n l·∫°i s·∫Ω b·ªã b·ªè qua.</p>
            </div>
        </div>

        <div id="slide-6" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-green-600 mb-4">4.1. V√≠ d·ª• <code>if-elif-else</code>: X·∫øp lo·∫°i
                    h·ªçc l·ª±c</h3>
                <p class="mb-4 text-lg">H√£y xem m·ªôt v√≠ d·ª• v·ªÅ vi·ªác s·ª≠ d·ª•ng <code>if-elif-else</code> ƒë·ªÉ x·∫øp lo·∫°i h·ªçc l·ª±c
                    d·ª±a tr√™n ƒëi·ªÉm s·ªë.</p>
                <div class="code-block">
                    <span class="variable">diem_trung_binh</span> <span class="operator">=</span> <span
                        class="function">float</span>(<span class="function">input</span>(<span class="string">"Nh·∫≠p
                        ƒëi·ªÉm trung b√¨nh c·ªßa b·∫°n: "</span>))<br><br>

                    <span class="keyword">if</span> <span class="variable">diem_trung_binh</span> <span
                        class="operator">&gt;=</span> <span class="number">8.0</span><span class="operator">:</span><br>
                    <span class="function"> print</span>(<span class="string">"X·∫øp lo·∫°i: Gi·ªèi"</span>)<br>
                    <span class="keyword">elif</span> <span class="variable">diem_trung_binh</span> <span
                        class="operator">&gt;=</span> <span class="number">6.5</span><span class="operator">:</span><br>
                    <span class="function"> print</span>(<span class="string">"X·∫øp lo·∫°i: Kh√°"</span>)<br>
                    <span class="keyword">elif</span> <span class="variable">diem_trung_binh</span> <span
                        class="operator">&gt;=</span> <span class="number">5.0</span><span class="operator">:</span><br>
                    <span class="function"> print</span>(<span class="string">"X·∫øp lo·∫°i: Trung b√¨nh"</span>)<br>
                    <span class="keyword">else</span><span class="operator">:</span><br>
                    <span class="function"> print</span>(<span class="string">"X·∫øp lo·∫°i: Y·∫øu"</span>)<br><br>

                    <span class="comment"># Th·ª≠ nh·∫≠p c√°c gi√° tr·ªã kh√°c nhau cho ƒëi·ªÉm trung b√¨nh ƒë·ªÉ xem k·∫øt
                        qu·∫£.</span><br>
                    <span class="comment"># V√≠ d·ª•: 9.0 -> Gi·ªèi</span><br>
                    <span class="comment"># V√≠ d·ª•: 7.2 -> Kh√°</span><br>
                    <span class="comment"># V√≠ d·ª•: 5.5 -> Trung b√¨nh</span><br>
                    <span class="comment"># V√≠ d·ª•: 4.0 -> Y·∫øu</span>
                </div>
            </div>
        </div>

        <div id="slide-7" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-green-600 mb-4">5. C√¢u L·ªánh ƒêi·ªÅu Ki·ªán L·ªìng Nhau (Nested
                    Conditionals)</h3>
                <p class="mb-4 text-lg">B·∫°n c√≥ th·ªÉ ƒë·∫∑t m·ªôt c√¢u l·ªánh <code>if-elif-else</code> b√™n trong m·ªôt c√¢u l·ªánh
                    <code>if-elif-else</code> kh√°c. ƒêi·ªÅu n√†y ƒë∆∞·ª£c g·ªçi l√† c√¢u l·ªánh ƒëi·ªÅu ki·ªán l·ªìng nhau.
                </p>
                <p class="mb-2 font-medium">C√∫ ph√°p (v√≠ d·ª•):</p>
                <div class="code-block">
                    <span class="keyword">if</span> <span class="variable">dieu_kien_ngoai</span><span
                        class="operator">:</span><br>
                    <span class="comment"> # Kh·ªëi l·ªánh c·ªßa if ngo√†i</span><br>
                    <span class="keyword"> if</span> <span class="variable">dieu_kien_trong</span><span
                        class="operator">:</span><br>
                    <span class="comment"> # Kh·ªëi l·ªánh c·ªßa if trong (n·∫øu c·∫£ hai ƒëi·ªÅu ki·ªán ƒë·ªÅu True)</span><br>
                    <span class="variable"> hanh_dong_A</span><br>
                    <span class="keyword"> else</span><span class="operator">:</span><br>
                    <span class="comment"> # Kh·ªëi l·ªánh c·ªßa else trong (n·∫øu dieu_kien_ngoai True, dieu_kien_trong
                        False)</span><br>
                    <span class="variable"> hanh_dong_B</span><br>
                    <span class="keyword">else</span><span class="operator">:</span><br>
                    <span class="comment"> # Kh·ªëi l·ªánh c·ªßa else ngo√†i (n·∫øu dieu_kien_ngoai False)</span><br>
                    <span class="variable"> hanh_dong_C</span>
                </div>
                <p class="mt-4 mb-2 font-medium">V√≠ d·ª•: Ki·ªÉm tra s·ªë d∆∞∆°ng ch·∫µn</p>
                <div class="code-block">
                    <span class="variable">so</span> <span class="operator">=</span> <span
                        class="function">int</span>(<span class="function">input</span>(<span class="string">"Nh·∫≠p m·ªôt
                        s·ªë nguy√™n: "</span>))<br><br>
                    <span class="keyword">if</span> <span class="variable">so</span> <span class="operator">&gt;</span>
                    <span class="number">0</span><span class="operator">:</span><br>
                    <span class="function"> print</span>(<span class="string">"S·ªë b·∫°n nh·∫≠p l√† s·ªë d∆∞∆°ng."</span>)<br>
                    <span class="keyword"> if</span> <span class="variable">so</span> <span class="operator">%</span>
                    <span class="number">2</span> <span class="operator">==</span> <span class="number">0</span><span
                        class="operator">:</span><br>
                    <span class="function"> print</span>(<span class="string">"V√† ƒë√≥ l√† m·ªôt s·ªë ch·∫µn."</span>)<br>
                    <span class="keyword"> else</span><span class="operator">:</span><br>
                    <span class="function"> print</span>(<span class="string">"Nh∆∞ng ƒë√≥ l√† m·ªôt s·ªë l·∫ª."</span>)<br>
                    <span class="keyword">elif</span> <span class="variable">so</span> <span class="operator">==</span>
                    <span class="number">0</span><span class="operator">:</span><br>
                    <span class="function"> print</span>(<span class="string">"S·ªë b·∫°n nh·∫≠p l√† s·ªë kh√¥ng."</span>)<br>
                    <span class="keyword">else</span><span class="operator">:</span><br>
                    <span class="function"> print</span>(<span class="string">"S·ªë b·∫°n nh·∫≠p l√† s·ªë √¢m."</span>)<br>
                </div>
                <p class="mt-2 text-sm text-gray-600">L∆∞u √Ω: N√™n c·∫©n th·∫≠n khi d√πng nhi·ªÅu l·ªõp l·ªìng nhau v√¨ c√≥ th·ªÉ l√†m
                    code kh√≥ ƒë·ªçc v√† kh√≥ b·∫£o tr√¨.</p>
            </div>
        </div>

        <div id="slide-8" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-green-600 mb-4">6. To√°n T·ª≠ Logic (`and`, `or`, `not`)</h3>
                <p class="mb-4 text-lg">To√°n t·ª≠ logic cho ph√©p b·∫°n k·∫øt h·ª£p nhi·ªÅu ƒëi·ªÅu ki·ªán l·∫°i v·ªõi nhau.</p>
                <ul class="list-disc list-inside mb-4 pl-4 text-gray-700 space-y-2">
                    <li><strong><code>and</code> (V√†):</strong> Tr·∫£ v·ªÅ <code>True</code> n·∫øu T·∫§T C·∫¢ c√°c ƒëi·ªÅu ki·ªán ƒë·ªÅu
                        <code>True</code>.
                    </li>
                    <li><strong><code>or</code> (Ho·∫∑c):</strong> Tr·∫£ v·ªÅ <code>True</code> n·∫øu √çT NH·∫§T M·ªòT ƒëi·ªÅu ki·ªán l√†
                        <code>True</code>.
                    </li>
                    <li><strong><code>not</code> (Ph·ªß ƒë·ªãnh):</strong> ƒê·∫£o ng∆∞·ª£c gi√° tr·ªã logic c·ªßa ƒëi·ªÅu ki·ªán
                        (<code>True</code> th√†nh <code>False</code>, <code>False</code> th√†nh <code>True</code>).</li>
                </ul>
                <p class="mb-2 font-medium">V√≠ d·ª• v·ªõi <code>and</code>:</p>
                <div class="code-block">
                    <span class="variable">tuoi</span> <span class="operator">=</span> <span
                        class="number">25</span><br>
                    <span class="variable">co_bang_lai</span> <span class="operator">=</span> <span
                        class="boolean">True</span><br><br>
                    <span class="keyword">if</span> <span class="variable">tuoi</span> <span
                        class="operator">&gt;=</span> <span class="number">18</span> <span class="keyword">and</span>
                    <span class="variable">co_bang_lai</span> <span class="operator">==</span> <span
                        class="boolean">True</span><span class="operator">:</span><br>
                    <span class="function"> print</span>(<span class="string">"B·∫°n ƒë·ªß ƒëi·ªÅu ki·ªán l√°i xe."</span>)<br>
                    <span class="keyword">else</span><span class="operator">:</span><br>
                    <span class="function"> print</span>(<span class="string">"B·∫°n kh√¥ng ƒë·ªß ƒëi·ªÅu ki·ªán l√°i
                        xe."</span>)<br>
                    <span class="comment"># Output: B·∫°n ƒë·ªß ƒëi·ªÅu ki·ªán l√°i xe.</span>
                </div>
                <p class="mt-4 mb-2 font-medium">V√≠ d·ª• v·ªõi <code>or</code>:</p>
                <div class="code-block">
                    <span class="variable">ngay_cuoi_tuan</span> <span class="operator">=</span> <span
                        class="boolean">True</span><br>
                    <span class="variable">ngay_le</span> <span class="operator">=</span> <span
                        class="boolean">False</span><br><br>
                    <span class="keyword">if</span> <span class="variable">ngay_cuoi_tuan</span> <span
                        class="keyword">or</span> <span class="variable">ngay_le</span><span
                        class="operator">:</span><br>
                    <span class="function"> print</span>(<span class="string">"H√¥m nay l√† ng√†y ngh·ªâ!"</span>)<br>
                    <span class="keyword">else</span><span class="operator">:</span><br>
                    <span class="function"> print</span>(<span class="string">"H√¥m nay ph·∫£i ƒëi l√†m/h·ªçc."</span>)<br>
                    <span class="comment"># Output: H√¥m nay l√† ng√†y ngh·ªâ!</span>
                </div>
                <p class="mt-4 mb-2 font-medium">V√≠ d·ª• v·ªõi <code>not</code>:</p>
                <div class="code-block">
                    <span class="variable">troi_mua</span> <span class="operator">=</span> <span
                        class="boolean">False</span><br><br>
                    <span class="keyword">if</span> <span class="keyword">not</span> <span
                        class="variable">troi_mua</span><span class="operator">:</span><br>
                    <span class="function"> print</span>(<span class="string">"Tr·ªùi kh√¥ng m∆∞a, c√≥ th·ªÉ ra ngo√†i
                        ch∆°i."</span>)<br>
                    <span class="keyword">else</span><span class="operator">:</span><br>
                    <span class="function"> print</span>(<span class="string">"Tr·ªùi m∆∞a r·ªìi, ·ªü nh√† th√¥i."</span>)<br>
                    <span class="comment"># Output: Tr·ªùi kh√¥ng m∆∞a, c√≥ th·ªÉ ra ngo√†i ch∆°i.</span>
                </div>
            </div>
        </div>

        <div id="slide-9" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-green-600 mb-4">7. C√¢u L·ªánh ƒêi·ªÅu Ki·ªán K·∫øt H·ª£p V·ªõi V√≤ng L·∫∑p</h3>
                <p class="mb-4 text-lg">C√¢u l·ªánh ƒëi·ªÅu ki·ªán th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng b√™n trong c√°c v√≤ng l·∫∑p (nh∆∞
                    <code>for</code> ho·∫∑c <code>while</code>) ƒë·ªÉ x·ª≠ l√Ω t·ª´ng ph·∫ßn t·ª≠ ho·∫∑c th·ª±c hi·ªán h√†nh ƒë·ªông d·ª±a tr√™n
                    ƒëi·ªÅu ki·ªán ·ªü m·ªói l·∫ßn l·∫∑p.
                </p>
                <p class="mb-4 text-lg"><em>(Chi ti·∫øt v·ªÅ v√≤ng l·∫∑p s·∫Ω ƒë∆∞·ª£c h·ªçc k·ªπ h∆°n ·ªü c√°c bu·ªïi sau. D∆∞·ªõi ƒë√¢y l√† m·ªôt v√≠
                        d·ª• ƒë∆°n gi·∫£n.)</em></p>
                <p class="mb-2 font-medium">V√≠ d·ª•: In ra c√°c s·ªë ch·∫µn trong m·ªôt danh s√°ch</p>
                <div class="code-block">
                    <span class="variable">danh_sach_so</span> <span class="operator">=</span> [<span
                        class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span
                        class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span
                        class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span
                        class="number">10</span>]<br><br>
                    <span class="function">print</span>(<span class="string">"C√°c s·ªë ch·∫µn trong danh s√°ch
                        l√†:"</span>)<br>
                    <span class="keyword">for</span> <span class="variable">so</span> <span class="keyword">in</span>
                    <span class="variable">danh_sach_so</span><span class="operator">:</span><br>
                    <span class="comment"> # Ki·ªÉm tra n·∫øu 'so' chia h·∫øt cho 2</span><br>
                    <span class="keyword"> if</span> <span class="variable">so</span> <span class="operator">%</span>
                    <span class="number">2</span> <span class="operator">==</span> <span class="number">0</span><span
                        class="operator">:</span><br>
                    <span class="function"> print</span>(<span class="variable">so</span>)<br><br>
                    <span class="comment"># Output:</span><br>
                    <span class="comment"># C√°c s·ªë ch·∫µn trong danh s√°ch l√†:</span><br>
                    <span class="comment"># 2</span><br>
                    <span class="comment"># 4</span><br>
                    <span class="comment"># 6</span><br>
                    <span class="comment"># 8</span><br>
                    <span class="comment"># 10</span>
                </div>
                <p class="mt-4 text-lg">Trong v√≠ d·ª• n√†y, v√≤ng l·∫∑p <code>for</code> duy·ªát qua t·ª´ng s·ªë trong
                    <code>danh_sach_so</code>. V·ªõi m·ªói s·ªë, l·ªánh <code>if</code> ki·ªÉm tra xem s·ªë ƒë√≥ c√≥ ph·∫£i l√† s·ªë ch·∫µn
                    kh√¥ng. N·∫øu ƒë√∫ng, s·ªë ƒë√≥ s·∫Ω ƒë∆∞·ª£c in ra.
                </p>
            </div>
        </div>

        <div id="slide-10" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-lime-600 mb-4">8. B√†i T·∫≠p C∆° B·∫£n</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i t·∫≠p 1: Ki·ªÉm tra s·ªë d∆∞∆°ng, √¢m, hay zero</h4>
                <p class="mb-2 text-lg"><strong>Y√™u c·∫ßu:</strong> Vi·∫øt ch∆∞∆°ng tr√¨nh y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p v√†o m·ªôt s·ªë
                    nguy√™n. Sau ƒë√≥, ki·ªÉm tra v√† in ra m√†n h√¨nh xem s·ªë ƒë√≥ l√† s·ªë d∆∞∆°ng, s·ªë √¢m, hay l√† s·ªë kh√¥ng.</p>
                <p class="mb-2 font-medium">V√≠ d·ª• output mong mu·ªën:</p>
                <div class="code-block">
                    <span class="comment">Nh·∫≠p m·ªôt s·ªë nguy√™n: 5</span><br>
                    <span class="comment">Output: 5 l√† s·ªë d∆∞∆°ng.</span><br><br>
                    <span class="comment">Nh·∫≠p m·ªôt s·ªë nguy√™n: -3</span><br>
                    <span class="comment">Output: -3 l√† s·ªë √¢m.</span><br><br>
                    <span class="comment">Nh·∫≠p m·ªôt s·ªë nguy√™n: 0</span><br>
                    <span class="comment">Output: S·ªë b·∫°n nh·∫≠p l√† 0.</span>
                </div>
                <p class="mt-4 text-sm text-gray-500">G·ª£i √Ω: S·ª≠ d·ª•ng <code>if-elif-else</code>.</p>
            </div>
        </div>

        <div id="slide-11" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-lime-600 mb-4">8. B√†i T·∫≠p C∆° B·∫£n (Ti·∫øp theo)</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i t·∫≠p 2: Ki·ªÉm tra tu·ªïi b·∫ßu c·ª≠</h4>
                <p class="mb-2 text-lg"><strong>Y√™u c·∫ßu:</strong> Vi·∫øt ch∆∞∆°ng tr√¨nh y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p v√†o tu·ªïi c·ªßa
                    h·ªç. Sau ƒë√≥, ki·ªÉm tra xem h·ªç c√≥ ƒë·ªß tu·ªïi ƒë·ªÉ ƒëi b·∫ßu c·ª≠ hay kh√¥ng (gi·∫£ s·ª≠ tu·ªïi b·∫ßu c·ª≠ l√† 18).</p>
                <p class="mb-2 font-medium">V√≠ d·ª• output mong mu·ªën:</p>
                <div class="code-block">
                    <span class="comment">Nh·∫≠p tu·ªïi c·ªßa b·∫°n: 20</span><br>
                    <span class="comment">Output: B·∫°n ƒë·ªß tu·ªïi ƒë·ªÉ ƒëi b·∫ßu c·ª≠.</span><br><br>
                    <span class="comment">Nh·∫≠p tu·ªïi c·ªßa b·∫°n: 16</span><br>
                    <span class="comment">Output: B·∫°n ch∆∞a ƒë·ªß tu·ªïi ƒë·ªÉ ƒëi b·∫ßu c·ª≠.</span>
                </div>
                <p class="mt-4 text-sm text-gray-500">G·ª£i √Ω: S·ª≠ d·ª•ng <code>if-else</code>.</p>
            </div>
        </div>

        <div id="slide-12" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-emerald-600 mb-4">9. B√†i T·∫≠p N√¢ng Cao T∆∞ Duy</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i t·∫≠p 1: T√≠nh ch·ªâ s·ªë BMI v√† ƒë∆∞a ra nh·∫≠n x√©t</h4>
                <p class="mb-2 text-lg"><strong>Y√™u c·∫ßu:</strong> Vi·∫øt ch∆∞∆°ng tr√¨nh y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p c√¢n n·∫∑ng
                    (kg) v√† chi·ªÅu cao (m√©t). Sau ƒë√≥:</p>
                <ol class="list-decimal list-inside mb-2 pl-4 text-gray-700">
                    <li>T√≠nh ch·ªâ s·ªë BMI theo c√¥ng th·ª©c: BMI = c√¢n n·∫∑ng / (chi·ªÅu cao * chi·ªÅu cao).</li>
                    <li>D·ª±a v√†o ch·ªâ s·ªë BMI, ƒë∆∞a ra nh·∫≠n x√©t:
                        <ul class="list-disc list-inside ml-4">
                            <li>BMI < 18.5: G·∫ßy</li>
                            <li>18.5 <= BMI < 24.9: B√¨nh th∆∞·ªùng</li>
                            <li>25 <= BMI < 29.9: H∆°i b√©o</li>
                            <li>BMI >= 30: B√©o ph√¨</li>
                        </ul>
                    </li>
                </ol>
                <p class="mb-2 font-medium">V√≠ d·ª• output mong mu·ªën:</p>
                <div class="code-block">
                    <span class="comment">Nh·∫≠p c√¢n n·∫∑ng c·ªßa b·∫°n (kg): 60</span><br>
                    <span class="comment">Nh·∫≠p chi·ªÅu cao c·ªßa b·∫°n (m): 1.7</span><br>
                    <span class="comment">Output: Ch·ªâ s·ªë BMI c·ªßa b·∫°n l√† 20.76. B·∫°n B√¨nh th∆∞·ªùng.</span>
                </div>
            </div>
        </div>

        <div id="slide-13" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-emerald-600 mb-4">9. B√†i T·∫≠p N√¢ng Cao T∆∞ Duy (Ti·∫øp theo)</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i t·∫≠p 2: Ki·ªÉm tra nƒÉm nhu·∫≠n</h4>
                <p class="mb-2 text-lg"><strong>Y√™u c·∫ßu:</strong> Vi·∫øt ch∆∞∆°ng tr√¨nh y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p v√†o m·ªôt nƒÉm.
                    Ki·ªÉm tra xem nƒÉm ƒë√≥ c√≥ ph·∫£i l√† nƒÉm nhu·∫≠n hay kh√¥ng.</p>
                <p class="mb-2 text-lg"><strong>Quy t·∫Øc nƒÉm nhu·∫≠n:</strong></p>
                <ul class="list-disc list-inside mb-4 pl-4 text-gray-700">
                    <li>Chia h·∫øt cho 4 NH∆ØNG kh√¥ng chia h·∫øt cho 100.</li>
                    <li>HO·∫∂C chia h·∫øt cho 400.</li>
                </ul>
                <p class="mb-2 font-medium">V√≠ d·ª• output mong mu·ªën:</p>
                <div class="code-block">
                    <span class="comment">Nh·∫≠p m·ªôt nƒÉm: 2000</span><br>
                    <span class="comment">Output: NƒÉm 2000 l√† nƒÉm nhu·∫≠n.</span><br><br>
                    <span class="comment">Nh·∫≠p m·ªôt nƒÉm: 1900</span><br>
                    <span class="comment">Output: NƒÉm 1900 kh√¥ng ph·∫£i l√† nƒÉm nhu·∫≠n.</span><br><br>
                    <span class="comment">Nh·∫≠p m·ªôt nƒÉm: 2024</span><br>
                    <span class="comment">Output: NƒÉm 2024 l√† nƒÉm nhu·∫≠n.</span>
                </div>
                <p class="mt-4 text-sm text-gray-500">G·ª£i √Ω: S·ª≠ d·ª•ng to√°n t·ª≠ logic <code>and</code>, <code>or</code> v√†
                    to√°n t·ª≠ chia l·∫•y d∆∞ <code>%</code>.</p>
            </div>
        </div>

        <div id="slide-14" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-green-600 mb-4">10. T√≥m T·∫Øt Bu·ªïi H·ªçc</h3>
                <p class="mb-4 text-lg">Trong bu·ªïi h·ªçc h√¥m nay, ch√∫ng ta ƒë√£ t√¨m hi·ªÉu v·ªÅ c√°c c√¢u l·ªánh ƒëi·ªÅu ki·ªán trong
                    Python:</p>
                <ul class="list-disc list-inside mb-4 pl-4 text-gray-700 space-y-2">
                    <li><strong>C√¢u l·ªánh <code>if</code>:</strong> Th·ª±c thi m√£ n·∫øu ƒëi·ªÅu ki·ªán ƒë√∫ng.</li>
                    <li><strong>C√¢u l·ªánh <code>else</code>:</strong> Th·ª±c thi m√£ n·∫øu ƒëi·ªÅu ki·ªán c·ªßa <code>if</code> sai.
                    </li>
                    <li><strong>C√¢u l·ªánh <code>elif</code>:</strong> Ki·ªÉm tra nhi·ªÅu ƒëi·ªÅu ki·ªán tu·∫ßn t·ª±.</li>
                    <li><strong>C√¢u l·ªánh ƒëi·ªÅu ki·ªán l·ªìng nhau:</strong> ƒê·∫∑t <code>if-else</code> b√™n trong
                        <code>if-else</code> kh√°c.
                    </li>
                    <li><strong>To√°n t·ª≠ logic (<code>and</code>, <code>or</code>, <code>not</code>):</strong> K·∫øt h·ª£p
                        nhi·ªÅu ƒëi·ªÅu ki·ªán.</li>
                    <li><strong>K·∫øt h·ª£p ƒëi·ªÅu ki·ªán v·ªõi v√≤ng l·∫∑p (s∆° l∆∞·ª£c):</strong> √Åp d·ª•ng ƒëi·ªÅu ki·ªán cho t·ª´ng ph·∫ßn t·ª≠.
                    </li>
                </ul>
                <p class="text-lg mb-6">N·∫Øm v·ªØng c√¢u l·ªánh ƒëi·ªÅu ki·ªán l√† m·ªôt b∆∞·ªõc quan tr·ªçng ƒë·ªÉ x√¢y d·ª±ng c√°c ch∆∞∆°ng tr√¨nh
                    Python th√¥ng minh v√† linh ho·∫°t h∆°n!</p>
                <div class="flex justify-center mt-8">
                    <img src="https://placehold.co/350x200/5EEAD4/FFFFFF?text=Key+Takeaways" alt="[H√¨nh ·∫£nh ƒêi·ªÉm Ch√≠nh]"
                        class="shadow-md">
                </div>
            </div>
        </div>

        <div id="slide-15" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-green-700 mb-6 text-center">11. H·ªèi & ƒê√°p</h3>
                <div class="flex justify-center mb-8">
                    <img src="https://placehold.co/300x200/10B981/FFFFFF?text=Q%26A" alt="[H√¨nh ·∫£nh H·ªèi v√† ƒê√°p]"
                        class="shadow-md">
                </div>
                <h4 class="text-2xl font-semibold text-center text-gray-700">C√°c b·∫°n c√≥ c√¢u h·ªèi n√†o kh√¥ng?</h4>
                <p class="text-center text-gray-600 mt-4">ƒê·ª´ng ng·∫ßn ng·∫°i ƒë·∫∑t c√¢u h·ªèi ƒë·ªÉ hi·ªÉu r√µ h∆°n v·ªÅ b√†i h·ªçc nh√©!</p>
            </div>
        </div>

    </div>

    <script>
        const slides = Array.from(document.querySelectorAll('.slide'));
        const prevButton = document.getElementById('prevSlide');
        const nextButton = document.getElementById('nextSlide');
        const currentSlideNumDisplay = document.getElementById('currentSlideNum');
        const totalSlidesNumDisplay = document.getElementById('totalSlidesNum');
        const navbar = document.getElementById('navbar');

        let currentSlide = 0;
        totalSlidesNumDisplay.textContent = slides.length;

        function showSlide(index) {
            slides.forEach((slide, i) => {
                if (i === index) {
                    // Make sure display is set to flex before transition starts
                    slide.style.display = 'flex';
                    setTimeout(() => { // Timeout to allow display property to apply before transition
                        slide.classList.add('active');
                    }, 10); // A small delay is usually enough
                } else {
                    slide.classList.remove('active');
                    // Set display to none after transition for non-active slides
                    setTimeout(() => {
                        if (!slide.classList.contains('active')) { // Double check it's not the active slide
                            slide.style.display = 'none';
                        }
                    }, 400); // Match transition duration
                }
            });
            currentSlideNumDisplay.textContent = index + 1;
            updateNavButtons();

            // Scroll to the top of the content area below the navbar
            if (navbar) {
                window.scrollTo({ top: navbar.offsetHeight, behavior: 'smooth' });
            } else {
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }
        }

        function updateNavButtons() {
            prevButton.disabled = currentSlide === 0;
            nextButton.disabled = currentSlide === slides.length - 1;
        }

        prevButton.addEventListener('click', () => {
            if (currentSlide > 0) {
                slides[currentSlide].classList.remove('active');
                setTimeout(() => {
                    if (!slides[currentSlide].classList.contains('active')) {
                        slides[currentSlide].style.display = 'none';
                    }
                }, 400);
                currentSlide--;
                showSlide(currentSlide);
            }
        });

        nextButton.addEventListener('click', () => {
            if (currentSlide < slides.length - 1) {
                slides[currentSlide].classList.remove('active');
                setTimeout(() => {
                    if (!slides[currentSlide].classList.contains('active')) {
                        slides[currentSlide].style.display = 'none';
                    }
                }, 400);
                currentSlide++;
                showSlide(currentSlide);
            }
        });

        // Initialize first slide
        if (slides.length > 0) {
            showSlide(currentSlide);
        }
    </script>

</body>

</html>

/* ===== Python Basic/lesson3.html ===== */
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bu·ªïi 3: V√≤ng L·∫∑p Chuy√™n S√¢u v√† Danh S√°ch (List)</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            scroll-behavior: smooth;
            background-color: #f3f4f6;
            /* Light gray background for the body */
        }

        #navbar {
            position: sticky;
            top: 0;
            z-index: 50;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .slide-container {
            padding-top: 1rem;
        }

        .slide {
            background-color: white;
            padding: 2rem;
            /* p-8 */
            border-radius: 0.5rem;
            /* rounded-lg */
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            /* shadow-lg */
            margin-bottom: 2rem;
            display: none;
            /* Hidden by default */
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
            min-height: calc(100vh - 120px);
            /* Ensure slide takes up significant viewport height */
            display: flex;
            flex-direction: column;
        }

        .slide.active {
            display: flex;
            opacity: 1;
            transform: translateY(0);
        }

        .slide-content-wrapper {
            flex-grow: 1;
        }

        .code-block-container {
            position: relative;
            background-color: #1e293b;
            /* Darker background for code container */
            border-radius: 0.5rem;
            /* rounded-lg */
            margin-top: 1rem;
            margin-bottom: 1rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .code-block-header {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            padding: 0.5rem 0.75rem;
            background-color: #334155;
            /* Header background */
            border-top-left-radius: 0.5rem;
            border-top-right-radius: 0.5rem;
        }

        .copy-button {
            background-color: #4a5568;
            /* Button background */
            color: #e2e8f0;
            /* Light text */
            border: none;
            padding: 0.375rem 0.75rem;
            /* py-1.5 px-3 */
            border-radius: 0.375rem;
            /* rounded-md */
            cursor: pointer;
            font-size: 0.875rem;
            /* text-sm */
            transition: background-color 0.2s;
        }

        .copy-button:hover {
            background-color: #718096;
            /* Lighter on hover */
        }

        .copy-button .fa-copy {
            margin-right: 0.375rem;
        }

        .copy-button .fa-check {
            margin-right: 0.375rem;
            color: #48bb78;
            /* Green check */
        }


        .code-block {
            background-color: #1e293b;
            /* Match container or slightly different if needed */
            color: #e2e8f0;
            /* Light text for code */
            padding: 1rem;
            /* p-4 */
            border-bottom-left-radius: 0.5rem;
            border-bottom-right-radius: 0.5rem;
            font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
            /* More modern mono font stack */
            white-space: pre-wrap;
            word-wrap: break-word;
            font-size: 0.875em;
            /* Slightly smaller for more code to fit */
            line-height: 1.6;
            /* Improved line spacing */
            overflow-x: auto;
            /* Allow horizontal scroll for long lines */
        }

        /* Remove default browser focus outline for button, if desired */
        .copy-button:focus {
            outline: none;
            box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.5);
            /* Example focus ring */
        }


        .code-block .comment {
            color: #6ee7b7;
        }

        /* Emerald 300 for comments */
        .code-block .keyword {
            color: #93c5fd;
        }

        /* Blue 300 for keywords */
        .code-block .string {
            color: #fde047;
        }

        /* Yellow 300 for strings */
        .code-block .number {
            color: #fdbb74;
        }

        /* Orange 300 for numbers */
        .code-block .function {
            color: #d8b4fe;
        }

        /* Purple 300 for functions */
        .code-block .operator {
            color: #fda4af;
        }

        /* Rose 300 for operators */
        .code-block .boolean {
            color: #fdbb74;
        }

        /* Orange 300 for True/False */
        .code-block .method {
            color: #67e8f9;
        }

        /* Cyan 300 for methods */


        ::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #4a5568;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb {
            background: #718096;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #a0aec0;
        }

        img {
            max-width: 100%;
            height: auto;
            border-radius: 0.375rem;
            /* rounded-md */
        }

        /* Customizations for Buoi 3 - Purple theme */
        .text-theme-700 {
            color: #6d28d9;
        }

        .text-theme-600 {
            color: #7c3aed;
        }

        .bg-theme-500 {
            background-color: #8b5cf6;
        }

        .hover\:bg-theme-700:hover {
            background-color: #6d28d9;
        }

        .text-purple-500 {
            color: #a855f7;
        }

        .text-purple-600 {
            color: #9333ea;
        }

        .text-fuchsia-600 {
            color: #c026d3;
        }

        .text-fuchsia-700 {
            color: #a21caf;
        }
    </style>
</head>

<body class="text-gray-800">

    <nav id="navbar" class="p-4">
        <div class="container mx-auto flex flex-wrap justify-between items-center">
            <h1 class="text-xl font-bold text-theme-600">Python Bu·ªïi 3: V√≤ng L·∫∑p & List</h1>
            <div class="flex items-center mt-2 sm:mt-0">
                <button id="prevSlide"
                    class="bg-theme-500 hover:bg-theme-700 text-white font-bold py-2 px-4 rounded-lg shadow mr-2 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                        stroke="currentColor" class="w-5 h-5 inline-block mr-1">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
                    </svg>
                    Tr∆∞·ªõc
                </button>
                <button id="nextSlide"
                    class="bg-theme-500 hover:bg-theme-700 text-white font-bold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    Sau
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                        stroke="currentColor" class="w-5 h-5 inline-block ml-1">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
                    </svg>
                </button>
            </div>
            <div class="text-sm text-gray-600 mt-2 sm:mt-0 ml-0 sm:ml-4">
                Slide <span id="currentSlideNum">1</span> / <span id="totalSlidesNum"></span>
            </div>
        </div>
    </nav>

    <div class="container mx-auto p-4 slide-container">
        <div id="slide-1" class="slide">
            <div class="slide-content-wrapper">
                <h2 class="text-4xl font-bold text-center text-theme-700 mb-6">Bu·ªïi 3: V√≤ng L·∫∑p Chuy√™n S√¢u v√† Danh S√°ch
                    (List)</h2>
                <p class="text-2xl text-center text-gray-600 mb-12">L√†m ch·ªß v√≤ng l·∫∑p <code>while</code>, v√≤ng l·∫∑p l·ªìng
                    nhau v√† c·∫•u tr√∫c d·ªØ li·ªáu List m·∫°nh m·∫Ω</p>
                <div class="flex justify-center my-8">
                    <img src="https://placehold.co/400x250/8B5CF6/FFFFFF?text=Loops+%26+Lists"
                        alt="[H√¨nh ·∫£nh V√≤ng l·∫∑p v√† List]" class="shadow-md">
                </div>
                <p class="text-center mt-8 text-lg text-gray-700">S·∫µn s√†ng n√¢ng cao k·ªπ nƒÉng Python c·ªßa b·∫°n!</p>
            </div>
        </div>

        <div id="slide-2" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">1. √în L·∫°i Ki·∫øn Th·ª©c Bu·ªïi 2</h3>
                <p class="mb-4 text-lg">Tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu n·ªôi dung m·ªõi, h√£y c√πng ƒëi·ªÉm l·∫°i nhanh c√°c ki·∫øn th·ª©c quan tr·ªçng
                    t·ª´ Bu·ªïi 2:</p>
                <ul class="list-disc list-inside mb-4 pl-4 text-gray-700 space-y-2">
                    <li><strong>C√¢u l·ªánh ƒëi·ªÅu ki·ªán:</strong>
                        <ul class="list-circle list-inside ml-6">
                            <li><code>if</code>: Th·ª±c thi khi ƒëi·ªÅu ki·ªán ƒë√∫ng.</li>
                            <li><code>else</code>: Th·ª±c thi khi ƒëi·ªÅu ki·ªán <code>if</code> sai.</li>
                            <li><code>elif</code>: Ki·ªÉm tra nhi·ªÅu ƒëi·ªÅu ki·ªán tu·∫ßn t·ª±.</li>
                            <li>ƒêi·ªÅu ki·ªán l·ªìng nhau.</li>
                        </ul>
                    </li>
                    <li><strong>To√°n t·ª≠ logic:</strong> <code>and</code>, <code>or</code>, <code>not</code> ƒë·ªÉ k·∫øt h·ª£p
                        ƒëi·ªÅu ki·ªán.</li>
                    <li><strong>V√≤ng l·∫∑p <code>for</code> (s∆° l∆∞·ª£c):</strong> L·∫∑p qua m·ªôt chu·ªói c√°c ph·∫ßn t·ª≠ (v√≠ d·ª•: danh
                        s√°ch, chu·ªói k√Ω t·ª±).</li>
                </ul>
                <p class="text-lg font-medium">B·∫°n c√≤n nh·ªõ c√°ch s·ª≠ d·ª•ng ch√∫ng ch·ª©? Nh·ªØng ki·∫øn th·ª©c n√†y s·∫Ω l√† n·ªÅn t·∫£ng
                    cho c√°c kh√°i ni·ªám ph·ª©c t·∫°p h∆°n h√¥m nay.</p>
                <div class="flex justify-center mt-6">
                    <img src="https://placehold.co/350x200/A78BFA/FFFFFF?text=Review+Session" alt="[H√¨nh ·∫£nh √în t·∫≠p]"
                        class="shadow-md">
                </div>
            </div>
        </div>

        <div id="slide-3" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">2. V√≤ng L·∫∑p <code>while</code></h3>
                <p class="mb-4 text-lg">V√≤ng l·∫∑p <code>while</code> (trong khi) ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ th·ª±c thi m·ªôt kh·ªëi m√£ l·∫∑p
                    ƒëi l·∫∑p l·∫°i CH·ª™NG N√ÄO m·ªôt ƒëi·ªÅu ki·ªán c·ª• th·ªÉ c√≤n ƒë√∫ng (<code>True</code>).</p>
                <p class="mb-2 font-medium">C√∫ ph√°p:</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre class="code-block"><code><span class="keyword">while</span> <span class="variable">dieu_kien</span><span class="operator">:</span>
    <span class="comment"># Kh·ªëi l·ªánh s·∫Ω ƒë∆∞·ª£c th·ª±c thi l·∫∑p ƒëi l·∫∑p l·∫°i</span>
    <span class="comment"># mi·ªÖn l√† dieu_kien c√≤n True</span>
    <span class="variable">hanh_dong_1</span>
    <span class="variable">hanh_dong_2</span>
    <span class="comment"># QUAN TR·ªåNG: C·∫ßn c√≥ s·ª± thay ƒë·ªïi trong kh·ªëi l·ªánh</span>
    <span class="comment"># ƒë·ªÉ dieu_kien c√≥ th·ªÉ tr·ªü th√†nh False, n·∫øu kh√¥ng</span>
    <span class="comment"># v√≤ng l·∫∑p s·∫Ω ch·∫°y v√¥ h·∫°n!</span></code></pre>
                </div>
                <p class="mt-4 text-lg"><strong>Kh√°c bi·ªát ch√≠nh so v·ªõi <code>for</code>:</strong></p>
                <ul class="list-disc list-inside mb-4 pl-4 text-gray-700">
                    <li><code>for</code>: L·∫∑p qua m·ªôt t·∫≠p h·ª£p c√°c ph·∫ßn t·ª≠ ƒë√£ bi·∫øt tr∆∞·ªõc s·ªë l·∫ßn l·∫∑p (v√≠ d·ª•: l·∫∑p qua c√°c
                        m·ª•c trong danh s√°ch).</li>
                    <li><code>while</code>: L·∫∑p d·ª±a tr√™n m·ªôt ƒëi·ªÅu ki·ªán. S·ªë l·∫ßn l·∫∑p kh√¥ng nh·∫•t thi·∫øt ph·∫£i bi·∫øt tr∆∞·ªõc,
                        mi·ªÖn l√† ƒëi·ªÅu ki·ªán c√≤n ƒë√∫ng.</li>
                </ul>
                <p class="text-orange-600 font-semibold">C·∫£nh b√°o: N·∫øu ƒëi·ªÅu ki·ªán c·ªßa <code>while</code> kh√¥ng bao gi·ªù
                    tr·ªü th√†nh <code>False</code>, b·∫°n s·∫Ω t·∫°o ra m·ªôt v√≤ng l·∫∑p v√¥ h·∫°n, khi·∫øn ch∆∞∆°ng tr√¨nh b·ªã treo.</p>
            </div>
        </div>

        <div id="slide-4" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">2.1. V√≠ d·ª• V√≤ng l·∫∑p <code>while</code></h3>
                <p class="mb-2 font-medium">V√≠ d·ª• 1: ƒê·∫øm t·ª´ 1 ƒë·∫øn 5</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre class="code-block"><code><span class="variable">dem</span> <span class="operator">=</span> <span class="number">1</span>
<span class="keyword">while</span> <span class="variable">dem</span> <span class="operator">&lt;=</span> <span class="number">5</span><span class="operator">:</span>
    <span class="function">print</span>(<span class="string">f"S·ªë ƒë·∫øm hi·ªán t·∫°i: {dem}"</span>)
    <span class="variable">dem</span> <span class="operator">+=</span> <span class="number">1</span> <span class="comment"># Quan tr·ªçng: TƒÉng bi·∫øn ƒë·∫øm ƒë·ªÉ ƒëi·ªÅu ki·ªán cu·ªëi c√πng sai</span>

<span class="comment"># Output:</span>
<span class="comment"># S·ªë ƒë·∫øm hi·ªán t·∫°i: 1</span>
<span class="comment"># S·ªë ƒë·∫øm hi·ªán t·∫°i: 2</span>
<span class="comment"># S·ªë ƒë·∫øm hi·ªán t·∫°i: 3</span>
<span class="comment"># S·ªë ƒë·∫øm hi·ªán t·∫°i: 4</span>
<span class="comment"># S·ªë ƒë·∫øm hi·ªán t·∫°i: 5</span></code></pre>
                </div>

                <p class="mt-6 mb-2 font-medium">V√≠ d·ª• 2: Y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p m·∫≠t kh·∫©u ƒë√∫ng</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre class="code-block"><code><span class="variable">mat_khau_dung</span> <span class="operator">=</span> <span class="string">"python123"</span>
<span class="variable">mat_khau_nhap</span> <span class="operator">=</span> <span class="string">""</span> <span class="comment"># Kh·ªüi t·∫°o r·ªóng</span>

<span class="keyword">while</span> <span class="variable">mat_khau_nhap</span> <span class="operator">!=</span> <span class="variable">mat_khau_dung</span><span class="operator">:</span>
    <span class="variable">mat_khau_nhap</span> <span class="operator">=</span> <span class="function">input</span>(<span class="string">"Nh·∫≠p m·∫≠t kh·∫©u: "</span>)
    <span class="keyword">if</span> <span class="variable">mat_khau_nhap</span> <span class="operator">!=</span> <span class="variable">mat_khau_dung</span><span class="operator">:</span>
        <span class="function">print</span>(<span class="string">"M·∫≠t kh·∫©u sai. Vui l√≤ng th·ª≠ l·∫°i."</span>)

<span class="function">print</span>(<span class="string">"ƒêƒÉng nh·∫≠p th√†nh c√¥ng!"</span>)</code></pre>
                </div>
            </div>
        </div>

        <div id="slide-5" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">2.2. V√≤ng L·∫∑p <code>while</code> v·ªõi M·ªánh ƒê·ªÅ
                    <code>else</code>
                </h3>
                <p class="mb-4 text-lg">T∆∞∆°ng t·ª± nh∆∞ v√≤ng l·∫∑p <code>for</code>, v√≤ng l·∫∑p <code>while</code> c≈©ng c√≥ th·ªÉ
                    c√≥ m·ªôt m·ªánh ƒë·ªÅ <code>else</code> t√πy ch·ªçn.</p>
                <p class="mb-4 text-lg">Kh·ªëi l·ªánh trong <code>else</code> s·∫Ω ƒë∆∞·ª£c th·ª±c thi khi ƒëi·ªÅu ki·ªán c·ªßa v√≤ng l·∫∑p
                    <code>while</code> tr·ªü th√†nh <code>False</code> m·ªôt c√°ch t·ª± nhi√™n (t·ª©c l√† kh√¥ng ph·∫£i do l·ªánh
                    <code>break</code>).
                </p>
                <p class="mb-2 font-medium">C√∫ ph√°p:</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre class="code-block"><code><span class="keyword">while</span> <span class="variable">dieu_kien</span><span class="operator">:</span>
    <span class="comment"># Kh·ªëi l·ªánh l·∫∑p</span>
    <span class="variable">hanh_dong</span>
    <span class="comment"># ...</span>
<span class="keyword">else</span><span class="operator">:</span>
    <span class="comment"># Kh·ªëi l·ªánh n√†y th·ª±c thi khi dieu_kien tr·ªü th√†nh False</span>
    <span class="variable">hanh_dong_sau_khi_lap_xong</span></code></pre>
                </div>
                <p class="mt-4 mb-2 font-medium">V√≠ d·ª•:</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre class="code-block"><code><span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>
<span class="keyword">while</span> <span class="variable">count</span> <span class="operator">&lt;</span> <span class="number">3</span><span class="operator">:</span>
    <span class="function">print</span>(<span class="string">f"ƒêang ƒë·∫øm: {count}"</span>)
    <span class="variable">count</span> <span class="operator">+=</span> <span class="number">1</span>
<span class="keyword">else</span><span class="operator">:</span>
    <span class="function">print</span>(<span class="string">"ƒê√£ ƒë·∫øm xong!"</span>)

<span class="comment"># Output:</span>
<span class="comment"># ƒêang ƒë·∫øm: 0</span>
<span class="comment"># ƒêang ƒë·∫øm: 1</span>
<span class="comment"># ƒêang ƒë·∫øm: 2</span>
<span class="comment"># ƒê√£ ƒë·∫øm xong!</span></code></pre>
                </div>
            </div>
        </div>

        <div id="slide-6" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">2.3. C√¢u L·ªánh <code>break</code> trong
                    <code>while</code>
                </h3>
                <p class="mb-4 text-lg">C√¢u l·ªánh <code>break</code> ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ tho√°t kh·ªèi v√≤ng l·∫∑p
                    <code>while</code> (ho·∫∑c <code>for</code>) ngay l·∫≠p t·ª©c, b·∫•t k·ªÉ ƒëi·ªÅu ki·ªán c·ªßa v√≤ng l·∫∑p c√≤n ƒë√∫ng hay
                    kh√¥ng.
                </p>
                <p class="mb-4 text-lg">Khi <code>break</code> ƒë∆∞·ª£c th·ª±c thi, kh·ªëi <code>else</code> (n·∫øu c√≥) c·ªßa v√≤ng
                    l·∫∑p s·∫Ω KH√îNG ƒë∆∞·ª£c th·ª±c thi.</p>
                <p class="mb-2 font-medium">V√≠ d·ª•: T√¨m s·ªë ƒë·∫ßu ti√™n chia h·∫øt cho 7</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre class="code-block"><code><span class="variable">num</span> <span class="operator">=</span> <span class="number">1</span>
<span class="keyword">while</span> <span class="boolean">True</span><span class="operator">:</span> <span class="comment"># V√≤ng l·∫∑p c√≥ v·∫ª v√¥ h·∫°n</span>
    <span class="function">print</span>(<span class="string">f"Ki·ªÉm tra s·ªë: {num}"</span>)
    <span class="keyword">if</span> <span class="variable">num</span> <span class="operator">%</span> <span class="number">7</span> <span class="operator">==</span> <span class="number">0</span><span class="operator">:</span>
        <span class="function">print</span>(<span class="string">f"T√¨m th·∫•y! {num} chia h·∫øt cho 7."</span>)
        <span class="keyword">break</span>  <span class="comment"># Tho√°t kh·ªèi v√≤ng l·∫∑p</span>
    <span class="variable">num</span> <span class="operator">+=</span> <span class="number">1</span>
<span class="keyword">else</span><span class="operator">:</span>
    <span class="function">print</span>(<span class="string">"Kh·ªëi else n√†y s·∫Ω kh√¥ng ch·∫°y do c√≥ break."</span>)

<span class="comment"># Output:</span>
<span class="comment"># Ki·ªÉm tra s·ªë: 1</span>
<span class="comment"># ... (ƒë·∫øn 6)</span>
<span class="comment"># Ki·ªÉm tra s·ªë: 7</span>
<span class="comment"># T√¨m th·∫•y! 7 chia h·∫øt cho 7.</span></code></pre>
                </div>
            </div>
        </div>

        <div id="slide-7" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">2.4. C√¢u L·ªánh <code>continue</code> trong
                    <code>while</code>
                </h3>
                <p class="mb-4 text-lg">C√¢u l·ªánh <code>continue</code> ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ b·ªè qua ph·∫ßn c√≤n l·∫°i c·ªßa kh·ªëi m√£
                    trong l·∫ßn l·∫∑p hi·ªán t·∫°i v√† chuy·ªÉn ngay sang l·∫ßn l·∫∑p ti·∫øp theo c·ªßa v√≤ng l·∫∑p <code>while</code> (ho·∫∑c
                    <code>for</code>).
                </p>
                <p class="mb-4 text-lg">ƒêi·ªÅu ki·ªán c·ªßa v√≤ng l·∫∑p s·∫Ω ƒë∆∞·ª£c ki·ªÉm tra l·∫°i.</p>
                <p class="mb-2 font-medium">V√≠ d·ª•: In c√°c s·ªë l·∫ª t·ª´ 1 ƒë·∫øn 10</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre class="code-block"><code><span class="variable">num</span> <span class="operator">=</span> <span class="number">0</span>
<span class="keyword">while</span> <span class="variable">num</span> <span class="operator">&lt;</span> <span class="number">10</span><span class="operator">:</span>
    <span class="variable">num</span> <span class="operator">+=</span> <span class="number">1</span>
    <span class="keyword">if</span> <span class="variable">num</span> <span class="operator">%</span> <span class="number">2</span> <span class="operator">==</span> <span class="number">0</span><span class="operator">:</span> <span class="comment"># N·∫øu num l√† s·ªë ch·∫µn</span>
        <span class="keyword">continue</span>      <span class="comment"># B·ªè qua print v√† quay l·∫°i ƒë·∫ßu v√≤ng l·∫∑p</span>
    <span class="function">print</span>(<span class="string">f"S·ªë l·∫ª: {num}"</span>)

<span class="comment"># Output:</span>
<span class="comment"># S·ªë l·∫ª: 1</span>
<span class="comment"># S·ªë l·∫ª: 3</span>
<span class="comment"># S·ªë l·∫ª: 5</span>
<span class="comment"># S·ªë l·∫ª: 7</span>
<span class="comment"># S·ªë l·∫ª: 9</span></code></pre>
                </div>
            </div>
        </div>

        <div id="slide-8" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">3. V√≤ng L·∫∑p L·ªìng Nhau (Nested Loops)</h3>
                <p class="mb-4 text-lg">B·∫°n c√≥ th·ªÉ ƒë·∫∑t m·ªôt v√≤ng l·∫∑p (<code>for</code> ho·∫∑c <code>while</code>) b√™n trong
                    m·ªôt v√≤ng l·∫∑p kh√°c. ƒê√¢y ƒë∆∞·ª£c g·ªçi l√† v√≤ng l·∫∑p l·ªìng nhau.</p>
                <p class="mb-4 text-lg">V√≤ng l·∫∑p b√™n trong s·∫Ω ho√†n th√†nh t·∫•t c·∫£ c√°c l·∫ßn l·∫∑p c·ªßa n√≥ cho m·ªói l·∫ßn l·∫∑p c·ªßa
                    v√≤ng l·∫∑p b√™n ngo√†i.</p>
                <p class="mb-2 font-medium">C√∫ ph√°p (<code>for</code> l·ªìng <code>for</code>):</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre class="code-block"><code><span class="keyword">for</span> <span class="variable">bien_ngoai</span> <span class="keyword">in</span> <span class="variable">tap_hop_ngoai</span><span class="operator">:</span>
    <span class="comment"># M√£ c·ªßa v√≤ng l·∫∑p ngo√†i</span>
    <span class="keyword">for</span> <span class="variable">bien_trong</span> <span class="keyword">in</span> <span class="variable">tap_hop_trong</span><span class="operator">:</span>
        <span class="comment"># M√£ c·ªßa v√≤ng l·∫∑p trong</span>
        <span class="comment"># Th·ª±c thi cho m·ªói bien_ngoai</span>
    <span class="comment"># M√£ c·ªßa v√≤ng l·∫∑p ngo√†i (sau khi v√≤ng l·∫∑p trong k·∫øt th√∫c)</span></code></pre>
                </div>
                <p class="mt-4 mb-2 font-medium">C√∫ ph√°p (<code>while</code> l·ªìng <code>while</code>):</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre class="code-block"><code><span class="keyword">while</span> <span class="variable">dieu_kien_ngoai</span><span class="operator">:</span>
    <span class="comment"># M√£ c·ªßa v√≤ng l·∫∑p ngo√†i</span>
    <span class="keyword">while</span> <span class="variable">dieu_kien_trong</span><span class="operator">:</span>
        <span class="comment"># M√£ c·ªßa v√≤ng l·∫∑p trong</span>
    <span class="comment"># M√£ c·ªßa v√≤ng l·∫∑p ngo√†i (sau khi v√≤ng l·∫∑p trong k·∫øt th√∫c)</span></code></pre>
                </div>
                <p class="mt-4 text-lg">B·∫°n c≈©ng c√≥ th·ªÉ l·ªìng <code>for</code> v√†o <code>while</code> v√† ng∆∞·ª£c l·∫°i.</p>
            </div>
        </div>

        <div id="slide-9" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">3.1. V√≠ d·ª• V√≤ng L·∫∑p L·ªìng Nhau</h3>
                <p class="mb-2 font-medium">V√≠ d·ª• 1: In b·∫£ng c·ª≠u ch∆∞∆°ng (t·ª´ 1 ƒë·∫øn 3)</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre class="code-block"><code><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="function">range</span>(<span class="number">1</span>, <span class="number">4</span>)<span class="operator">:</span>  <span class="comment"># V√≤ng l·∫∑p ngo√†i: i t·ª´ 1 ƒë·∫øn 3</span>
    <span class="function">print</span>(<span class="string">f"--- B·∫£ng c·ª≠u ch∆∞∆°ng {i} ---"</span>)
    <span class="keyword">for</span> <span class="variable">j</span> <span class="keyword">in</span> <span class="function">range</span>(<span class="number">1</span>, <span class="number">11</span>)<span class="operator">:</span> <span class="comment"># V√≤ng l·∫∑p trong: j t·ª´ 1 ƒë·∫øn 10</span>
        <span class="function">print</span>(<span class="string">f"{i} x {j} = {i*j}"</span>)
    <span class="function">print</span>() <span class="comment"># In m·ªôt d√≤ng tr·ªëng ƒë·ªÉ ph√¢n c√°ch</span></code></pre>
                </div>
                <p class="mt-6 mb-2 font-medium">V√≠ d·ª• 2: T·∫°o m·ªôt "h√¨nh ch·ªØ nh·∫≠t" b·∫±ng d·∫•u sao (*)</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre class="code-block"><code><span class="variable">hang</span> <span class="operator">=</span> <span class="function">int</span>(<span class="function">input</span>(<span class="string">"Nh·∫≠p s·ªë h√†ng: "</span>))
<span class="variable">cot</span> <span class="operator">=</span> <span class="function">int</span>(<span class="function">input</span>(<span class="string">"Nh·∫≠p s·ªë c·ªôt: "</span>))

<span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="function">range</span>(<span class="variable">hang</span>)<span class="operator">:</span>
    <span class="variable">dong_sao</span> <span class="operator">=</span> <span class="string">""</span>
    <span class="keyword">for</span> <span class="variable">j</span> <span class="keyword">in</span> <span class="function">range</span>(<span class="variable">cot</span>)<span class="operator">:</span>
        <span class="variable">dong_sao</span> <span class="operator">+=</span> <span class="string">"* "</span>
    <span class="function">print</span>(<span class="variable">dong_sao</span>)</code></pre>
                </div>
                <p class="mt-2 text-sm text-gray-600">V√≤ng l·∫∑p l·ªìng nhau r·∫•t h·ªØu √≠ch ƒë·ªÉ x·ª≠ l√Ω d·ªØ li·ªáu d·∫°ng b·∫£ng, ma tr·∫≠n
                    ho·∫∑c c√°c t√°c v·ª• l·∫∑p l·∫°i c√≥ c·∫•u tr√∫c ph·ª©c t·∫°p.</p>
            </div>
        </div>

        <div id="slide-10" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">4. ƒêi·ªÅu Ki·ªán K·∫øt H·ª£p V√≤ng L·∫∑p (N√¢ng Cao)</h3>
                <p class="mb-4 text-lg">·ªû Bu·ªïi 2, ch√∫ng ta ƒë√£ l√†m quen v·ªõi vi·ªác s·ª≠ d·ª•ng <code>if</code> b√™n trong v√≤ng
                    l·∫∑p <code>for</code>. B√¢y gi·ªù, ch√∫ng ta s·∫Ω kh√°m ph√° c√°c k·ªãch b·∫£n ph·ª©c t·∫°p h∆°n, k·∫øt h·ª£p
                    <code>if-elif-else</code>, to√°n t·ª≠ logic, <code>break</code>, <code>continue</code> b√™n trong c·∫£
                    v√≤ng l·∫∑p <code>for</code> v√† <code>while</code>, c≈©ng nh∆∞ trong c√°c v√≤ng l·∫∑p l·ªìng nhau.
                </p>
                <p class="mb-4 text-lg">S·ª± k·∫øt h·ª£p n√†y cho ph√©p ch√∫ng ta:</p>
                <ul class="list-disc list-inside mb-4 pl-4 text-gray-700">
                    <li>X·ª≠ l√Ω c√°c ph·∫ßn t·ª≠ m·ªôt c√°ch c√≥ ch·ªçn l·ªçc trong m·ªôt t·∫≠p d·ªØ li·ªáu.</li>
                    <li>D·ª´ng v√≤ng l·∫∑p s·ªõm khi m·ªôt ƒëi·ªÅu ki·ªán ƒë·∫∑c bi·ªát ƒë∆∞·ª£c th·ªèa m√£n.</li>
                    <li>B·ªè qua c√°c ph·∫ßn t·ª≠ kh√¥ng mong mu·ªën.</li>
                    <li>Th·ª±c hi·ªán c√°c logic ph·ª©c t·∫°p d·ª±a tr√™n tr·∫°ng th√°i c·ªßa nhi·ªÅu bi·∫øn trong qu√° tr√¨nh l·∫∑p.</li>
                </ul>
                <p class="text-lg">H√£y xem x√©t c√°c v√≠ d·ª• c·ª• th·ªÉ ƒë·ªÉ hi·ªÉu r√µ h∆°n.</p>
                <div class="flex justify-center mt-6">
                    <img src="https://placehold.co/350x200/C084FC/FFFFFF?text=Complex+Logic"
                        alt="[H√¨nh ·∫£nh Logic Ph·ª©c T·∫°p]" class="shadow-md">
                </div>
            </div>
        </div>

        <div id="slide-11" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">4.1. V√≠ d·ª•: T√¨m S·ªë Nguy√™n T·ªë</h3>
                <p class="mb-4 text-lg">Y√™u c·∫ßu: Vi·∫øt ch∆∞∆°ng tr√¨nh t√¨m v√† in ra t·∫•t c·∫£ c√°c s·ªë nguy√™n t·ªë trong m·ªôt kho·∫£ng
                    cho tr∆∞·ªõc (v√≠ d·ª• t·ª´ 2 ƒë·∫øn N).</p>
                <p class="mb-2 text-sm text-gray-600">M·ªôt s·ªë l√† s·ªë nguy√™n t·ªë n·∫øu n√≥ l·ªõn h∆°n 1 v√† ch·ªâ chia h·∫øt cho 1 v√†
                    ch√≠nh n√≥.</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre
                        class="code-block"><code><span class="variable">N</span> <span class="operator">=</span> <span class="function">int</span>(<span class="function">input</span>(<span class="string">"Nh·∫≠p gi·ªõi h·∫°n tr√™n N (N > 1): "</span>))

<span class="function">print</span>(<span class="string">f"C√°c s·ªë nguy√™n t·ªë t·ª´ 2 ƒë·∫øn {N} l√†:"</span>)
<span class="keyword">for</span> <span class="variable">num</span> <span class="keyword">in</span> <span class="function">range</span>(<span class="number">2</span>, <span class="variable">N</span> <span class="operator">+</span> <span class="number">1</span>)<span class="operator">:</span>
    <span class="variable">la_so_nguyen_to</span> <span class="operator">=</span> <span class="boolean">True</span>
    <span class="keyword">if</span> <span class="variable">num</span> <span class="operator">&lt;=</span> <span class="number">1</span><span class="operator">:</span>
        <span class="variable">la_so_nguyen_to</span> <span class="operator">=</span> <span class="boolean">False</span>
    <span class="keyword">else</span><span class="operator">:</span>
        <span class="comment"># Ki·ªÉm tra ∆∞·ªõc s·ªë t·ª´ 2 ƒë·∫øn cƒÉn b·∫≠c hai c·ªßa num</span>
        <span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="function">range</span>(<span class="number">2</span>, <span class="function">int</span>(<span class="variable">num</span><span class="operator">**</span><span class="number">0.5</span>) <span class="operator">+</span> <span class="number">1</span>)<span class="operator">:</span>
            <span class="keyword">if</span> <span class="variable">num</span> <span class="operator">%</span> <span class="variable">i</span> <span class="operator">==</span> <span class="number">0</span><span class="operator">:</span>
                <span class="variable">la_so_nguyen_to</span> <span class="operator">=</span> <span class="boolean">False</span>
                <span class="keyword">break</span> <span class="comment"># Kh√¥ng c·∫ßn ki·ªÉm tra th√™m n·∫øu ƒë√£ t√¨m th·∫•y ∆∞·ªõc</span>
    <span class="keyword">if</span> <span class="variable">la_so_nguyen_to</span><span class="operator">:</span>
        <span class="function">print</span>(<span class="variable">num</span>, <span class="variable">end</span><span class="operator">=</span><span class="string">" "</span>)</code></pre>
                </div>
                <p class="mt-2 text-sm text-gray-600">Trong v√≠ d·ª• n√†y, v√≤ng l·∫∑p ngo√†i duy·ªát qua c√°c s·ªë, v√≤ng l·∫∑p trong
                    ki·ªÉm tra t√≠nh nguy√™n t·ªë. L·ªánh <code>break</code> ƒë∆∞·ª£c d√πng ƒë·ªÉ t·ªëi ∆∞u h√≥a.</p>
            </div>
        </div>

        <div id="slide-12" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">4.2. V√≠ d·ª•: X·ª≠ L√Ω Menu Ng∆∞·ªùi D√πng</h3>
                <p class="mb-4 text-lg">Y√™u c·∫ßu: T·∫°o m·ªôt menu ƒë∆°n gi·∫£n cho ng∆∞·ªùi d√πng ch·ªçn, l·∫∑p l·∫°i cho ƒë·∫øn khi ng∆∞·ªùi
                    d√πng ch·ªçn tho√°t.</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre
                        class="code-block"><code><span class="keyword">while</span> <span class="boolean">True</span><span class="operator">:</span>
    <span class="function">print</span>(<span class="string">"\n--- MENU ---"</span>)
    <span class="function">print</span>(<span class="string">"1. Xem th√¥ng tin"</span>)
    <span class="function">print</span>(<span class="string">"2. C·∫≠p nh·∫≠t th√¥ng tin"</span>)
    <span class="function">print</span>(<span class="string">"3. Tho√°t"</span>)

    <span class="variable">lua_chon</span> <span class="operator">=</span> <span class="function">input</span>(<span class="string">"Nh·∫≠p l·ª±a ch·ªçn c·ªßa b·∫°n (1-3): "</span>)

    <span class="keyword">if</span> <span class="variable">lua_chon</span> <span class="operator">==</span> <span class="string">'1'</span><span class="operator">:</span>
        <span class="function">print</span>(<span class="string">"ƒêang hi·ªÉn th·ªã th√¥ng tin..."</span>)
        <span class="comment"># Th√™m code x·ª≠ l√Ω xem th√¥ng tin ·ªü ƒë√¢y</span>
    <span class="keyword">elif</span> <span class="variable">lua_chon</span> <span class="operator">==</span> <span class="string">'2'</span><span class="operator">:</span>
        <span class="function">print</span>(<span class="string">"ƒêang c·∫≠p nh·∫≠t th√¥ng tin..."</span>)
        <span class="comment"># Th√™m code x·ª≠ l√Ω c·∫≠p nh·∫≠t ·ªü ƒë√¢y</span>
    <span class="keyword">elif</span> <span class="variable">lua_chon</span> <span class="operator">==</span> <span class="string">'3'</span><span class="operator">:</span>
        <span class="function">print</span>(<span class="string">"C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng ch∆∞∆°ng tr√¨nh. T·∫°m bi·ªát!"</span>)
        <span class="keyword">break</span> <span class="comment"># Tho√°t kh·ªèi v√≤ng l·∫∑p while</span>
    <span class="keyword">else</span><span class="operator">:</span>
        <span class="function">print</span>(<span class="string">"L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Vui l√≤ng ch·ªçn l·∫°i."</span>)</code></pre>
                </div>
                <p class="mt-2 text-sm text-gray-600">V√≤ng l·∫∑p <code>while True</code> t·∫°o m·ªôt menu l·∫∑p l·∫°i.
                    <code>if-elif-else</code> x·ª≠ l√Ω l·ª±a ch·ªçn, v√† <code>break</code> d√πng ƒë·ªÉ tho√°t.
                </p>
            </div>
        </div>

        <div id="slide-13" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">5. Gi·ªõi Thi·ªáu Danh S√°ch (List) trong Python</h3>
                <p class="mb-4 text-lg">List l√† m·ªôt trong nh·ªØng c·∫•u tr√∫c d·ªØ li·ªáu c∆° b·∫£n v√† m·∫°nh m·∫Ω nh·∫•t trong Python. N√≥
                    cho ph√©p b·∫°n l∆∞u tr·ªØ m·ªôt t·∫≠p h·ª£p c√°c m·ª•c (item) theo m·ªôt th·ª© t·ª± nh·∫•t ƒë·ªãnh.</p>
                <p class="mb-2 font-medium">ƒê·∫∑c ƒëi·ªÉm c·ªßa List:</p>
                <ul class="list-disc list-inside mb-4 pl-4 text-gray-700">
                    <li><strong>C√≥ th·ª© t·ª± (Ordered):</strong> C√°c ph·∫ßn t·ª≠ ƒë∆∞·ª£c l∆∞u tr·ªØ theo m·ªôt tr√¨nh t·ª± c·ª• th·ªÉ v√† tr√¨nh
                        t·ª± n√†y kh√¥ng thay ƒë·ªïi.</li>
                    <li><strong>C√≥ th·ªÉ thay ƒë·ªïi (Mutable):</strong> B·∫°n c√≥ th·ªÉ th√™m, x√≥a, ho·∫∑c s·ª≠a ƒë·ªïi c√°c ph·∫ßn t·ª≠ trong
                        list sau khi n√≥ ƒë∆∞·ª£c t·∫°o.</li>
                    <li><strong>Cho ph√©p c√°c ph·∫ßn t·ª≠ tr√πng l·∫∑p (Allows duplicates):</strong> M·ªôt list c√≥ th·ªÉ ch·ª©a nhi·ªÅu
                        ph·∫ßn t·ª≠ gi·ªëng h·ªát nhau.</li>
                    <li><strong>C√≥ th·ªÉ ch·ª©a nhi·ªÅu ki·ªÉu d·ªØ li·ªáu kh√°c nhau:</strong> M·ªôt list c√≥ th·ªÉ ch·ª©a s·ªë, chu·ªói,
                        boolean, th·∫≠m ch√≠ c√°c list kh√°c.</li>
                </ul>
                <p class="mb-2 font-medium">C√°ch khai b√°o List:</p>
                <p class="mb-4 text-lg">S·ª≠ d·ª•ng d·∫•u ngo·∫∑c vu√¥ng <code>[]</code> v√† c√°c ph·∫ßn t·ª≠ c√°ch nhau b·ªüi d·∫•u ph·∫©y
                    <code>,</code>.
                </p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre
                        class="code-block"><code><span class="comment"># List r·ªóng</span>
<span class="variable">danh_sach_rong</span> <span class="operator">=</span> []

<span class="comment"># List c√°c s·ªë nguy√™n</span>
<span class="variable">so_nguyen</span> <span class="operator">=</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]

<span class="comment"># List c√°c chu·ªói</span>
<span class="variable">trai_cay</span> <span class="operator">=</span> [<span class="string">"t√°o"</span>, <span class="string">"chu·ªëi"</span>, <span class="string">"cam"</span>]

<span class="comment"># List ch·ª©a nhi·ªÅu ki·ªÉu d·ªØ li·ªáu</span>
<span class="variable">hon_hop</span> <span class="operator">=</span> [<span class="string">"Python"</span>, <span class="number">3.11</span>, <span class="boolean">True</span>, <span class="number">40</span>]

<span class="function">print</span>(<span class="variable">trai_cay</span>)  <span class="comment"># Output: ['t√°o', 'chu·ªëi', 'cam']</span></code></pre>
                </div>
            </div>
        </div>

        <div id="slide-14" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">5.1. Truy C·∫≠p Ph·∫ßn T·ª≠ trong List</h3>
                <p class="mb-4 text-lg">B·∫°n c√≥ th·ªÉ truy c·∫≠p c√°c ph·∫ßn t·ª≠ ri√™ng l·∫ª trong list b·∫±ng c√°ch s·ª≠ d·ª•ng ch·ªâ s·ªë
                    (index). Ch·ªâ s·ªë trong Python b·∫Øt ƒë·∫ßu t·ª´ <code>0</code> cho ph·∫ßn t·ª≠ ƒë·∫ßu ti√™n.</p>
                <p class="mb-2 font-medium">Indexing (Truy c·∫≠p theo ch·ªâ s·ªë):</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre
                        class="code-block"><code><span class="variable">colors</span> <span class="operator">=</span> [<span class="string">"ƒë·ªè"</span>, <span class="string">"xanh l√°"</span>, <span class="string">"xanh d∆∞∆°ng"</span>, <span class="string">"v√†ng"</span>]

<span class="function">print</span>(<span class="variable">colors</span>[<span class="number">0</span>])  <span class="comment"># Output: ƒë·ªè (ph·∫ßn t·ª≠ ƒë·∫ßu ti√™n)</span>
<span class="function">print</span>(<span class="variable">colors</span>[<span class="number">2</span>])  <span class="comment"># Output: xanh d∆∞∆°ng</span>

<span class="comment"># Ch·ªâ s·ªë √¢m: truy c·∫≠p t·ª´ cu·ªëi list (-1 l√† ph·∫ßn t·ª≠ cu·ªëi c√πng)</span>
<span class="function">print</span>(<span class="variable">colors</span>[<span class="operator">-</span><span class="number">1</span>]) <span class="comment"># Output: v√†ng</span>
<span class="function">print</span>(<span class="variable">colors</span>[<span class="operator">-</span><span class="number">3</span>]) <span class="comment"># Output: xanh l√°</span></code></pre>
                </div>
                <p class="mt-4 mb-2 font-medium">Slicing (C·∫Øt List):</p>
                <p class="mb-4 text-lg">Slicing cho ph√©p b·∫°n l·∫•y m·ªôt ph·∫ßn (m·ªôt sub-list) c·ªßa list. C√∫ ph√°p:
                    <code>list[start:stop:step]</code>
                </p>
                <ul class="list-disc list-inside mb-2 pl-4 text-gray-700 text-sm">
                    <li><code>start</code>: Ch·ªâ s·ªë b·∫Øt ƒë·∫ßu (bao g·ªìm). M·∫∑c ƒë·ªãnh l√† 0.</li>
                    <li><code>stop</code>: Ch·ªâ s·ªë k·∫øt th√∫c (KH√îNG bao g·ªìm). M·∫∑c ƒë·ªãnh l√† h·∫øt list.</li>
                    <li><code>step</code>: B∆∞·ªõc nh·∫£y. M·∫∑c ƒë·ªãnh l√† 1.</li>
                </ul>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre
                        class="code-block"><code><span class="variable">numbers</span> <span class="operator">=</span> [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]

<span class="function">print</span>(<span class="variable">numbers</span>[<span class="number">2</span><span class="operator">:</span><span class="number">5</span>])     <span class="comment"># Output: [2, 3, 4] (t·ª´ index 2 ƒë·∫øn tr∆∞·ªõc index 5)</span>
<span class="function">print</span>(<span class="variable">numbers</span>[<span class="operator">:</span><span class="number">3</span>])      <span class="comment"># Output: [0, 1, 2] (t·ª´ ƒë·∫ßu ƒë·∫øn tr∆∞·ªõc index 3)</span>
<span class="function">print</span>(<span class="variable">numbers</span>[<span class="number">5</span><span class="operator">:</span>])      <span class="comment"># Output: [5, 6, 7, 8, 9] (t·ª´ index 5 ƒë·∫øn h·∫øt)</span>
<span class="function">print</span>(<span class="variable">numbers</span>[<span class="operator">:</span><span class="operator">:</span><span class="number">2</span>])     <span class="comment"># Output: [0, 2, 4, 6, 8] (t·∫•t c·∫£, b∆∞·ªõc nh·∫£y 2)</span>
<span class="function">print</span>(<span class="variable">numbers</span>[<span class="operator">-</span><span class="number">3</span><span class="operator">:</span>])    <span class="comment"># Output: [7, 8, 9] (3 ph·∫ßn t·ª≠ cu·ªëi)</span></code></pre>
                </div>
            </div>
        </div>

        <div id="slide-15" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">5.2. Thao T√°c V·ªõi List: Th√™m Ph·∫ßn T·ª≠</h3>
                <p class="mb-4 text-lg">V√¨ List l√† mutable (c√≥ th·ªÉ thay ƒë·ªïi), b·∫°n c√≥ th·ªÉ d·ªÖ d√†ng th√™m ph·∫ßn t·ª≠ m·ªõi v√†o
                    n√≥.</p>

                <p class="mb-2 font-medium">1. Ph∆∞∆°ng th·ª©c <code>append(item)</code>:</p>
                <p class="mb-2 text-lg">Th√™m m·ªôt <code>item</code> v√†o cu·ªëi list.</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre
                        class="code-block"><code><span class="variable">fruits</span> <span class="operator">=</span> [<span class="string">'t√°o'</span>, <span class="string">'chu·ªëi'</span>]
<span class="function">print</span>(<span class="string">f"Tr∆∞·ªõc khi append: {fruits}"</span>)
<span class="variable">fruits</span>.<span class="method">append</span>(<span class="string">'cam'</span>)
<span class="function">print</span>(<span class="string">f"Sau khi append: {fruits}"</span>) <span class="comment"># Output: ['t√°o', 'chu·ªëi', 'cam']</span></code></pre>
                </div>

                <p class="mt-4 mb-2 font-medium">2. Ph∆∞∆°ng th·ª©c <code>insert(index, item)</code>:</p>
                <p class="mb-2 text-lg">Ch√®n m·ªôt <code>item</code> v√†o v·ªã tr√≠ <code>index</code> c·ª• th·ªÉ.</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre
                        class="code-block"><code><span class="variable">animals</span> <span class="operator">=</span> [<span class="string">'ch√≥'</span>, <span class="string">'m√®o'</span>, <span class="string">'chim'</span>]
<span class="function">print</span>(<span class="string">f"Tr∆∞·ªõc khi insert: {animals}"</span>)
<span class="variable">animals</span>.<span class="method">insert</span>(<span class="number">1</span>, <span class="string">'c√°'</span>) <span class="comment"># Ch√®n 'c√°' v√†o v·ªã tr√≠ index 1</span>
<span class="function">print</span>(<span class="string">f"Sau khi insert: {animals}"</span>) <span class="comment"># Output: ['ch√≥', 'c√°', 'm√®o', 'chim']</span></code></pre>
                </div>

                <p class="mt-4 mb-2 font-medium">3. Ph∆∞∆°ng th·ª©c <code>extend(iterable)</code>:</p>
                <p class="mb-2 text-lg">N·ªëi t·∫•t c·∫£ c√°c ph·∫ßn t·ª≠ t·ª´ m·ªôt <code>iterable</code> (v√≠ d·ª•: m·ªôt list kh√°c, m·ªôt
                    tuple) v√†o cu·ªëi list hi·ªán t·∫°i.</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre
                        class="code-block"><code><span class="variable">list1</span> <span class="operator">=</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]
<span class="variable">list2</span> <span class="operator">=</span> [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]
<span class="function">print</span>(<span class="string">f"List1 ban ƒë·∫ßu: {list1}"</span>)
<span class="variable">list1</span>.<span class="method">extend</span>(<span class="variable">list2</span>)
<span class="function">print</span>(<span class="string">f"List1 sau extend: {list1}"</span>) <span class="comment"># Output: [1, 2, 3, 4, 5, 6]</span></code></pre>
                </div>
                <p class="mt-2 text-sm text-gray-600">B·∫°n c≈©ng c√≥ th·ªÉ d√πng to√°n t·ª≠ <code>+</code> ƒë·ªÉ n·ªëi hai list, t·∫°o
                    ra m·ªôt list m·ªõi.</p>
            </div>
        </div>

        <div id="slide-16" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">5.3. Thao T√°c V·ªõi List: Xem List</h3>
                <p class="mb-2 font-medium">1. In to√†n b·ªô List:</p>
                <p class="mb-2 text-lg">C√°ch ƒë∆°n gi·∫£n nh·∫•t ƒë·ªÉ xem n·ªôi dung c·ªßa list l√† d√πng h√†m <code>print()</code>.
                </p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre
                        class="code-block"><code><span class="variable">my_list</span> <span class="operator">=</span> [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="boolean">True</span>]
<span class="function">print</span>(<span class="variable">my_list</span>) <span class="comment"># Output: ['a', 'b', 1, 2, True]</span></code></pre>
                </div>

                <p class="mt-4 mb-2 font-medium">2. Duy·ªát qua c√°c ph·∫ßn t·ª≠ b·∫±ng v√≤ng l·∫∑p <code>for</code>:</p>
                <p class="mb-2 text-lg">ƒê√¢y l√† c√°ch ph·ªï bi·∫øn ƒë·ªÉ x·ª≠ l√Ω t·ª´ng ph·∫ßn t·ª≠ trong list.</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre class="code-block"><code><span class="variable">hoc_sinh</span> <span class="operator">=</span> [<span class="string">"An"</span>, <span class="string">"B√¨nh"</span>, <span class="string">"Chi"</span>, <span class="string">"D≈©ng"</span>]
<span class="function">print</span>(<span class="string">"Danh s√°ch h·ªçc sinh:"</span>)
<span class="keyword">for</span> <span class="variable">ten</span> <span class="keyword">in</span> <span class="variable">hoc_sinh</span><span class="operator">:</span>
    <span class="function">print</span>(<span class="string">f"- {ten}"</span>)

<span class="comment"># Output:</span>
<span class="comment"># Danh s√°ch h·ªçc sinh:</span>
<span class="comment"># - An</span>
<span class="comment"># - B√¨nh</span>
<span class="comment"># - Chi</span>
<span class="comment"># - D≈©ng</span></code></pre>
                </div>

                <p class="mt-4 mb-2 font-medium">3. Ki·ªÉm tra s·ª± t·ªìn t·∫°i c·ªßa m·ªôt ph·∫ßn t·ª≠ (to√°n t·ª≠ <code>in</code>):</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre class="code-block"><code><span class="variable">numbers</span> <span class="operator">=</span> [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>]
<span class="keyword">if</span> <span class="number">30</span> <span class="keyword">in</span> <span class="variable">numbers</span><span class="operator">:</span>
    <span class="function">print</span>(<span class="string">"S·ªë 30 c√≥ trong danh s√°ch."</span>)
<span class="keyword">else</span><span class="operator">:</span>
    <span class="function">print</span>(<span class="string">"S·ªë 30 kh√¥ng c√≥ trong danh s√°ch."</span>)
<span class="comment"># Output: S·ªë 30 c√≥ trong danh s√°ch.</span>

<span class="keyword">if</span> <span class="number">100</span> <span class="keyword">not in</span> <span class="variable">numbers</span><span class="operator">:</span>
    <span class="function">print</span>(<span class="string">"S·ªë 100 kh√¥ng c√≥ trong danh s√°ch."</span>)
<span class="comment"># Output: S·ªë 100 kh√¥ng c√≥ trong danh s√°ch.</span></code></pre>
                </div>
            </div>
        </div>

        <div id="slide-17" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">5.4. Thao T√°c V·ªõi List: X√≥a Ph·∫ßn T·ª≠</h3>
                <p class="mb-4 text-lg">C√≥ nhi·ªÅu c√°ch ƒë·ªÉ x√≥a ph·∫ßn t·ª≠ kh·ªèi list.</p>

                <p class="mb-2 font-medium">1. Ph∆∞∆°ng th·ª©c <code>remove(item)</code>:</p>
                <p class="mb-2 text-lg">X√≥a ph·∫ßn t·ª≠ <code>item</code> ƒë·∫ßu ti√™n ƒë∆∞·ª£c t√¨m th·∫•y trong list. N·∫øu
                    <code>item</code> kh√¥ng t·ªìn t·∫°i, s·∫Ω g√¢y ra l·ªói <code>ValueError</code>.
                </p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre
                        class="code-block"><code><span class="variable">letters</span> <span class="operator">=</span> [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>]
<span class="function">print</span>(<span class="string">f"Tr∆∞·ªõc remove: {letters}"</span>)
<span class="variable">letters</span>.<span class="method">remove</span>(<span class="string">'b'</span>) <span class="comment"># X√≥a ch·ªØ 'b' ƒë·∫ßu ti√™n</span>
<span class="function">print</span>(<span class="string">f"Sau remove 'b': {letters}"</span>) <span class="comment"># Output: ['a', 'c', 'b', 'd']</span></code></pre>
                </div>

                <p class="mt-4 mb-2 font-medium">2. Ph∆∞∆°ng th·ª©c <code>pop(index)</code>:</p>
                <p class="mb-2 text-lg">X√≥a v√† tr·∫£ v·ªÅ ph·∫ßn t·ª≠ t·∫°i v·ªã tr√≠ <code>index</code>. N·∫øu kh√¥ng c√≥
                    <code>index</code>, m·∫∑c ƒë·ªãnh x√≥a v√† tr·∫£ v·ªÅ ph·∫ßn t·ª≠ cu·ªëi c√πng. N·∫øu <code>index</code> kh√¥ng h·ª£p l·ªá,
                    s·∫Ω g√¢y l·ªói <code>IndexError</code>.
                </p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre
                        class="code-block"><code><span class="variable">numbers</span> <span class="operator">=</span> [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>]
<span class="variable">phan_tu_cuoi</span> <span class="operator">=</span> <span class="variable">numbers</span>.<span class="method">pop</span>() <span class="comment"># X√≥a ph·∫ßn t·ª≠ cu·ªëi</span>
<span class="function">print</span>(<span class="string">f"Ph·∫ßn t·ª≠ b·ªã x√≥a (cu·ªëi): {phan_tu_cuoi}"</span>) <span class="comment"># Output: 50</span>
<span class="function">print</span>(<span class="string">f"List sau pop(): {numbers}"</span>) <span class="comment"># Output: [10, 20, 30, 40]</span>

<span class="variable">phan_tu_index_1</span> <span class="operator">=</span> <span class="variable">numbers</span>.<span class="method">pop</span>(<span class="number">1</span>) <span class="comment"># X√≥a ph·∫ßn t·ª≠ t·∫°i index 1</span>
<span class="function">print</span>(<span class="string">f"Ph·∫ßn t·ª≠ b·ªã x√≥a (index 1): {phan_tu_index_1}"</span>) <span class="comment"># Output: 20</span>
<span class="function">print</span>(<span class="string">f"List sau pop(1): {numbers}"</span>) <span class="comment"># Output: [10, 30, 40]</span></code></pre>
                </div>

                <p class="mt-4 mb-2 font-medium">3. T·ª´ kh√≥a <code>del</code>:</p>
                <p class="mb-2 text-lg">X√≥a ph·∫ßn t·ª≠ t·∫°i m·ªôt <code>index</code> c·ª• th·ªÉ ho·∫∑c x√≥a m·ªôt l√°t c·∫Øt (slice) c·ªßa
                    list. C≈©ng c√≥ th·ªÉ d√πng ƒë·ªÉ x√≥a to√†n b·ªô list.</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre
                        class="code-block"><code><span class="variable">items</span> <span class="operator">=</span> [<span class="string">'x'</span>, <span class="string">'y'</span>, <span class="string">'z'</span>, <span class="string">'w'</span>, <span class="string">'v'</span>]
<span class="function">print</span>(<span class="string">f"Tr∆∞·ªõc del: {items}"</span>)
<span class="keyword">del</span> <span class="variable">items</span>[<span class="number">2</span>] <span class="comment"># X√≥a ph·∫ßn t·ª≠ t·∫°i index 2 ('z')</span>
<span class="function">print</span>(<span class="string">f"Sau del items[2]: {items}"</span>) <span class="comment"># Output: ['x', 'y', 'w', 'v']</span>

<span class="keyword">del</span> <span class="variable">items</span>[<span class="number">1</span><span class="operator">:</span><span class="number">3</span>] <span class="comment"># X√≥a slice t·ª´ index 1 ƒë·∫øn tr∆∞·ªõc 3 ('y', 'w')</span>
<span class="function">print</span>(<span class="string">f"Sau del items[1:3]: {items}"</span>) <span class="comment"># Output: ['x', 'v']</span></code></pre>
                </div>
            </div>
        </div>

        <div id="slide-18" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">5.5. Thao T√°c V·ªõi List: C·∫≠p Nh·∫≠t Ph·∫ßn T·ª≠</h3>
                <p class="mb-4 text-lg">V√¨ list l√† mutable, b·∫°n c√≥ th·ªÉ d·ªÖ d√†ng thay ƒë·ªïi gi√° tr·ªã c·ªßa c√°c ph·∫ßn t·ª≠ hi·ªán c√≥
                    b·∫±ng c√°ch g√°n gi√° tr·ªã m·ªõi cho ch√∫ng th√¥ng qua ch·ªâ s·ªë (index).</p>
                <p class="mb-2 font-medium">C√∫ ph√°p:</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre
                        class="code-block"><code><span class="variable">ten_list</span>[<span class="variable">chi_so</span>] <span class="operator">=</span> <span class="variable">gia_tri_moi</span></code></pre>
                </div>
                <p class="mt-4 mb-2 font-medium">V√≠ d·ª•:</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre class="code-block"><code><span class="variable">planets</span> <span class="operator">=</span> [<span class="string">"Sao Th·ªßy"</span>, <span class="string">"Sao Kim"</span>, <span class="string">"Tr√°i ƒê·∫•t"</span>, <span class="string">"Sao H·ªèa"</span>]
<span class="function">print</span>(<span class="string">f"List ban ƒë·∫ßu: {planets}"</span>)

<span class="comment"># C·∫≠p nh·∫≠t ph·∫ßn t·ª≠ t·∫°i index 1</span>
<span class="variable">planets</span>[<span class="number">1</span>] <span class="operator">=</span> <span class="string">"Venus"</span> <span class="comment"># Thay "Sao Kim" b·∫±ng "Venus"</span>
<span class="function">print</span>(<span class="string">f"Sau khi c·∫≠p nh·∫≠t index 1: {planets}"</span>)
<span class="comment"># Output: ['Sao Th·ªßy', 'Venus', 'Tr√°i ƒê·∫•t', 'Sao H·ªèa']</span>

<span class="comment"># C·∫≠p nh·∫≠t ph·∫ßn t·ª≠ cu·ªëi c√πng</span>
<span class="variable">planets</span>[<span class="operator">-</span><span class="number">1</span>] <span class="operator">=</span> <span class="string">"Mars"</span> <span class="comment"># Thay "Sao H·ªèa" b·∫±ng "Mars"</span>
<span class="function">print</span>(<span class="string">f"Sau khi c·∫≠p nh·∫≠t index cu·ªëi: {planets}"</span>)
<span class="comment"># Output: ['Sao Th·ªßy', 'Venus', 'Tr√°i ƒê·∫•t', 'Mars']</span></code></pre>
                </div>
                <p class="mt-4 text-lg">B·∫°n c≈©ng c√≥ th·ªÉ c·∫≠p nh·∫≠t m·ªôt l√°t c·∫Øt (slice) c·ªßa list, nh∆∞ng k√≠ch th∆∞·ªõc c·ªßa gi√°
                    tr·ªã g√°n v√†o c√≥ th·ªÉ kh√°c v·ªõi k√≠ch th∆∞·ªõc c·ªßa slice, d·∫´n ƒë·∫øn vi·ªác thay ƒë·ªïi k√≠ch th∆∞·ªõc c·ªßa list.</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre class="code-block"><code><span class="variable">numbers</span> <span class="operator">=</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]
<span class="function">print</span>(<span class="string">f"Numbers ban ƒë·∫ßu: {numbers}"</span>)
<span class="variable">numbers</span>[<span class="number">1</span><span class="operator">:</span><span class="number">3</span>] <span class="operator">=</span> [<span class="number">20</span>, <span class="number">30</span>, <span class="number">35</span>] <span class="comment"># Thay [2, 3] b·∫±ng [20, 30, 35]</span>
<span class="function">print</span>(<span class="string">f"Numbers sau c·∫≠p nh·∫≠t slice: {numbers}"</span>)
<span class="comment"># Output: [1, 20, 30, 35, 4, 5]</span></code></pre>
                </div>
            </div>
        </div>

        <div id="slide-19" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">5.6. M·ªôt S·ªë Ph∆∞∆°ng Th·ª©c List H·ªØu √çch Kh√°c</h3>
                <ul class="list-disc list-inside space-y-3">
                    <li>
                        <p class="text-lg"><strong><code>list.sort(reverse=False)</code></strong>: S·∫Øp x·∫øp c√°c ph·∫ßn t·ª≠
                            trong list t·∫°i ch·ªó (in-place). M·∫∑c ƒë·ªãnh l√† tƒÉng d·∫ßn. ƒê·∫∑t <code>reverse=True</code> ƒë·ªÉ s·∫Øp
                            x·∫øp gi·∫£m d·∫ßn.</p>
                        <div class="code-block-container">
                            <div class="code-block-header">
                                <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                                    ch√©p</button>
                            </div>
                            <pre
                                class="code-block"><code><span class="variable">nums</span> <span class="operator">=</span> [<span class="number">5</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">3</span>]
<span class="variable">nums</span>.<span class="method">sort</span>()
<span class="function">print</span>(<span class="string">f"S·∫Øp x·∫øp tƒÉng d·∫ßn: {nums}"</span>) <span class="comment"># Output: [1, 2, 3, 5, 8]</span>
<span class="variable">nums</span>.<span class="method">sort</span>(<span class="variable">reverse</span><span class="operator">=</span><span class="boolean">True</span>)
<span class="function">print</span>(<span class="string">f"S·∫Øp x·∫øp gi·∫£m d·∫ßn: {nums}"</span>) <span class="comment"># Output: [8, 5, 3, 2, 1]</span></code></pre>
                        </div>
                    </li>
                    <li>
                        <p class="text-lg"><strong><code>list.reverse()</code></strong>: ƒê·∫£o ng∆∞·ª£c th·ª© t·ª± c√°c ph·∫ßn t·ª≠
                            trong list t·∫°i ch·ªó.</p>
                        <div class="code-block-container">
                            <div class="code-block-header">
                                <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                                    ch√©p</button>
                            </div>
                            <pre
                                class="code-block"><code><span class="variable">chars</span> <span class="operator">=</span> [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>]
<span class="variable">chars</span>.<span class="method">reverse</span>()
<span class="function">print</span>(<span class="string">f"Sau reverse: {chars}"</span>) <span class="comment"># Output: ['d', 'c', 'b', 'a']</span></code></pre>
                        </div>
                    </li>
                    <li>
                        <p class="text-lg"><strong><code>list.count(item)</code></strong>: Tr·∫£ v·ªÅ s·ªë l·∫ßn xu·∫•t hi·ªán c·ªßa
                            <code>item</code> trong list.
                        </p>
                        <div class="code-block-container">
                            <div class="code-block-header">
                                <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                                    ch√©p</button>
                            </div>
                            <pre
                                class="code-block"><code><span class="variable">data</span> <span class="operator">=</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>]
<span class="function">print</span>(<span class="string">f"S·ªë l·∫ßn xu·∫•t hi·ªán c·ªßa 2: {data.count(2)}"</span>) <span class="comment"># Output: 3</span></code></pre>
                        </div>
                    </li>
                    <li>
                        <p class="text-lg"><strong><code>list.index(item, start, end)</code></strong>: Tr·∫£ v·ªÅ ch·ªâ s·ªë c·ªßa
                            l·∫ßn xu·∫•t hi·ªán ƒë·∫ßu ti√™n c·ªßa <code>item</code>. B·∫°n c√≥ th·ªÉ ch·ªâ ƒë·ªãnh kho·∫£ng t√¨m ki·∫øm
                            <code>start</code> v√† <code>end</code>. G√¢y l·ªói <code>ValueError</code> n·∫øu kh√¥ng t√¨m th·∫•y.
                        </p>
                        <div class="code-block-container">
                            <div class="code-block-header">
                                <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                                    ch√©p</button>
                            </div>
                            <pre
                                class="code-block"><code><span class="variable">items</span> <span class="operator">=</span> [<span class="string">'apple'</span>, <span class="string">'banana'</span>, <span class="string">'cherry'</span>, <span class="string">'banana'</span>]
<span class="function">print</span>(<span class="string">f"Index c·ªßa 'banana': {items.index('banana')}"</span>) <span class="comment"># Output: 1</span>
<span class="function">print</span>(<span class="string">f"Index c·ªßa 'banana' t·ª´ index 2: {items.index('banana', 2)}"</span>) <span class="comment"># Output: 3</span></code></pre>
                        </div>
                    </li>
                    <li>
                        <p class="text-lg"><strong><code>len(list)</code></strong>: H√†m built-in, tr·∫£ v·ªÅ s·ªë l∆∞·ª£ng ph·∫ßn
                            t·ª≠ trong list (kh√¥ng ph·∫£i ph∆∞∆°ng th·ª©c).</p>
                        <div class="code-block-container">
                            <div class="code-block-header">
                                <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                                    ch√©p</button>
                            </div>
                            <pre
                                class="code-block"><code><span class="variable">my_list</span> <span class="operator">=</span> [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>]
<span class="function">print</span>(<span class="string">f"ƒê·ªô d√†i c·ªßa list: {len(my_list)}"</span>) <span class="comment"># Output: 3</span></code></pre>
                        </div>
                    </li>
                </ul>
            </div>
        </div>

        <div id="slide-20" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">5.7. List L·ªìng Nhau (Nested Lists)</h3>
                <p class="mb-4 text-lg">M·ªôt list c√≥ th·ªÉ ch·ª©a c√°c list kh√°c l√†m ph·∫ßn t·ª≠. ƒê√¢y ƒë∆∞·ª£c g·ªçi l√† list l·ªìng nhau,
                    th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ bi·ªÉu di·ªÖn d·ªØ li·ªáu d·∫°ng b·∫£ng ho·∫∑c ma tr·∫≠n.</p>
                <p class="mb-2 font-medium">V√≠ d·ª•: Ma tr·∫≠n 2x3</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre class="code-block"><code><span class="variable">ma_tran</span> <span class="operator">=</span> [
  <span class="comment"># C·ªôt 0, C·ªôt 1, C·ªôt 2</span>
  [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],  <span class="comment"># H√†ng 0</span>
  [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]   <span class="comment"># H√†ng 1</span>
]

<span class="comment"># Truy c·∫≠p ph·∫ßn t·ª≠</span>
<span class="function">print</span>(<span class="string">f"Ph·∫ßn t·ª≠ ·ªü h√†ng 0, c·ªôt 1: {ma_tran[0][1]}"</span>) <span class="comment"># Output: 2</span>
<span class="function">print</span>(<span class="string">f"Ph·∫ßn t·ª≠ ·ªü h√†ng 1, c·ªôt 2: {ma_tran[1][2]}"</span>) <span class="comment"># Output: 6</span>

<span class="comment"># L·∫•y c·∫£ h√†ng</span>
<span class="function">print</span>(<span class="string">f"H√†ng 1: {ma_tran[1]}"</span>) <span class="comment"># Output: [4, 5, 6]</span>

<span class="comment"># Duy·ªát qua ma tr·∫≠n</span>
<span class="function">print</span>(<span class="string">"\nC√°c ph·∫ßn t·ª≠ trong ma tr·∫≠n:"</span>)
<span class="keyword">for</span> <span class="variable">hang</span> <span class="keyword">in</span> <span class="variable">ma_tran</span><span class="operator">:</span>
    <span class="keyword">for</span> <span class="variable">phan_tu</span> <span class="keyword">in</span> <span class="variable">hang</span><span class="operator">:</span>
        <span class="function">print</span>(<span class="variable">phan_tu</span>, <span class="variable">end</span><span class="operator">=</span><span class="string">" "</span>)
    <span class="function">print</span>() <span class="comment"># Xu·ªëng d√≤ng sau m·ªói h√†ng</span></code></pre>
                </div>
                <p class="mt-2 text-sm text-gray-600">List l·ªìng nhau r·∫•t linh ho·∫°t v√† c√≥ th·ªÉ c√≥ nhi·ªÅu c·∫•p ƒë·ªô l·ªìng.</p>
            </div>
        </div>

        <div id="slide-21" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-purple-500 mb-4">6. B√†i T·∫≠p Th·ª±c H√†nh (C∆° B·∫£n)</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i 1: T√≠nh t·ªïng c√°c s·ªë s·ª≠ d·ª•ng <code>while</code>
                </h4>
                <p class="mb-2 text-lg"><strong>Y√™u c·∫ßu:</strong> Vi·∫øt ch∆∞∆°ng tr√¨nh y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p v√†o c√°c s·ªë
                    nguy√™n li√™n t·ª•c. Ch∆∞∆°ng tr√¨nh s·∫Ω c·ªông d·ªìn c√°c s·ªë ƒë√≥ l·∫°i. N·∫øu ng∆∞·ªùi d√πng nh·∫≠p s·ªë <code>0</code>,
                    ch∆∞∆°ng tr√¨nh d·ª´ng vi·ªác nh·∫≠p v√† in ra t·ªïng ƒë√£ t√≠nh ƒë∆∞·ª£c.</p>
                <p class="mb-2 font-medium">V√≠ d·ª• output mong mu·ªën:</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre class="code-block"><code><span class="comment">Nh·∫≠p m·ªôt s·ªë (nh·∫≠p 0 ƒë·ªÉ d·ª´ng): 5</span>
<span class="comment">Nh·∫≠p m·ªôt s·ªë (nh·∫≠p 0 ƒë·ªÉ d·ª´ng): 10</span>
<span class="comment">Nh·∫≠p m·ªôt s·ªë (nh·∫≠p 0 ƒë·ªÉ d·ª´ng): 3</span>
<span class="comment">Nh·∫≠p m·ªôt s·ªë (nh·∫≠p 0 ƒë·ªÉ d·ª´ng): 0</span>
<span class="comment">T·ªïng c√°c s·ªë ƒë√£ nh·∫≠p l√†: 18</span></code></pre>
                </div>
                <p class="mt-4 text-sm text-gray-500">G·ª£i √Ω: S·ª≠ d·ª•ng v√≤ng l·∫∑p <code>while</code> v√† m·ªôt bi·∫øn ƒë·ªÉ l∆∞u
                    t·ªïng.</p>
            </div>
        </div>

        <div id="slide-22" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-purple-500 mb-4">6. B√†i T·∫≠p Th·ª±c H√†nh (C∆° B·∫£n)</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i 2: Qu·∫£n l√Ω danh s√°ch t√™n ƒë∆°n gi·∫£n</h4>
                <p class="mb-2 text-lg"><strong>Y√™u c·∫ßu:</strong></p>
                <ol class="list-decimal list-inside mb-2 pl-4 text-gray-700">
                    <li>T·∫°o m·ªôt list r·ªóng t√™n l√† <code>danh_sach_ten</code>.</li>
                    <li>Y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p 3 t√™n v√† th√™m l·∫ßn l∆∞·ª£t v√†o list b·∫±ng ph∆∞∆°ng th·ª©c <code>append()</code>.
                    </li>
                    <li>In ra to√†n b·ªô danh s√°ch t√™n.</li>
                    <li>Y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p m·ªôt t√™n mu·ªën x√≥a kh·ªèi danh s√°ch. S·ª≠ d·ª•ng <code>remove()</code> ƒë·ªÉ x√≥a.
                        N·∫øu t√™n kh√¥ng c√≥, th√¥ng b√°o cho ng∆∞·ªùi d√πng.</li>
                    <li>In l·∫°i danh s√°ch t√™n sau khi x√≥a.</li>
                </ol>
                <p class="mt-4 text-sm text-gray-500">G·ª£i √Ω: S·ª≠ d·ª•ng <code>try-except ValueError</code> khi d√πng
                    <code>remove()</code> ƒë·ªÉ x·ª≠ l√Ω tr∆∞·ªùng h·ª£p t√™n kh√¥ng c√≥ trong list.
                </p>
            </div>
        </div>

        <div id="slide-23" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-purple-600 mb-4">7. B√†i T·∫≠p Th·ª±c H√†nh (N√¢ng Cao)</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i 1: Tr√≤ ch∆°i ƒëo√°n s·ªë</h4>
                <p class="mb-2 text-lg"><strong>Y√™u c·∫ßu:</strong></p>
                <ol class="list-decimal list-inside mb-2 pl-4 text-gray-700">
                    <li>Ch∆∞∆°ng tr√¨nh "nghƒ©" ra m·ªôt s·ªë b√≠ m·∫≠t trong kho·∫£ng t·ª´ 1 ƒë·∫øn 100 (b·∫°n c√≥ th·ªÉ g√°n c·ª©ng ho·∫∑c d√πng
                        module <code>random</code> - s·∫Ω h·ªçc sau, t·∫°m th·ªùi g√°n c·ª©ng v√≠ d·ª•: <code>so_bi_mat = 42</code>).
                    </li>
                    <li>Cho ng∆∞·ªùi d√πng ƒëo√°n s·ªë ƒë√≥. Sau m·ªói l·∫ßn ƒëo√°n:
                        <ul>
                            <li>N·∫øu s·ªë ƒëo√°n nh·ªè h∆°n s·ªë b√≠ m·∫≠t, th√¥ng b√°o "S·ªë b·∫°n ƒëo√°n nh·ªè qu√°!".</li>
                            <li>N·∫øu s·ªë ƒëo√°n l·ªõn h∆°n s·ªë b√≠ m·∫≠t, th√¥ng b√°o "S·ªë b·∫°n ƒëo√°n l·ªõn qu√°!".</li>
                            <li>N·∫øu ƒëo√°n ƒë√∫ng, th√¥ng b√°o "Ch√∫c m·ª´ng! B·∫°n ƒë√£ ƒëo√°n ƒë√∫ng s·ªë b√≠ m·∫≠t l√† [s·ªë b√≠ m·∫≠t] sau [s·ªë
                                l·∫ßn ƒëo√°n] l·∫ßn th·ª≠." v√† k·∫øt th√∫c tr√≤ ch∆°i.</li>
                        </ul>
                    </li>
                    <li>ƒê·∫øm s·ªë l·∫ßn ng∆∞·ªùi d√πng ƒë√£ ƒëo√°n.</li>
                </ol>
                <p class="mt-4 text-sm text-gray-500">G·ª£i √Ω: S·ª≠ d·ª•ng v√≤ng l·∫∑p <code>while</code>, c√¢u l·ªánh ƒëi·ªÅu ki·ªán
                    <code>if-elif-else</code> v√† m·ªôt bi·∫øn ƒë·∫øm s·ªë l·∫ßn ƒëo√°n.
                </p>
            </div>
        </div>

        <div id="slide-24" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-purple-600 mb-4">7. B√†i T·∫≠p Th·ª±c H√†nh (N√¢ng Cao)</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i 2: Qu·∫£n l√Ω ƒëi·ªÉm sinh vi√™n ƒë∆°n gi·∫£n</h4>
                <p class="mb-2 text-lg"><strong>Y√™u c·∫ßu:</strong></p>
                <ol class="list-decimal list-inside mb-2 pl-4 text-gray-700">
                    <li>T·∫°o m·ªôt list r·ªóng <code>danh_sach_diem</code>.</li>
                    <li>S·ª≠ d·ª•ng v√≤ng l·∫∑p <code>while</code>, cho ph√©p ng∆∞·ªùi d√πng nh·∫≠p ƒëi·ªÉm c·ªßa sinh vi√™n (t·ª´ 0 ƒë·∫øn 10).
                        N·∫øu ng∆∞·ªùi d√πng nh·∫≠p m·ªôt s·ªë √¢m, vi·ªác nh·∫≠p k·∫øt th√∫c. M·ªói ƒëi·ªÉm h·ª£p l·ªá ƒë∆∞·ª£c th√™m v√†o
                        <code>danh_sach_diem</code>.
                    </li>
                    <li>Sau khi nh·∫≠p xong, in ra:
                        <ul>
                            <li>S·ªë l∆∞·ª£ng sinh vi√™n ƒë√£ nh·∫≠p ƒëi·ªÉm (ƒë·ªô d√†i c·ªßa list).</li>
                            <li>T·∫•t c·∫£ c√°c ƒëi·ªÉm ƒë√£ nh·∫≠p.</li>
                            <li>ƒêi·ªÉm cao nh·∫•t v√† ƒëi·ªÉm th·∫•p nh·∫•t.</li>
                            <li>ƒêi·ªÉm trung b√¨nh c·ªßa c·∫£ l·ªõp.</li>
                        </ul>
                    </li>
                </ol>
                <p class="mt-4 text-sm text-gray-500">G·ª£i √Ω: S·ª≠ d·ª•ng c√°c h√†m/ph∆∞∆°ng th·ª©c nh∆∞ <code>len()</code>,
                    <code>max()</code>, <code>min()</code>, <code>sum()</code> (ho·∫∑c t·ª± t√≠nh t·ªïng b·∫±ng v√≤ng l·∫∑p) cho
                    list.
                </p>
            </div>
        </div>

        <div id="slide-25" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-fuchsia-600 mb-4">8. B√†i T·∫≠p V·ªÅ Nh√†</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i 1: In c√°c s·ªë chia h·∫øt cho 3 v√† 5</h4>
                <p class="mb-2 text-lg"><strong>Y√™u c·∫ßu:</strong> Vi·∫øt ch∆∞∆°ng tr√¨nh s·ª≠ d·ª•ng v√≤ng l·∫∑p <code>while</code>
                    (ho·∫∑c <code>for</code>) ƒë·ªÉ in ra t·∫•t c·∫£ c√°c s·ªë t·ª´ 1 ƒë·∫øn 100 m√† chia h·∫øt cho c·∫£ 3 v√† 5.</p>
            </div>
        </div>

        <div id="slide-26" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-fuchsia-600 mb-4">8. B√†i T·∫≠p V·ªÅ Nh√† (Ti·∫øp theo)</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i 2: ƒê·∫£o ng∆∞·ª£c m·ªôt List</h4>
                <p class="mb-2 text-lg"><strong>Y√™u c·∫ßu:</strong></p>
                <ol class="list-decimal list-inside mb-2 pl-4 text-gray-700">
                    <li>Cho m·ªôt list c√°c s·ªë b·∫•t k·ª≥ (v√≠ d·ª•: <code>my_numbers = [1, 3, 5, 7, 9, 2, 4, 6, 8]</code>).</li>
                    <li>Vi·∫øt ch∆∞∆°ng tr√¨nh ƒë·ªÉ t·∫°o ra m·ªôt list m·ªõi ch·ª©a c√°c ph·∫ßn t·ª≠ c·ªßa list ban ƒë·∫ßu nh∆∞ng theo th·ª© t·ª±
                        ng∆∞·ª£c l·∫°i M√Ä KH√îNG s·ª≠ d·ª•ng ph∆∞∆°ng th·ª©c <code>reverse()</code> ho·∫∑c slicing <code>[::-1]</code>.
                    </li>
                    <li>In ra list ƒë√£ ƒë·∫£o ng∆∞·ª£c.</li>
                </ol>
                <p class="mt-4 text-sm text-gray-500">G·ª£i √Ω: Duy·ªát list ban ƒë·∫ßu t·ª´ cu·ªëi v·ªÅ ƒë·∫ßu (ho·∫∑c t·ª´ ƒë·∫ßu v·ªÅ cu·ªëi v√†
                    th√™m v√†o ƒë·∫ßu list m·ªõi).</p>
            </div>
        </div>

        <div id="slide-27" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-fuchsia-700 mb-4">8. B√†i T·∫≠p V·ªÅ Nh√† (Th·ª≠ Th√°ch)</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i 3: L·ªçc c√°c chu·ªói c√≥ ƒë·ªô d√†i l·ªõn h∆°n N</h4>
                <p class="mb-2 text-lg"><strong>Y√™u c·∫ßu:</strong></p>
                <ol class="list-decimal list-inside mb-2 pl-4 text-gray-700">
                    <li>Cho m·ªôt list c√°c chu·ªói (v√≠ d·ª•:
                        <code>word_list = ["python", "is", "awesome", "and", "fun", "to", "learn"]</code>).
                    </li>
                    <li>Y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p v√†o m·ªôt s·ªë nguy√™n N.</li>
                    <li>T·∫°o m·ªôt list m·ªõi ch·ªâ ch·ª©a c√°c chu·ªói t·ª´ <code>word_list</code> c√≥ ƒë·ªô d√†i l·ªõn h∆°n N.</li>
                    <li>In ra list m·ªõi ƒë√≥.</li>
                </ol>
            </div>
        </div>

        <div id="slide-28" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">9. T√≥m T·∫Øt Bu·ªïi H·ªçc</h3>
                <p class="mb-4 text-lg">Trong bu·ªïi h·ªçc h√¥m nay, ch√∫ng ta ƒë√£ ƒëi s√¢u v√†o:</p>
                <ul class="list-disc list-inside mb-4 pl-4 text-gray-700 space-y-2">
                    <li><strong>V√≤ng l·∫∑p <code>while</code>:</strong> C√∫ ph√°p, c√°ch ho·∫°t ƒë·ªông, <code>else</code>,
                        <code>break</code>, <code>continue</code>.
                    </li>
                    <li><strong>V√≤ng l·∫∑p l·ªìng nhau:</strong> K·∫øt h·ª£p c√°c v√≤ng l·∫∑p ƒë·ªÉ gi·∫£i quy·∫øt b√†i to√°n ph·ª©c t·∫°p.</li>
                    <li><strong>C√¢u l·ªánh ƒëi·ªÅu ki·ªán v√† v√≤ng l·∫∑p n√¢ng cao:</strong> C√°c v√≠ d·ª• th·ª±c t·∫ø.</li>
                    <li><strong>Danh s√°ch (List):</strong>
                        <ul class="list-circle list-inside ml-6">
                            <li>Khai b√°o, ƒë·∫∑c ƒëi·ªÉm, truy c·∫≠p ph·∫ßn t·ª≠ (indexing, slicing).</li>
                            <li>Thao t√°c: th√™m, xem, x√≥a, c·∫≠p nh·∫≠t ph·∫ßn t·ª≠.</li>
                            <li>C√°c ph∆∞∆°ng th·ª©c h·ªØu √≠ch: <code>sort()</code>, <code>reverse()</code>,
                                <code>count()</code>, <code>index()</code>, v√† h√†m <code>len()</code>.
                            </li>
                            <li>List l·ªìng nhau.</li>
                        </ul>
                    </li>
                </ul>
                <p class="text-lg mb-6">V√≤ng l·∫∑p v√† List l√† nh·ªØng c√¥ng c·ª• c·ª±c k·ª≥ quan tr·ªçng v√† ƒë∆∞·ª£c s·ª≠ d·ª•ng th∆∞·ªùng xuy√™n
                    trong l·∫≠p tr√¨nh Python. H√£y luy·ªán t·∫≠p th·∫≠t nhi·ªÅu nh√©!</p>
                <div class="flex justify-center mt-8">
                    <img src="https://placehold.co/350x200/A855F7/FFFFFF?text=Summary+%26+Practice"
                        alt="[H√¨nh ·∫£nh T√≥m t·∫Øt v√† Luy·ªán t·∫≠p]" class="shadow-md">
                </div>
            </div>
        </div>

        <div id="slide-29" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-700 mb-6 text-center">10. H·ªèi & ƒê√°p</h3>
                <div class="flex justify-center mb-8">
                    <img src="https://placehold.co/300x200/7E22CE/FFFFFF?text=Q%26A" alt="[H√¨nh ·∫£nh H·ªèi v√† ƒê√°p]"
                        class="shadow-md">
                </div>
                <h4 class="text-2xl font-semibold text-center text-gray-700">C√°c b·∫°n c√≥ c√¢u h·ªèi n√†o v·ªÅ v√≤ng l·∫∑p
                    <code>while</code>, List, hay b·∫•t k·ª≥ n·ªôi dung n√†o kh√°c kh√¥ng?
                </h4>
                <p class="text-center text-gray-600 mt-4">ƒê·ª´ng ng·∫ßn ng·∫°i ƒë·∫∑t c√¢u h·ªèi nh√©!</p>
            </div>
        </div>

    </div>

    <script>
        const slides = Array.from(document.querySelectorAll('.slide'));
        const prevButton = document.getElementById('prevSlide');
        const nextButton = document.getElementById('nextSlide');
        const currentSlideNumDisplay = document.getElementById('currentSlideNum');
        const totalSlidesNumDisplay = document.getElementById('totalSlidesNum');
        const navbar = document.getElementById('navbar');

        let currentSlide = 0;
        if (slides.length > 0) {
            totalSlidesNumDisplay.textContent = slides.length;
        }

        function showSlide(index) {
            slides.forEach((slide, i) => {
                if (i === index) {
                    slide.style.display = 'flex';
                    setTimeout(() => {
                        slide.classList.add('active');
                    }, 10);
                } else {
                    slide.classList.remove('active');
                    setTimeout(() => {
                        if (!slide.classList.contains('active')) {
                            slide.style.display = 'none';
                        }
                    }, 400);
                }
            });
            currentSlideNumDisplay.textContent = index + 1;
            updateNavButtons();

            if (navbar) {
                window.scrollTo({ top: navbar.offsetHeight, behavior: 'smooth' });
            } else {
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }
        }

        function updateNavButtons() {
            if (!prevButton || !nextButton) return;
            prevButton.disabled = currentSlide === 0;
            nextButton.disabled = currentSlide === slides.length - 1;
        }

        if (prevButton && nextButton) {
            prevButton.addEventListener('click', () => {
                if (currentSlide > 0) {
                    slides[currentSlide].classList.remove('active');
                    setTimeout(() => {
                        if (!slides[currentSlide].classList.contains('active')) {
                            slides[currentSlide].style.display = 'none';
                        }
                    }, 400);
                    currentSlide--;
                    showSlide(currentSlide);
                }
            });

            nextButton.addEventListener('click', () => {
                if (currentSlide < slides.length - 1) {
                    slides[currentSlide].classList.remove('active');
                    setTimeout(() => {
                        if (!slides[currentSlide].classList.contains('active')) {
                            slides[currentSlide].style.display = 'none';
                        }
                    }, 400);
                    currentSlide++;
                    showSlide(currentSlide);
                }
            });
        }

        function copyCode(buttonElement) {
            const codeBlockContainer = buttonElement.closest('.code-block-container');
            const codeElement = codeBlockContainer.querySelector('.code-block code');
            if (codeElement) {
                const codeToCopy = codeElement.innerText || codeElement.textContent;

                // Create a temporary textarea element to copy the text
                const textarea = document.createElement('textarea');
                textarea.value = codeToCopy;
                document.body.appendChild(textarea);
                textarea.select();
                try {
                    document.execCommand('copy');
                    // Visual feedback
                    const originalText = buttonElement.innerHTML;
                    buttonElement.innerHTML = '<i class="fas fa-check"></i> ƒê√£ ch√©p!';
                    buttonElement.classList.add('copied');
                    setTimeout(() => {
                        buttonElement.innerHTML = originalText;
                        buttonElement.classList.remove('copied');
                    }, 1500);
                } catch (err) {
                    console.error('Kh√¥ng th·ªÉ sao ch√©p code: ', err);
                    // Fallback or error message if needed
                    alert('L·ªói sao ch√©p code. Vui l√≤ng th·ª≠ l·∫°i ho·∫∑c sao ch√©p th·ªß c√¥ng.');
                }
                document.body.removeChild(textarea);
            }
        }

        if (slides.length > 0) {
            showSlide(currentSlide);
        } else {
            if (currentSlideNumDisplay) currentSlideNumDisplay.textContent = 0;
            updateNavButtons();
        }
    </script>

</body>

</html>

/* ===== Python Basic/lesson4.html ===== */
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bu·ªïi H·ªçc: List, V√≤ng L·∫∑p & X·ª≠ L√Ω File</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            scroll-behavior: smooth;
            background-color: #f3f4f6;
        }

        #navbar {
            position: sticky;
            top: 0;
            z-index: 50;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .slide-container {
            padding-top: 1rem;
        }

        .slide {
            background-color: white;
            padding: 2rem;
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            margin-bottom: 2rem;
            display: none;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
            min-height: calc(100vh - 120px);
            display: flex;
            flex-direction: column;
        }

        .slide.active {
            display: flex;
            opacity: 1;
            transform: translateY(0);
        }

        .slide-content-wrapper {
            flex-grow: 1;
        }

        .code-block-container {
            position: relative;
            background-color: #1e293b;
            border-radius: 0.5rem;
            margin-top: 1rem;
            margin-bottom: 1rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .code-block-header {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            padding: 0.5rem 0.75rem;
            background-color: #334155;
            border-top-left-radius: 0.5rem;
            border-top-right-radius: 0.5rem;
        }

        .copy-button {
            background-color: #4a5568;
            color: #e2e8f0;
            border: none;
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            cursor: pointer;
            font-size: 0.875rem;
            transition: background-color 0.2s;
        }

        .copy-button:hover {
            background-color: #718096;
        }

        .copy-button .fa-copy {
            margin-right: 0.375rem;
        }

        .copy-button .fa-check {
            margin-right: 0.375rem;
            color: #48bb78;
            /* Green check */
        }

        .code-block {
            background-color: #1e293b;
            color: #e2e8f0;
            padding: 1rem;
            border-bottom-left-radius: 0.5rem;
            border-bottom-right-radius: 0.5rem;
            font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
            white-space: pre-wrap;
            word-wrap: break-word;
            font-size: 0.875em;
            line-height: 1.6;
            overflow-x: auto;
        }

        .copy-button:focus {
            outline: none;
            box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.5);
        }

        .code-block .comment {
            color: #6ee7b7;
        }

        /* Emerald 300 */
        .code-block .keyword {
            color: #93c5fd;
        }

        /* Blue 300 */
        .code-block .string {
            color: #fde047;
        }

        /* Yellow 300 */
        .code-block .number {
            color: #fdbb74;
        }

        /* Orange 300 */
        .code-block .function {
            color: #d8b4fe;
        }

        /* Purple 300 */
        .code-block .operator {
            color: #fda4af;
        }

        /* Rose 300 */
        .code-block .boolean {
            color: #fdbb74;
        }

        /* Orange 300 */
        .code-block .method {
            color: #67e8f9;
        }

        /* Cyan 300 */
        .code-block .class-name {
            color: #a5b4fc;
        }

        /* Indigo 300 */

        ::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #4a5568;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb {
            background: #718096;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #a0aec0;
        }

        img {
            max-width: 100%;
            height: auto;
            border-radius: 0.375rem;
        }

        .text-theme-700 {
            color: #1d4ed8;
        }

        .text-theme-600 {
            color: #2563eb;
        }

        .bg-theme-500 {
            background-color: #3b82f6;
        }

        .hover\:bg-theme-700:hover {
            background-color: #1d4ed8;
        }

        .text-blue-500 {
            color: #3b82f6;
        }

        .text-sky-600 {
            color: #0284c7;
        }
    </style>
</head>

<body class="text-gray-800">

    <nav id="navbar" class="p-4">
        <div class="container mx-auto flex flex-wrap justify-between items-center">
            <h1 class="text-xl font-bold text-theme-600">Python: List, V√≤ng L·∫∑p & X·ª≠ L√Ω File</h1>
            <div class="flex items-center mt-2 sm:mt-0">
                <button id="prevSlide"
                    class="bg-theme-500 hover:bg-theme-700 text-white font-bold py-2 px-4 rounded-lg shadow mr-2 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                        stroke="currentColor" class="w-5 h-5 inline-block mr-1">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
                    </svg>
                    Tr∆∞·ªõc
                </button>
                <button id="nextSlide"
                    class="bg-theme-500 hover:bg-theme-700 text-white font-bold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    Sau
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                        stroke="currentColor" class="w-5 h-5 inline-block ml-1">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
                    </svg>
                </button>
            </div>
            <div class="text-sm text-gray-600 mt-2 sm:mt-0 ml-0 sm:ml-4">
                Slide <span id="currentSlideNum">1</span> / <span id="totalSlidesNum"></span>
            </div>
        </div>
    </nav>

    <div class="container mx-auto p-4 slide-container">
        <!-- Slide 1: Title -->
        <div id="slide-1" class="slide">
            <div class="slide-content-wrapper justify-center flex flex-col">
                <h2 class="text-4xl font-bold text-center text-theme-700 mb-6">Bu·ªïi H·ªçc: List, V√≤ng L·∫∑p & X·ª≠ L√Ω File
                </h2>
                <p class="text-2xl text-center text-gray-600 mb-12">N·ªÅn t·∫£ng x·ª≠ l√Ω d·ªØ li·ªáu trong Python</p>
                <div class="flex justify-center my-8">
                    <img src="https://placehold.co/400x250/3B82F6/FFFFFF?text=Python+%26+Data"
                        alt="[H√¨nh ·∫£nh Python v√† D·ªØ li·ªáu]" class="shadow-md">
                </div>
                <p class="text-center mt-8 text-lg text-gray-700">B·∫Øt ƒë·∫ßu h√†nh tr√¨nh x·ª≠ l√Ω d·ªØ li·ªáu m·ªôt c√°ch chuy√™n
                    nghi·ªáp!</p>
            </div>
        </div>

        <!-- Slide 2: Lesson Objectives -->
        <div id="slide-2" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-6">M·ª•c Ti√™u Bu·ªïi H·ªçc</h3>
                <p class="mb-6 text-lg">K·∫øt th√∫c bu·ªïi h·ªçc h√¥m nay, b·∫°n s·∫Ω c√≥ kh·∫£ nƒÉng:</p>
                <ul class="space-y-4">
                    <li class="flex items-start">
                        <i class="fas fa-check-circle text-green-500 mt-1 mr-3"></i>
                        <span class="text-lg text-gray-800">Hi·ªÉu r√µ v√† s·ª≠ d·ª•ng th√†nh th·∫°o <strong>List</strong> - m·ªôt
                            trong nh·ªØng c·∫•u tr√∫c d·ªØ li·ªáu quan tr·ªçng nh·∫•t c·ªßa Python.</span>
                    </li>
                    <li class="flex items-start">
                        <i class="fas fa-check-circle text-green-500 mt-1 mr-3"></i>
                        <span class="text-lg text-gray-800">K·∫øt h·ª£p <strong>List</strong> v·ªõi <strong>v√≤ng l·∫∑p</strong>
                            v√† <strong>c√¢u l·ªánh ƒëi·ªÅu ki·ªán</strong> ƒë·ªÉ gi·∫£i quy·∫øt c√°c b√†i to√°n th·ª±c t·∫ø.</span>
                    </li>
                    <li class="flex items-start">
                        <i class="fas fa-check-circle text-green-500 mt-1 mr-3"></i>
                        <span class="text-lg text-gray-800">Th·ª±c hi·ªán c√°c thao t√°c <strong>ƒë·ªçc d·ªØ li·ªáu t·ª´ file vƒÉn b·∫£n
                                (.txt)</strong> ƒë·ªÉ ch∆∞∆°ng tr√¨nh c√≥ th·ªÉ x·ª≠ l√Ω d·ªØ li·ªáu t·ª´ b√™n ngo√†i.</span>
                    </li>
                    <li class="flex items-start">
                        <i class="fas fa-check-circle text-green-500 mt-1 mr-3"></i>
                        <span class="text-lg text-gray-800">√Åp d·ª•ng ki·∫øn th·ª©c t·ªïng h·ª£p ƒë·ªÉ x√¢y d·ª±ng c√°c ch∆∞∆°ng tr√¨nh nh·ªè,
                            ho√†n ch·ªânh.</span>
                    </li>
                </ul>
                <div class="flex justify-center mt-10">
                    <img src="https://placehold.co/400x200/60A5FA/FFFFFF?text=M·ª•c+Ti√™u"
                        alt="[H√¨nh ·∫£nh M·ª•c ti√™u b√†i h·ªçc]" class="shadow-md">
                </div>
            </div>
        </div>

        <!-- Slide 3: Introduction to List -->
        <div id="slide-3" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">1. Gi·ªõi Thi·ªáu v·ªÅ List</h3>
                <p class="mb-4 text-lg"><strong>List</strong> (danh s√°ch) l√† m·ªôt c·∫•u tr√∫c d·ªØ li·ªáu d√πng ƒë·ªÉ l∆∞u tr·ªØ m·ªôt
                    t·∫≠p h·ª£p nhi·ªÅu m·ª•c (item) trong m·ªôt bi·∫øn duy nh·∫•t.</p>
                <p class="mb-2 font-medium">ƒê·∫∑c ƒëi·ªÉm ch√≠nh c·ªßa List:</p>
                <ul class="list-disc list-inside mb-4 pl-4 text-gray-700 space-y-2">
                    <li><strong>C√≥ th·ª© t·ª± (Ordered):</strong> C√°c m·ª•c c√≥ m·ªôt th·ª© t·ª± x√°c ƒë·ªãnh v√† kh√¥ng thay ƒë·ªïi.</li>
                    <li><strong>C√≥ th·ªÉ thay ƒë·ªïi (Mutable/Changeable):</strong> Ch√∫ng ta c√≥ th·ªÉ th√™m, s·ª≠a, x√≥a c√°c m·ª•c
                        trong list sau khi n√≥ ƒë√£ ƒë∆∞·ª£c t·∫°o.</li>
                    <li><strong>Cho ph√©p c√°c gi√° tr·ªã tr√πng l·∫∑p (Allow Duplicates):</strong> M·ªôt list c√≥ th·ªÉ ch·ª©a c√°c m·ª•c
                        c√≥ c√πng gi√° tr·ªã.</li>
                    <li><strong>Ch·ª©a nhi·ªÅu ki·ªÉu d·ªØ li·ªáu:</strong> C√°c m·ª•c trong list c√≥ th·ªÉ thu·ªôc nhi·ªÅu ki·ªÉu d·ªØ li·ªáu
                        kh√°c nhau (s·ªë, chu·ªói, boolean...).</li>
                </ul>
                <p class="mb-2 font-medium">C√°ch khai b√°o List:</p>
                <p class="mb-4 text-lg">S·ª≠ d·ª•ng c·∫∑p ngo·∫∑c vu√¥ng <code>[]</code>, c√°c ph·∫ßn t·ª≠ c√°ch nhau b·ªüi d·∫•u ph·∫©y.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="comment"># M·ªôt list r·ªóng</span>
<span class="variable">danh_sach_rong</span> <span class="operator">=</span> []

<span class="comment"># M·ªôt list ch·ª©a c√°c chu·ªói (t√™n tr√°i c√¢y)</span>
<span class="variable">trai_cay</span> <span class="operator">=</span> [<span class="string">"T√°o"</span>, <span class="string">"Chu·ªëi"</span>, <span class="string">"Cam"</span>]

<span class="comment"># M·ªôt list ch·ª©a c√°c s·ªë</span>
<span class="variable">diem_so</span> <span class="operator">=</span> [<span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">10</span>]

<span class="comment"># M·ªôt list ch·ª©a nhi·ªÅu ki·ªÉu d·ªØ li·ªáu kh√°c nhau</span>
<span class="variable">thong_tin</span> <span class="operator">=</span> [<span class="string">"Nguy·ªÖn VƒÉn A"</span>, <span class="number">25</span>, <span class="boolean">True</span>]

<span class="function">print</span>(<span class="variable">trai_cay</span>)
<span class="function">print</span>(<span class="variable">thong_tin</span>)</code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 4: List Indexing -->
        <div id="slide-4" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">1.1. Truy C·∫≠p Ph·∫ßn T·ª≠ (Indexing)</h3>
                <p class="mb-4 text-lg">M·ªói ph·∫ßn t·ª≠ trong list c√≥ m·ªôt v·ªã tr√≠ ƒë∆∞·ª£c g·ªçi l√† <strong>index</strong> (ch·ªâ
                    s·ªë). Index trong Python b·∫Øt ƒë·∫ßu t·ª´ <strong>0</strong>.</p>

                <div class="flex justify-center mb-6">
                    <img src="https://placehold.co/600x150/93C5FD/1E293B?text=trai_cay+%3D+%5B%22T√°o%22%2C+%22Chu·ªëi%22%2C+%22Cam%22%5D%0AIndex%3A++++++0++++++++1++++++++2"
                        alt="[H√¨nh ·∫£nh minh h·ªça index c·ªßa list]" class="shadow-md">
                </div>

                <p class="mb-2 font-medium"><strong>Ch·ªâ s·ªë d∆∞∆°ng (Positive Indexing):</strong></p>
                <p class="mb-2 text-lg">B·∫Øt ƒë·∫ßu t·ª´ 0 t·ª´ tr√°i sang ph·∫£i.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre
                        class="code-block"><code><span class="variable">trai_cay</span> <span class="operator">=</span> [<span class="string">"T√°o"</span>, <span class="string">"Chu·ªëi"</span>, <span class="string">"Cam"</span>]
<span class="function">print</span>(<span class="variable">trai_cay</span>[<span class="number">0</span>])  <span class="comment"># Output: T√°o</span>
<span class="function">print</span>(<span class="variable">trai_cay</span>[<span class="number">1</span>])  <span class="comment"># Output: Chu·ªëi</span></code></pre>
                </div>

                <p class="mt-4 mb-2 font-medium"><strong>Ch·ªâ s·ªë √¢m (Negative Indexing):</strong></p>
                <p class="mb-2 text-lg">B·∫Øt ƒë·∫ßu t·ª´ -1 t·ª´ ph·∫£i sang tr√°i. <code>-1</code> l√† ph·∫ßn t·ª≠ cu·ªëi c√πng.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre
                        class="code-block"><code><span class="variable">trai_cay</span> <span class="operator">=</span> [<span class="string">"T√°o"</span>, <span class="string">"Chu·ªëi"</span>, <span class="string">"Cam"</span>]
<span class="function">print</span>(<span class="variable">trai_cay</span>[<span class="operator">-</span><span class="number">1</span>]) <span class="comment"># Output: Cam</span>
<span class="function">print</span>(<span class="variable">trai_cay</span>[<span class="operator">-</span><span class="number">2</span>]) <span class="comment"># Output: Chu·ªëi</span></code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 5: Basic List Operations 1 -->
        <div id="slide-5" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">1.2. C√°c Thao T√°c C∆° B·∫£n v·ªõi List (Ph·∫ßn 1)</h3>

                <p class="mb-2 font-medium"><strong>1. Th√™m ph·∫ßn t·ª≠ v√†o cu·ªëi list: <code>append()</code></strong></p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre
                        class="code-block"><code><span class="variable">trai_cay</span> <span class="operator">=</span> [<span class="string">"T√°o"</span>, <span class="string">"Chu·ªëi"</span>]
<span class="variable">trai_cay</span>.<span class="method">append</span>(<span class="string">"Cam"</span>)
<span class="function">print</span>(<span class="variable">trai_cay</span>) <span class="comment"># Output: ['T√°o', 'Chu·ªëi', 'Cam']</span></code></pre>
                </div>

                <p class="mt-4 mb-2 font-medium"><strong>2. Ch√®n ph·∫ßn t·ª≠ v√†o v·ªã tr√≠ c·ª• th·ªÉ:
                        <code>insert()</code></strong></p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre
                        class="code-block"><code><span class="variable">trai_cay</span> <span class="operator">=</span> [<span class="string">"T√°o"</span>, <span class="string">"Cam"</span>]
<span class="comment"># Ch√®n "Chu·ªëi" v√†o v·ªã tr√≠ index 1</span>
<span class="variable">trai_cay</span>.<span class="method">insert</span>(<span class="number">1</span>, <span class="string">"Chu·ªëi"</span>)
<span class="function">print</span>(<span class="variable">trai_cay</span>) <span class="comment"># Output: ['T√°o', 'Chu·ªëi', 'Cam']</span></code></pre>
                </div>

                <p class="mt-4 mb-2 font-medium"><strong>3. L·∫•y ƒë·ªô d√†i c·ªßa list: <code>len()</code></strong></p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre
                        class="code-block"><code><span class="variable">trai_cay</span> <span class="operator">=</span> [<span class="string">"T√°o"</span>, <span class="string">"Chu·ªëi"</span>, <span class="string">"Cam"</span>]
<span class="function">print</span>(<span class="function">len</span>(<span class="variable">trai_cay</span>)) <span class="comment"># Output: 3</span></code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 6: Basic List Operations 2 -->
        <div id="slide-6" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">1.3. C√°c Thao T√°c C∆° B·∫£n v·ªõi List (Ph·∫ßn 2)</h3>

                <p class="mb-2 font-medium"><strong>4. X√≥a ph·∫ßn t·ª≠ theo gi√° tr·ªã: <code>remove()</code></strong></p>
                <p class="mb-2 text-lg">X√≥a ph·∫ßn t·ª≠ ƒë·∫ßu ti√™n trong list c√≥ gi√° tr·ªã ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre
                        class="code-block"><code><span class="variable">trai_cay</span> <span class="operator">=</span> [<span class="string">"T√°o"</span>, <span class="string">"Chu·ªëi"</span>, <span class="string">"Cam"</span>]
<span class="variable">trai_cay</span>.<span class="method">remove</span>(<span class="string">"Chu·ªëi"</span>)
<span class="function">print</span>(<span class="variable">trai_cay</span>) <span class="comment"># Output: ['T√°o', 'Cam']</span></code></pre>
                </div>

                <p class="mt-4 mb-2 font-medium"><strong>5. X√≥a ph·∫ßn t·ª≠ theo index: <code>pop()</code> v√†
                        <code>del</code></strong></p>
                <p class="mb-2 text-lg"><code>pop(index)</code> x√≥a v√† tr·∫£ v·ªÅ ph·∫ßn t·ª≠ t·∫°i index. N·∫øu kh√¥ng c√≥ index, n√≥
                    x√≥a ph·∫ßn t·ª≠ cu·ªëi c√πng.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre
                        class="code-block"><code><span class="variable">trai_cay</span> <span class="operator">=</span> [<span class="string">"T√°o"</span>, <span class="string">"Chu·ªëi"</span>, <span class="string">"Cam"</span>]
<span class="variable">phan_tu_xoa</span> <span class="operator">=</span> <span class="variable">trai_cay</span>.<span class="method">pop</span>(<span class="number">1</span>)
<span class="function">print</span>(<span class="string">f"Ph·∫ßn t·ª≠ b·ªã x√≥a: {phan_tu_xoa}"</span>) <span class="comment"># Output: Ph·∫ßn t·ª≠ b·ªã x√≥a: Chu·ªëi</span>
<span class="function">print</span>(<span class="variable">trai_cay</span>) <span class="comment"># Output: ['T√°o', 'Cam']</span>

<span class="keyword">del</span> <span class="variable">trai_cay</span>[<span class="number">0</span>]
<span class="function">print</span>(<span class="variable">trai_cay</span>) <span class="comment"># Output: ['Cam']</span></code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 7: Lists and Loops -->
        <div id="slide-7" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">2. K·∫øt H·ª£p List v√† V√≤ng L·∫∑p</h3>
                <p class="mb-4 text-lg">V√≤ng l·∫∑p <code>for</code> l√† c√¥ng c·ª• c·ª±c k·ª≥ m·∫°nh m·∫Ω ƒë·ªÉ x·ª≠ l√Ω t·ª´ng ph·∫ßn t·ª≠ trong
                    m·ªôt list.</p>

                <p class="mb-2 font-medium"><strong>V√≠ d·ª•: In t·∫•t c·∫£ c√°c ph·∫ßn t·ª≠ trong list</strong></p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="variable">mon_hoc</span> <span class="operator">=</span> [<span class="string">"To√°n"</span>, <span class="string">"L√Ω"</span>, <span class="string">"H√≥a"</span>, <span class="string">"Sinh"</span>]
<span class="keyword">for</span> <span class="variable">mon</span> <span class="keyword">in</span> <span class="variable">mon_hoc</span><span class="operator">:</span>
    <span class="function">print</span>(<span class="string">f"H√¥m nay h·ªçc m√¥n: {mon}"</span>)
</code></pre>
                </div>

                <p class="mt-4 mb-2 font-medium"><strong>V√≠ d·ª•: T√≠nh t·ªïng c√°c s·ªë trong m·ªôt list</strong></p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="variable">diem_so</span> <span class="operator">=</span> [<span class="number">8</span>, <span class="number">9</span>, <span class="number">7.5</span>, <span class="number">10</span>]
<span class="variable">tong_diem</span> <span class="operator">=</span> <span class="number">0</span>
<span class="keyword">for</span> <span class="variable">diem</span> <span class="keyword">in</span> <span class="variable">diem_so</span><span class="operator">:</span>
    <span class="variable">tong_diem</span> <span class="operator">+=</span> <span class="variable">diem</span>  <span class="comment"># T∆∞∆°ng ƒë∆∞∆°ng: tong_diem = tong_diem + diem</span>
<span class="function">print</span>(<span class="string">f"T·ªïng ƒëi·ªÉm l√†: {tong_diem}"</span>) <span class="comment"># Output: T·ªïng ƒëi·ªÉm l√†: 34.5</span>
</code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 8: Algorithm 1 -->
        <div id="slide-8" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">2.1. Gi·∫£i Thu·∫≠t: L·ªçc D·ªØ Li·ªáu</h3>
                <p class="mb-4 text-lg">ƒê√¢y l√† m·ªôt b√†i to√°n r·∫•t ph·ªï bi·∫øn: t·ª´ m·ªôt list ban ƒë·∫ßu, t·∫°o ra m·ªôt list m·ªõi ch·ªâ
                    ch·ª©a c√°c ph·∫ßn t·ª≠ th·ªèa m√£n m·ªôt ƒëi·ªÅu ki·ªán n√†o ƒë√≥.</p>

                <p class="mb-2 font-medium"><strong>B√†i to√°n:</strong> Cho m·ªôt list c√°c s·ªë, h√£y t·∫°o m·ªôt list m·ªõi ch·ªâ
                    ch·ª©a c√°c s·ªë ch·∫µn.</p>
                <p class="mb-2 text-lg"><strong>Logic:</strong></p>
                <ol class="list-decimal list-inside mb-4 pl-4 text-gray-700">
                    <li>T·∫°o m·ªôt list r·ªóng ƒë·ªÉ ch·ª©a k·∫øt qu·∫£ (v√≠ d·ª•: `so_chan`).</li>
                    <li>Duy·ªát qua t·ª´ng s·ªë trong list ban ƒë·∫ßu.</li>
                    <li>V·ªõi m·ªói s·ªë, d√πng c√¢u l·ªánh `if` ƒë·ªÉ ki·ªÉm tra xem n√≥ c√≥ chia h·∫øt cho 2 kh√¥ng (`so % 2 == 0`).</li>
                    <li>N·∫øu ƒë√∫ng, th√™m s·ªë ƒë√≥ v√†o list `so_chan` b·∫±ng `append()`.</li>
                </ol>

                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="variable">danh_sach_so</span> <span class="operator">=</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]
<span class="variable">so_chan</span> <span class="operator">=</span> []

<span class="keyword">for</span> <span class="variable">so</span> <span class="keyword">in</span> <span class="variable">danh_sach_so</span><span class="operator">:</span>
    <span class="comment"># Ki·ªÉm tra n·∫øu s·ªë chia h·∫øt cho 2</span>
    <span class="keyword">if</span> <span class="variable">so</span> <span class="operator">%</span> <span class="number">2</span> <span class="operator">==</span> <span class="number">0</span><span class="operator">:</span>
        <span class="variable">so_chan</span>.<span class="method">append</span>(<span class="variable">so</span>)

<span class="function">print</span>(<span class="string">"Danh s√°ch ban ƒë·∫ßu:"</span>, <span class="variable">danh_sach_so</span>)
<span class="function">print</span>(<span class="string">"Danh s√°ch s·ªë ch·∫µn:"</span>, <span class="variable">so_chan</span>)
<span class="comment"># Output: Danh s√°ch s·ªë ch·∫µn: [2, 4, 6, 8, 10]</span></code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 9: Introduction to File Handling -->
        <div id="slide-9" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">3. L√†m Vi·ªác v·ªõi File</h3>
                <p class="mb-4 text-lg">Trong th·ª±c t·∫ø, d·ªØ li·ªáu th∆∞·ªùng ƒë∆∞·ª£c l∆∞u tr·ªØ trong c√°c file. Ch∆∞∆°ng tr√¨nh Python
                    c·∫ßn c√≥ kh·∫£ nƒÉng ƒë·ªçc d·ªØ li·ªáu t·ª´ c√°c file n√†y ƒë·ªÉ x·ª≠ l√Ω.</p>
                <p class="mb-2 font-medium"><strong>T·∫°i sao c·∫ßn x·ª≠ l√Ω file?</strong></p>
                <ul class="list-disc list-inside mb-4 pl-4 text-gray-700 space-y-2">
                    <li><strong>L∆∞u tr·ªØ d·ªØ li·ªáu l√¢u d√†i:</strong> D·ªØ li·ªáu trong bi·∫øn s·∫Ω m·∫•t khi ch∆∞∆°ng tr√¨nh k·∫øt th√∫c.
                        File gi√∫p l∆∞u tr·ªØ d·ªØ li·ªáu vƒ©nh vi·ªÖn.</li>
                    <li><strong>D·ªØ li·ªáu ƒë·∫ßu v√†o:</strong> Cung c·∫•p l∆∞·ª£ng l·ªõn d·ªØ li·ªáu cho ch∆∞∆°ng tr√¨nh m√† kh√¥ng c·∫ßn ng∆∞·ªùi
                        d√πng nh·∫≠p tay.</li>
                    <li><strong>K·∫øt qu·∫£ ƒë·∫ßu ra:</strong> L∆∞u k·∫øt qu·∫£ x·ª≠ l√Ω c·ªßa ch∆∞∆°ng tr√¨nh ra file.</li>
                </ul>

                <p class="mt-4 mb-2 font-medium"><strong>M·ªü v√† ƒê·ªçc File v·ªõi <code>with open()</code></strong></p>
                <p class="mb-2 text-lg">C√∫ ph√°p <code>with open(...)</code> l√† c√°ch l√†m vi·ªác v·ªõi file an to√†n v√† ƒë∆∞·ª£c
                    khuy√™n d√πng nh·∫•t. N√≥ s·∫Ω t·ª± ƒë·ªông ƒë√≥ng file sau khi kh·ªëi l·ªánh b√™n trong th·ª±c hi·ªán xong, k·ªÉ c·∫£ khi c√≥
                    l·ªói x·∫£y ra.</p>

                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="comment"># 'data.txt' l√† t√™n file</span>
<span class="comment"># 'r' l√† ch·∫ø ƒë·ªô (mode) ƒë·ªçc (read)</span>
<span class="comment"># encoding='utf-8' l√† ƒë·ªÉ ƒë·ªçc ƒë√∫ng ti·∫øng Vi·ªát</span>

<span class="keyword">with</span> <span class="function">open</span>(<span class="string">'data.txt'</span>, <span class="string">'r'</span>, <span class="variable">encoding</span><span class="operator">=</span><span class="string">'utf-8'</span>) <span class="keyword">as</span> <span class="variable">f</span><span class="operator">:</span>
    <span class="comment"># C√°c thao t√°c v·ªõi file (f) ƒë∆∞·ª£c th·ª±c hi·ªán ·ªü ƒë√¢y</span>
    <span class="variable">noi_dung</span> <span class="operator">=</span> <span class="variable">f</span>.<span class="method">read</span>() <span class="comment"># ƒê·ªçc to√†n b·ªô n·ªôi dung file</span>
    <span class="function">print</span>(<span class="variable">noi_dung</span>)

<span class="comment"># File s·∫Ω t·ª± ƒë·ªông ƒë∆∞·ª£c ƒë√≥ng ·ªü ƒë√¢y</span></code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 10: Reading a .txt File -->
        <div id="slide-10" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">3.1. ƒê·ªçc D·ªØ Li·ªáu t·ª´ File .txt</h3>
                <p class="mb-4 text-lg">M·ªôt c√°ch ph·ªï bi·∫øn ƒë·ªÉ ƒë·ªçc file l√† duy·ªát qua t·ª´ng d√≤ng c·ªßa file b·∫±ng v√≤ng l·∫∑p
                    `for`.</p>
                <p class="mb-2 font-medium">Gi·∫£ s·ª≠ ch√∫ng ta c√≥ file <code>shopping_list.txt</code> v·ªõi n·ªôi dung:</p>
                <div class="code-block-container">
                    <div class="code-block-header"><span class="text-gray-400 px-3 text-sm">shopping_list.txt</span>
                    </div>
                    <pre class="code-block"><code>S·ªØa
Tr·ª©ng
B√°nh m√¨
T√°o
</code></pre>
                </div>

                <p class="mt-4 mb-2 font-medium">Code Python ƒë·ªÉ ƒë·ªçc v√† in ra t·ª´ng d√≤ng:</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="keyword">with</span> <span class="function">open</span>(<span class="string">'shopping_list.txt'</span>, <span class="string">'r'</span>, <span class="variable">encoding</span><span class="operator">=</span><span class="string">'utf-8'</span>) <span class="keyword">as</span> <span class="variable">f</span><span class="operator">:</span>
    <span class="keyword">for</span> <span class="variable">line</span> <span class="keyword">in</span> <span class="variable">f</span><span class="operator">:</span>
        <span class="function">print</span>(<span class="variable">line</span>)</code></pre>
                </div>
                <p class="mt-4 mb-2 font-medium">V·∫•n ƒë·ªÅ: K√Ω t·ª± xu·ªëng d√≤ng <code>\n</code></p>
                <p class="mb-2 text-lg">Khi ƒë·ªçc file theo d√≤ng, m·ªói d√≤ng s·∫Ω ch·ª©a c·∫£ k√Ω t·ª± xu·ªëng d√≤ng ·ªü cu·ªëi. Ta c·∫ßn lo·∫°i
                    b·ªè n√≥ b·∫±ng ph∆∞∆°ng th·ª©c <strong><code>.strip()</code></strong>.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="keyword">with</span> <span class="function">open</span>(<span class="string">'shopping_list.txt'</span>, <span class="string">'r'</span>, <span class="variable">encoding</span><span class="operator">=</span><span class="string">'utf-8'</span>) <span class="keyword">as</span> <span class="variable">f</span><span class="operator">:</span>
    <span class="keyword">for</span> <span class="variable">line</span> <span class="keyword">in</span> <span class="variable">f</span><span class="operator">:</span>
        <span class="variable">clean_line</span> <span class="operator">=</span> <span class="variable">line</span>.<span class="method">strip</span>() <span class="comment"># Lo·∫°i b·ªè kho·∫£ng tr·∫Øng v√† k√Ω t·ª± xu·ªëng d√≤ng ·ªü hai ƒë·∫ßu</span>
        <span class="function">print</span>(<span class="variable">clean_line</span>)</code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 11: Processing Data from a File -->
        <div id="slide-11" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">3.2. X·ª≠ L√Ω D·ªØ Li·ªáu S·ªë v√† Chu·ªói t·ª´ File</h3>
                <p class="mb-4 text-lg">Th∆∞·ªùng th√¨ m·ªôt d√≤ng trong file s·∫Ω ch·ª©a nhi·ªÅu m·∫©u th√¥ng tin. Ch√∫ng ta d√πng ph∆∞∆°ng
                    th·ª©c <strong><code>.split()</code></strong> ƒë·ªÉ t√°ch chu·ªói th√†nh m·ªôt list c√°c chu·ªói con.</p>
                <p class="mb-2 font-medium">Gi·∫£ s·ª≠ c√≥ file <code>scores.txt</code>:</p>
                <div class="code-block-container">
                    <div class="code-block-header"><span class="text-gray-400 px-3 text-sm">scores.txt</span></div>
                    <pre class="code-block"><code>An 9
Binh 8
Cuong 10
</code></pre>
                </div>
                <p class="mt-4 mb-2 font-medium"><strong>B√†i to√°n:</strong> ƒê·ªçc file v√† t√≠nh ƒëi·ªÉm trung b√¨nh.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="variable">diem_list</span> <span class="operator">=</span> []
<span class="keyword">with</span> <span class="function">open</span>(<span class="string">'scores.txt'</span>, <span class="string">'r'</span>, <span class="variable">encoding</span><span class="operator">=</span><span class="string">'utf-8'</span>) <span class="keyword">as</span> <span class="variable">f</span><span class="operator">:</span>
    <span class="keyword">for</span> <span class="variable">line</span> <span class="keyword">in</span> <span class="variable">f</span><span class="operator">:</span>
        <span class="variable">parts</span> <span class="operator">=</span> <span class="variable">line</span>.<span class="method">strip</span>().<span class="method">split</span>() <span class="comment"># T√°ch d√≤ng th√†nh list, v√≠ d·ª•: ['An', '9']</span>
        <span class="variable">ten</span> <span class="operator">=</span> <span class="variable">parts</span>[<span class="number">0</span>]
        <span class="variable">diem_str</span> <span class="operator">=</span> <span class="variable">parts</span>[<span class="number">1</span>]
        
        <span class="comment"># Chuy·ªÉn ƒë·ªïi ƒëi·ªÉm t·ª´ chu·ªói sang s·ªë</span>
        <span class="variable">diem_so</span> <span class="operator">=</span> <span class="function">int</span>(<span class="variable">diem_str</span>)
        <span class="variable">diem_list</span>.<span class="method">append</span>(<span class="variable">diem_so</span>)

<span class="comment"># T√≠nh ƒëi·ªÉm trung b√¨nh</span>
<span class="keyword">if</span> <span class="function">len</span>(<span class="variable">diem_list</span>) <span class="operator">></span> <span class="number">0</span><span class="operator">:</span>
    <span class="variable">trung_binh</span> <span class="operator">=</span> <span class="function">sum</span>(<span class="variable">diem_list</span>) <span class="operator">/</span> <span class="function">len</span>(<span class="variable">diem_list</span>)
    <span class="function">print</span>(<span class="string">f"ƒêi·ªÉm trung b√¨nh c·ªßa l·ªõp l√†: {trung_binh}"</span>)
<span class="keyword">else</span><span class="operator">:</span>
    <span class="function">print</span>(<span class="string">"Kh√¥ng c√≥ d·ªØ li·ªáu ƒëi·ªÉm."</span>)
</code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 12: Practice Exercise 1 -->
        <div id="slide-12" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-sky-600 mb-4">4. B√†i T·∫≠p Luy·ªán T·∫≠p</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i 1: T√¨m S·ªë L·ªõn Nh·∫•t</h4>
                <p class="mb-4 text-lg"><strong>Y√™u c·∫ßu:</strong> Vi·∫øt m·ªôt ch∆∞∆°ng tr√¨nh t√¨m ph·∫ßn t·ª≠ l·ªõn nh·∫•t trong m·ªôt
                    list s·ªë cho tr∆∞·ªõc m√† <strong>kh√¥ng</strong> d√πng h√†m <code>max()</code> c√≥ s·∫µn.</p>
                <p class="mb-2 text-lg"><strong>G·ª£i √Ω:</strong></p>
                <ol class="list-decimal list-inside mb-4 pl-4 text-gray-700">
                    <li>Gi·∫£ s·ª≠ ph·∫ßn t·ª≠ ƒë·∫ßu ti√™n l√† l·ªõn nh·∫•t. L∆∞u n√≥ v√†o m·ªôt bi·∫øn, v√≠ d·ª• `max_val`.</li>
                    <li>Duy·ªát qua c√°c ph·∫ßn t·ª≠ c√≤n l·∫°i c·ªßa list (t·ª´ ph·∫ßn t·ª≠ th·ª© hai).</li>
                    <li>So s√°nh m·ªói ph·∫ßn t·ª≠ v·ªõi `max_val`.</li>
                    <li>N·∫øu t√¨m th·∫•y ph·∫ßn t·ª≠ n√†o l·ªõn h∆°n `max_val`, c·∫≠p nh·∫≠t `max_val` b·∫±ng gi√° tr·ªã c·ªßa ph·∫ßn t·ª≠ ƒë√≥.</li>
                    <li>Sau khi v√≤ng l·∫∑p k·∫øt th√∫c, `max_val` s·∫Ω l√† gi√° tr·ªã l·ªõn nh·∫•t.</li>
                </ol>

                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre
                        class="code-block"><code><span class="variable">numbers</span> <span class="operator">=</span> [<span class="number">12</span>, <span class="number">45</span>, <span class="number">6</span>, <span class="number">78</span>, <span class="number">34</span>, <span class="number">99</span>, <span class="number">52</span>]
<span class="variable">max_val</span> <span class="operator">=</span> <span class="variable">numbers</span>[<span class="number">0</span>]

<span class="comment"># Code c·ªßa b·∫°n ·ªü ƒë√¢y...</span>


<span class="function">print</span>(<span class="string">f"S·ªë l·ªõn nh·∫•t trong danh s√°ch l√†: {max_val}"</span>)</code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 13: Practice Exercise 2 -->
        <div id="slide-13" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-sky-600 mb-4">4. B√†i T·∫≠p Luy·ªán T·∫≠p</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i 2: ƒê·∫øm T·ª´ D√†i</h4>
                <p class="mb-4 text-lg"><strong>Y√™u c·∫ßu:</strong> ƒê·ªçc file <code>words.txt</code>. ƒê·∫øm xem c√≥ bao nhi√™u
                    t·ª´ c√≥ ƒë·ªô d√†i l·ªõn h∆°n 5 k√Ω t·ª±.</p>
                <p class="mb-2 font-medium">File <code>words.txt</code> m·∫´u:</p>
                <div class="code-block-container">
                    <div class="code-block-header"><span class="text-gray-400 px-3 text-sm">words.txt</span></div>
                    <pre class="code-block"><code>Python
laptrinh
ngonngu
code
chuongtrinh
hoc
</code></pre>
                </div>
                <p class="mb-2 text-lg"><strong>G·ª£i √Ω:</strong></p>
                <ol class="list-decimal list-inside mb-4 pl-4 text-gray-700">
                    <li>T·∫°o m·ªôt bi·∫øn ƒë·∫øm, v√≠ d·ª• `count = 0`.</li>
                    <li>M·ªü file v√† duy·ªát qua t·ª´ng d√≤ng.</li>
                    <li>V·ªõi m·ªói d√≤ng, h√£y nh·ªõ d√πng `.strip()` ƒë·ªÉ x√≥a k√Ω t·ª± xu·ªëng d√≤ng.</li>
                    <li>D√πng h√†m `len()` ƒë·ªÉ l·∫•y ƒë·ªô d√†i c·ªßa t·ª´.</li>
                    <li>N·∫øu ƒë·ªô d√†i l·ªõn h∆°n 5, tƒÉng bi·∫øn ƒë·∫øm l√™n 1.</li>
                </ol>
            </div>
        </div>

        <!-- Slide 14: Challenge Exercise -->
        <div id="slide-14" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-sky-600 mb-4">4. B√†i T·∫≠p Th·ª≠ Th√°ch</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i 3: T√¨m Th·ªß Khoa</h4>
                <p class="mb-4 text-lg"><strong>Y√™u c·∫ßu:</strong> ƒê·ªçc file <code>students.txt</code>. M·ªói d√≤ng ch·ª©a
                    th√¥ng tin c·ªßa m·ªôt sinh vi√™n theo ƒë·ªãnh d·∫°ng `T√™n,ƒêi·ªÉm1,ƒêi·ªÉm2` (ngƒÉn c√°ch b·ªüi d·∫•u ph·∫©y). H√£y t√¨m ra
                    sinh vi√™n c√≥ ƒëi·ªÉm trung b√¨nh cao nh·∫•t.</p>
                <p class="mb-2 font-medium">File <code>students.txt</code> m·∫´u:</p>
                <div class="code-block-container">
                    <div class="code-block-header"><span class="text-gray-400 px-3 text-sm">students.txt</span></div>
                    <pre class="code-block"><code>An,8,9
Binh,10,7
Chi,9,9.5
Dung,7,8
</code></pre>
                </div>
                <p class="mb-2 text-lg"><strong>G·ª£i √Ω:</strong></p>
                <ol class="list-decimal list-inside mb-4 pl-4 text-gray-700">
                    <li>B·∫°n c·∫ßn hai bi·∫øn ƒë·ªÉ l∆∞u l·∫°i th√¥ng tin c·ªßa ng∆∞·ªùi gi·ªèi nh·∫•t hi·ªán t·∫°i: `ten_thu_khoa` v√†
                        `diem_cao_nhat`. Kh·ªüi t·∫°o `diem_cao_nhat = -1`.</li>
                    <li>Duy·ªát qua t·ª´ng d√≤ng trong file.</li>
                    <li>V·ªõi m·ªói d√≤ng, d√πng `.strip()` v√† `.split(',')` ƒë·ªÉ t√°ch th√¥ng tin.</li>
                    <li>Chuy·ªÉn ƒë·ªïi c√°c ƒëi·ªÉm t·ª´ chu·ªói sang s·ªë (float).</li>
                    <li>T√≠nh ƒëi·ªÉm trung b√¨nh c·ªßa sinh vi√™n hi·ªán t·∫°i.</li>
                    <li>So s√°nh ƒëi·ªÉm trung b√¨nh n√†y v·ªõi `diem_cao_nhat`. N·∫øu l·ªõn h∆°n, c·∫≠p nh·∫≠t `diem_cao_nhat` v√†
                        `ten_thu_khoa`.</li>
                </ol>
            </div>
        </div>

        <!-- Slide 15: Summary -->
        <div id="slide-15" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">5. T√≥m T·∫Øt Bu·ªïi H·ªçc</h3>
                <p class="mb-4 text-lg">Trong bu·ªïi h·ªçc h√¥m nay, ch√∫ng ta ƒë√£ c√πng nhau t√¨m hi·ªÉu nh·ªØng ki·∫øn th·ª©c n·ªÅn t·∫£ng
                    quan tr·ªçng:</p>
                <ul class="list-disc list-inside mb-6 pl-4 text-gray-700 space-y-3">
                    <li><strong>List:</strong> C√°ch t·∫°o, truy c·∫≠p ph·∫ßn t·ª≠ qua index, v√† c√°c ph∆∞∆°ng th·ª©c c∆° b·∫£n nh∆∞
                        <code>append()</code>, <code>remove()</code>, <code>pop()</code>.
                    </li>
                    <li><strong>List v√† V√≤ng l·∫∑p:</strong> S·ª≠ d·ª•ng v√≤ng l·∫∑p <code>for</code> ƒë·ªÉ duy·ªát v√† x·ª≠ l√Ω t·ª´ng ph·∫ßn
                        t·ª≠ trong list, k·∫øt h·ª£p v·ªõi c√¢u l·ªánh <code>if/else</code> ƒë·ªÉ gi·∫£i c√°c b√†i to√°n l·ªçc, t√¨m ki·∫øm.
                    </li>
                    <li><strong>X·ª≠ l√Ω file c∆° b·∫£n:</strong> D√πng c√∫ ph√°p <code>with open()</code> ƒë·ªÉ ƒë·ªçc file m·ªôt c√°ch
                        an to√†n.</li>
                    <li><strong>X·ª≠ l√Ω chu·ªói t·ª´ file:</strong> S·ª≠ d·ª•ng <code>.strip()</code> ƒë·ªÉ l√†m s·∫°ch v√†
                        <code>.split()</code> ƒë·ªÉ t√°ch d·ªØ li·ªáu, sau ƒë√≥ chuy·ªÉn ƒë·ªïi ki·ªÉu d·ªØ li·ªáu (v·ªõi <code>int()</code>,
                        <code>float()</code>) ƒë·ªÉ t√≠nh to√°n.
                    </li>
                </ul>
                <p class="text-lg mb-6">N·∫Øm v·ªØng nh·ªØng kh√°i ni·ªám n√†y l√† b∆∞·ªõc ƒë·ªám v·ªØng ch·∫Øc ƒë·ªÉ b·∫°n x√¢y d·ª±ng c√°c ·ª©ng d·ª•ng
                    ph·ª©c t·∫°p v√† x·ª≠ l√Ω d·ªØ li·ªáu th·ª±c t·∫ø hi·ªáu qu·∫£ h∆°n.</p>
                <div class="flex justify-center mt-8">
                    <img src="https://placehold.co/350x200/2563EB/FFFFFF?text=Next+Steps"
                        alt="[H√¨nh ·∫£nh T√≥m t·∫Øt v√† c√°c b∆∞·ªõc ti·∫øp theo]" class="shadow-md">
                </div>
            </div>
        </div>

        <!-- Slide 16: Q&A -->
        <div id="slide-16" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center">
                <h3 class="text-4xl font-semibold text-theme-700 mb-6 text-center">6. H·ªèi & ƒê√°p</h3>
                <div class="flex justify-center mb-8">
                    <img src="https://placehold.co/300x200/1E40AF/FFFFFF?text=Q%26A" alt="[H√¨nh ·∫£nh H·ªèi v√† ƒê√°p]"
                        class="shadow-md">
                </div>
                <h4 class="text-2xl font-semibold text-center text-gray-700">C√°c b·∫°n c√≥ c√¢u h·ªèi n√†o kh√¥ng?</h4>
                <p class="text-center text-gray-600 mt-4 text-lg">ƒê·ª´ng ng·∫ßn ng·∫°i ƒë·∫∑t c√¢u h·ªèi nh√©!</p>
            </div>
        </div>

    </div>

    <script>
        const slides = Array.from(document.querySelectorAll('.slide'));
        const prevButton = document.getElementById('prevSlide');
        const nextButton = document.getElementById('nextSlide');
        const currentSlideNumDisplay = document.getElementById('currentSlideNum');
        const totalSlidesNumDisplay = document.getElementById('totalSlidesNum');
        const navbar = document.getElementById('navbar');

        let currentSlide = 0;
        if (slides.length > 0) {
            totalSlidesNumDisplay.textContent = slides.length;
        }

        function showSlide(index) {
            slides.forEach((slide, i) => {
                if (i === index) {
                    slide.style.display = 'flex';
                    setTimeout(() => {
                        slide.classList.add('active');
                    }, 10);
                } else {
                    slide.classList.remove('active');
                    setTimeout(() => {
                        if (!slide.classList.contains('active')) {
                            slide.style.display = 'none';
                        }
                    }, 400);
                }
            });
            currentSlideNumDisplay.textContent = index + 1;
            updateNavButtons();

            // Scroll to the top of the slide container after navigation
            const slideContainer = document.querySelector('.slide-container');
            if (slideContainer) {
                window.scrollTo({ top: slideContainer.offsetTop - navbar.offsetHeight, behavior: 'smooth' });
            }
        }

        function updateNavButtons() {
            if (!prevButton || !nextButton) return;
            prevButton.disabled = currentSlide === 0;
            nextButton.disabled = currentSlide === slides.length - 1;
        }

        if (prevButton && nextButton) {
            prevButton.addEventListener('click', () => {
                if (currentSlide > 0) {
                    currentSlide--;
                    showSlide(currentSlide);
                }
            });

            nextButton.addEventListener('click', () => {
                if (currentSlide < slides.length - 1) {
                    currentSlide++;
                    showSlide(currentSlide);
                }
            });
        }

        function copyCode(buttonElement) {
            const codeBlockContainer = buttonElement.closest('.code-block-container');
            const codeElement = codeBlockContainer.querySelector('.code-block code');
            if (codeElement) {
                const codeToCopy = codeElement.innerText || codeElement.textContent;
                const textarea = document.createElement('textarea');
                textarea.value = codeToCopy;
                document.body.appendChild(textarea);
                textarea.select();
                try {
                    document.execCommand('copy');
                    const originalText = buttonElement.innerHTML;
                    buttonElement.innerHTML = '<i class="fas fa-check"></i> ƒê√£ ch√©p!';
                    setTimeout(() => {
                        buttonElement.innerHTML = originalText;
                    }, 1500);
                } catch (err) {
                    console.error('Kh√¥ng th·ªÉ sao ch√©p code: ', err);
                }
                document.body.removeChild(textarea);
            }
        }

        if (slides.length > 0) {
            showSlide(currentSlide);
        } else {
            if (currentSlideNumDisplay) currentSlideNumDisplay.textContent = '0';
            if (totalSlidesNumDisplay) totalSlidesNumDisplay.textContent = '0';
            updateNavButtons();
        }
    </script>

</body>

</html>

/* ===== Python Basic/lesson5.html ===== */
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bu·ªïi H·ªçc: Dictionary, List & JSON</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            scroll-behavior: smooth;
            background-color: #f3f4f6;
            /* Light gray background for the body */
        }

        #navbar {
            position: sticky;
            top: 0;
            z-index: 50;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .slide-container {
            padding-top: 1rem;
        }

        .slide {
            background-color: white;
            padding: 2rem;
            /* p-8 */
            border-radius: 0.5rem;
            /* rounded-lg */
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            /* shadow-lg */
            margin-bottom: 2rem;
            display: none;
            /* Hidden by default */
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
            min-height: calc(100vh - 120px);
            /* Ensure slide takes up significant viewport height */
            display: flex;
            flex-direction: column;
        }

        .slide.active {
            display: flex;
            opacity: 1;
            transform: translateY(0);
        }

        .slide-content-wrapper {
            flex-grow: 1;
        }

        .code-block-container {
            position: relative;
            background-color: #1e293b;
            /* Darker background for code container */
            border-radius: 0.5rem;
            /* rounded-lg */
            margin-top: 1rem;
            margin-bottom: 1rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .code-block-header {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            padding: 0.5rem 0.75rem;
            background-color: #334155;
            /* Header background */
            border-top-left-radius: 0.5rem;
            border-top-right-radius: 0.5rem;
        }

        .copy-button {
            background-color: #4a5568;
            /* Button background */
            color: #e2e8f0;
            /* Light text */
            border: none;
            padding: 0.375rem 0.75rem;
            /* py-1.5 px-3 */
            border-radius: 0.375rem;
            /* rounded-md */
            cursor: pointer;
            font-size: 0.875rem;
            /* text-sm */
            transition: background-color 0.2s;
        }

        .copy-button:hover {
            background-color: #718096;
            /* Lighter on hover */
        }

        .copy-button .fa-copy {
            margin-right: 0.375rem;
        }

        .copy-button .fa-check {
            margin-right: 0.375rem;
            color: #48bb78;
            /* Green check */
        }


        .code-block {
            background-color: #1e293b;
            color: #e2e8f0;
            padding: 1rem;
            border-bottom-left-radius: 0.5rem;
            border-bottom-right-radius: 0.5rem;
            font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
            white-space: pre-wrap;
            word-wrap: break-word;
            font-size: 0.875em;
            line-height: 1.6;
            overflow-x: auto;
        }

        .copy-button:focus {
            outline: none;
            box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.5);
        }

        .code-block .comment {
            color: #6ee7b7;
        }

        /* Emerald 300 */
        .code-block .keyword {
            color: #93c5fd;
        }

        /* Blue 300 */
        .code-block .string {
            color: #fde047;
        }

        /* Yellow 300 */
        .code-block .number {
            color: #fdbb74;
        }

        /* Orange 300 */
        .code-block .function {
            color: #d8b4fe;
        }

        /* Purple 300 */
        .code-block .operator {
            color: #fda4af;
        }

        /* Rose 300 */
        .code-block .boolean {
            color: #fdbb74;
        }

        /* Orange 300 */
        .code-block .method {
            color: #67e8f9;
        }

        /* Cyan 300 */
        .code-block .class-name {
            color: #a5b4fc;
        }

        /* Indigo 300 */


        ::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #4a5568;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb {
            background: #718096;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #a0aec0;
        }

        img {
            max-width: 100%;
            height: auto;
            border-radius: 0.375rem;
        }

        /* Customizations for Buoi 4 - Blue theme */
        .text-theme-700 {
            color: #1d4ed8;
        }

        .text-theme-600 {
            color: #2563eb;
        }

        .bg-theme-500 {
            background-color: #3b82f6;
        }

        .hover\:bg-theme-700:hover {
            background-color: #1d4ed8;
        }

        .text-blue-500 {
            color: #3b82f6;
        }

        .text-blue-600 {
            color: #2563eb;
        }

        .text-sky-600 {
            color: #0284c7;
        }

        .text-sky-700 {
            color: #0369a1;
        }
    </style>
</head>

<body class="text-gray-800">

    <nav id="navbar" class="p-4">
        <div class="container mx-auto flex flex-wrap justify-between items-center">
            <h1 class="text-xl font-bold text-theme-600">Python Bu·ªïi H·ªçc: Dictionary, List & JSON</h1>
            <div class="flex items-center mt-2 sm:mt-0">
                <button id="prevSlide"
                    class="bg-theme-500 hover:bg-theme-700 text-white font-bold py-2 px-4 rounded-lg shadow mr-2 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                        stroke="currentColor" class="w-5 h-5 inline-block mr-1">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
                    </svg>
                    Tr∆∞·ªõc
                </button>
                <button id="nextSlide"
                    class="bg-theme-500 hover:bg-theme-700 text-white font-bold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    Sau
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                        stroke="currentColor" class="w-5 h-5 inline-block ml-1">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
                    </svg>
                </button>
            </div>
            <div class="text-sm text-gray-600 mt-2 sm:mt-0 ml-0 sm:ml-4">
                Slide <span id="currentSlideNum">1</span> / <span id="totalSlidesNum"></span>
            </div>
        </div>
    </nav>

    <div class="container mx-auto p-4 slide-container">
        <!-- Slide 1: Title -->
        <div id="slide-1" class="slide">
            <div class="slide-content-wrapper">
                <h2 class="text-4xl font-bold text-center text-theme-700 mb-6">Bu·ªïi H·ªçc: Dictionary, List & JSON</h2>
                <p class="text-2xl text-center text-gray-600 mb-12">K·∫øt h·ª£p c·∫•u tr√∫c d·ªØ li·ªáu v√† l√†m vi·ªác v·ªõi file JSON
                    ƒë·ªÉ x√¢y d·ª±ng ·ª©ng d·ª•ng</p>
                <div class="flex justify-center my-8">
                    <img src="https://placehold.co/400x250/3B82F6/FFFFFF?text=Dict+%26+JSON"
                        alt="[H√¨nh ·∫£nh Dictionary v√† JSON]" class="shadow-md">
                </div>
                <p class="text-center mt-8 text-lg text-gray-700">H√£y c√πng x√¢y d·ª±ng nh·ªØng ·ª©ng d·ª•ng th·ª±c t·∫ø ƒë·∫ßu ti√™n!</p>
            </div>
        </div>

        <!-- Slide 2: Review List and Intro Dictionary -->
        <div id="slide-2" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">1. √în L·∫°i & Gi·ªõi Thi·ªáu</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">√în t·∫≠p: Danh s√°ch (List)</h4>
                <p class="mb-4 text-lg">·ªû Bu·ªïi H·ªçc tr∆∞·ªõc, ch√∫ng ta ƒë√£ h·ªçc v·ªÅ <strong>List</strong>:</p>
                <ul class="list-disc list-inside mb-6 pl-4 text-gray-700 space-y-2">
                    <li>L√† m·ªôt t·∫≠p h·ª£p c√°c ph·∫ßn t·ª≠ <strong>c√≥ th·ª© t·ª±</strong>.</li>
                    <li><strong>C√≥ th·ªÉ thay ƒë·ªïi</strong> (th√™m, s·ª≠a, x√≥a).</li>
                    <li>Truy c·∫≠p b·∫±ng <strong>ch·ªâ s·ªë (index)</strong> b·∫Øt ƒë·∫ßu t·ª´ 0.</li>
                    <li>V√≠ d·ª•: <code>sinh_vien = ["An", "B√¨nh", "C√∫c"]</code></li>
                </ul>

                <h4 class="text-2xl font-medium text-gray-700 mb-3">Ch·ªß ƒë·ªÅ m·ªõi: T·ª´ ƒëi·ªÉn (Dictionary)</h4>
                <p class="mb-4 text-lg">N·∫øu List d√πng s·ªë th·ª© t·ª± (index) ƒë·ªÉ qu·∫£n l√Ω d·ªØ li·ªáu, th√¨
                    <strong>Dictionary</strong> d√πng m·ªôt th·ª© kh√°c g·ªçi l√† <strong>"key" (kh√≥a)</strong>.
                </p>
                <p class="mb-4 text-lg">T∆∞·ªüng t∆∞·ª£ng m·ªôt cu·ªën t·ª´ ƒëi·ªÉn th·∫≠t: b·∫°n tra c·ª©u m·ªôt "t·ª´" (key) ƒë·ªÉ l·∫•y "nghƒ©a" c·ªßa
                    n√≥ (value).</p>
                <p class="text-lg font-medium">Dictionary trong Python c≈©ng v·∫≠y, n√≥ l∆∞u d·ªØ li·ªáu theo c·∫∑p
                    <strong><code>key: value</code></strong>.
                </p>
                <div class="flex justify-center mt-6">
                    <img src="https://placehold.co/400x200/60A5FA/FFFFFF?text=List+vs+Dictionary"
                        alt="[H√¨nh ·∫£nh so s√°nh List v√† Dictionary]" class="shadow-md">
                </div>
            </div>
        </div>

        <!-- Slide 3: Dictionary Intro -->
        <div id="slide-3" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">2. T√¨m Hi·ªÉu v·ªÅ Dictionary</h3>
                <p class="mb-4 text-lg">Dictionary l√† m·ªôt c·∫•u tr√∫c d·ªØ li·ªáu d√πng ƒë·ªÉ l∆∞u c√°c gi√° tr·ªã theo c·∫∑p
                    <code>key: value</code>.
                </p>
                <p class="mb-2 font-medium">ƒê·∫∑c ƒëi·ªÉm c·ªßa Dictionary:</p>
                <ul class="list-disc list-inside mb-4 pl-4 text-gray-700 space-y-2">
                    <li><strong>Kh√¥ng c√≥ th·ª© t·ª± (Unordered):</strong> C√°c c·∫∑p key-value kh√¥ng ƒë∆∞·ª£c s·∫Øp x·∫øp theo m·ªôt th·ª©
                        t·ª± c·ª• th·ªÉ (trong c√°c phi√™n b·∫£n Python c≈©). T·ª´ Python 3.7+, dictionary gi·ªØ nguy√™n th·ª© t·ª± ƒë∆∞·ª£c
                        ch√®n v√†o.</li>
                    <li><strong>C√≥ th·ªÉ thay ƒë·ªïi (Mutable):</strong> B·∫°n c√≥ th·ªÉ th√™m, s·ª≠a, x√≥a c√°c c·∫∑p key-value.</li>
                    <li><strong>Key l√† duy nh·∫•t (Unique Keys):</strong> Kh√¥ng th·ªÉ c√≥ hai key tr√πng nhau trong m·ªôt
                        dictionary. N·∫øu b·∫°n g√°n gi√° tr·ªã m·ªõi cho m·ªôt key ƒë√£ t·ªìn t·∫°i, gi√° tr·ªã c≈© s·∫Ω b·ªã ghi ƒë√®.</li>
                    <li><strong>Key ph·∫£i l√† b·∫•t bi·∫øn (Immutable):</strong> Key th∆∞·ªùng l√† chu·ªói (string), s·ªë (number),
                        ho·∫∑c tuple. B·∫°n kh√¥ng th·ªÉ d√πng list l√†m key.</li>
                </ul>
                <p class="mb-2 font-medium">C√°ch khai b√°o Dictionary:</p>
                <p class="mb-4 text-lg">S·ª≠ d·ª•ng d·∫•u ngo·∫∑c nh·ªçn <code>{}</code> v·ªõi c√°c c·∫∑p <code>key: value</code> c√°ch
                    nhau b·ªüi d·∫•u ph·∫©y.</p>
                <div class="code-block-container">
                    <div class="code-block-header">
                        <button class="copy-button" onclick="copyCode(this)"><i class="far fa-copy"></i> Sao
                            ch√©p</button>
                    </div>
                    <pre class="code-block"><code><span class="comment"># Dictionary r·ªóng</span>
<span class="variable">dict_rong</span> <span class="operator">=</span> {}

<span class="comment"># M·ªôt dictionary th√¥ng tin sinh vi√™n</span>
<span class="variable">sinh_vien</span> <span class="operator">=</span> {
    <span class="string">"ten"</span><span class="operator">:</span> <span class="string">"Nguy·ªÖn VƒÉn An"</span>,
    <span class="string">"ma_sv"</span><span class="operator">:</span> <span class="string">"SV001"</span>,
    <span class="string">"tuoi"</span><span class="operator">:</span> <span class="number">20</span>,
    <span class="string">"diem_trung_binh"</span><span class="operator">:</span> <span class="number">8.5</span>,
    <span class="string">"da_tot_nghiep"</span><span class="operator">:</span> <span class="boolean">False</span>
}

<span class="function">print</span>(<span class="variable">sinh_vien</span>)</code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 4: Thao t√°c c∆° b·∫£n v·ªõi Dictionary -->
        <div id="slide-4" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">2.1. Thao T√°c C∆° B·∫£n v·ªõi Dictionary</h3>

                <p class="mb-2 font-medium"><strong>1. Truy c·∫≠p gi√° tr·ªã (Accessing Values):</strong></p>
                <p class="mb-2 text-lg">D√πng key trong c·∫∑p ngo·∫∑c vu√¥ng <code>[]</code>.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre
                        class="code-block"><code><span class="variable">ten_sv</span> <span class="operator">=</span> <span class="variable">sinh_vien</span>[<span class="string">"ten"</span>]
<span class="function">print</span>(<span class="string">f"T√™n sinh vi√™n: {ten_sv}"</span>) <span class="comment"># Output: T√™n sinh vi√™n: Nguy·ªÖn VƒÉn An</span></code></pre>
                </div>

                <p class="mt-4 mb-2 font-medium"><strong>2. Th√™m ho·∫∑c c·∫≠p nh·∫≠t (Adding/Updating):</strong></p>
                <p class="mb-2 text-lg">G√°n gi√° tr·ªã cho m·ªôt key. N·∫øu key ch∆∞a c√≥, n√≥ s·∫Ω ƒë∆∞·ª£c th√™m v√†o. N·∫øu ƒë√£ c√≥, gi√°
                    tr·ªã s·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="comment"># C·∫≠p nh·∫≠t tu·ªïi</span>
<span class="variable">sinh_vien</span>[<span class="string">"tuoi"</span>] <span class="operator">=</span> <span class="number">21</span>
<span class="comment"># Th√™m qu√™ qu√°n</span>
<span class="variable">sinh_vien</span>[<span class="string">"que_quan"</span>] <span class="operator">=</span> <span class="string">"H√† N·ªôi"</span>

<span class="function">print</span>(<span class="variable">sinh_vien</span>)</code></pre>
                </div>

                <p class="mt-4 mb-2 font-medium"><strong>3. X√≥a m·ªôt c·∫∑p key-value (Deleting):</strong></p>
                <p class="mb-2 text-lg">D√πng t·ª´ kh√≥a <code>del</code>.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="keyword">del</span> <span class="variable">sinh_vien</span>[<span class="string">"da_tot_nghiep"</span>]
<span class="function">print</span>(<span class="variable">sinh_vien</span>)</code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 5: List of Dictionaries -->
        <div id="slide-5" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">3. S·ª©c M·∫°nh K·∫øt H·ª£p: List ch·ª©a Dictionary</h3>
                <p class="mb-4 text-lg">ƒê√¢y l√† m·ªôt trong nh·ªØng c·∫•u tr√∫c ph·ªï bi·∫øn v√† h·ªØu √≠ch nh·∫•t trong Python!</p>
                <p class="mb-4 text-lg">T∆∞·ªüng t∆∞·ª£ng b·∫°n c·∫ßn qu·∫£n l√Ω m·ªôt danh s√°ch l·ªõp. M·ªói sinh vi√™n c√≥ nhi·ªÅu th√¥ng tin
                    (t√™n, tu·ªïi, ƒëi·ªÉm...). Thay v√¨ t·∫°o nhi·ªÅu list ri√™ng l·∫ª, ch√∫ng ta c√≥ th·ªÉ t·∫°o m·ªôt <strong>list duy
                        nh·∫•t</strong>, trong ƒë√≥ m·ªói ph·∫ßn t·ª≠ l√† m·ªôt <strong>dictionary</strong> ch·ª©a th√¥ng tin c·ªßa m·ªôt
                    sinh vi√™n.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre
                        class="code-block"><code><span class="variable">danh_sach_lop</span> <span class="operator">=</span> [
    {
        <span class="string">"ten"</span><span class="operator">:</span> <span class="string">"Nguy·ªÖn VƒÉn An"</span>,
        <span class="string">"ma_sv"</span><span class="operator">:</span> <span class="string">"SV001"</span>,
        <span class="string">"diem"</span><span class="operator">:</span> <span class="number">8.5</span>
    },
    {
        <span class="string">"ten"</span><span class="operator">:</span> <span class="string">"Tr·∫ßn Th·ªã B√¨nh"</span>,
        <span class="string">"ma_sv"</span><span class="operator">:</span> <span class="string">"SV002"</span>,
        <span class="string">"diem"</span><span class="operator">:</span> <span class="number">9.0</span>
    },
    {
        <span class="string">"ten"</span><span class="operator">:</span> <span class="string">"L√™ VƒÉn C√∫c"</span>,
        <span class="string">"ma_sv"</span><span class="operator">:</span> <span class="string">"SV003"</span>,
        <span class="string">"diem"</span><span class="operator">:</span> <span class="number">7.8</span>
    }
]

<span class="comment"># In ra t√™n c·ªßa sinh vi√™n th·ª© hai (index 1)</span>
<span class="function">print</span>(<span class="variable">danh_sach_lop</span>[<span class="number">1</span>][<span class="string">'ten'</span>])  <span class="comment"># Output: Tr·∫ßn Th·ªã B√¨nh</span>

<span class="comment"># In ra ƒëi·ªÉm c·ªßa sinh vi√™n th·ª© ba (index 2)</span>
<span class="function">print</span>(<span class="variable">danh_sach_lop</span>[<span class="number">2</span>][<span class="string">'diem'</span>]) <span class="comment"># Output: 7.8</span></code></pre>
                </div>
                <p class="mt-4 text-lg">C·∫•u tr√∫c n√†y gi√∫p t·ªï ch·ª©c d·ªØ li·ªáu m·ªôt c√°ch r√µ r√†ng, logic v√† d·ªÖ qu·∫£n l√Ω.</p>
            </div>
        </div>

        <!-- Slide 6: CRUD - Adding -->
        <div id="slide-6" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">3.1. Thao T√°c D·ªØ Li·ªáu: Th√™m (Create)</h3>
                <p class="mb-4 text-lg">ƒê·ªÉ th√™m m·ªôt sinh vi√™n m·ªõi v√†o danh s√°ch l·ªõp, ch√∫ng ta ch·ªâ c·∫ßn t·∫°o m·ªôt dictionary
                    m·ªõi cho sinh vi√™n ƒë√≥ v√† d√πng ph∆∞∆°ng th·ª©c <code>append()</code> c·ªßa list.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="comment"># danh_sach_lop t·ª´ slide tr∆∞·ªõc...</span>

<span class="comment"># T·∫°o th√¥ng tin cho sinh vi√™n m·ªõi</span>
<span class="variable">sinh_vien_moi</span> <span class="operator">=</span> {
    <span class="string">"ten"</span><span class="operator">:</span> <span class="string">"Ph·∫°m Th·ªã Dung"</span>,
    <span class="string">"ma_sv"</span><span class="operator">:</span> <span class="string">"SV004"</span>,
    <span class="string">"diem"</span><span class="operator">:</span> <span class="number">8.2</span>
}

<span class="comment"># Th√™m sinh vi√™n m·ªõi v√†o danh s√°ch</span>
<span class="variable">danh_sach_lop</span>.<span class="method">append</span>(<span class="variable">sinh_vien_moi</span>)

<span class="comment"># In ra to√†n b·ªô danh s√°ch ƒë·ªÉ ki·ªÉm tra</span>
<span class="keyword">for</span> <span class="variable">sv</span> <span class="keyword">in</span> <span class="variable">danh_sach_lop</span><span class="operator">:</span>
    <span class="function">print</span>(<span class="variable">sv</span>)</code></pre>
                </div>
                <p class="mt-4 text-lg">B√¢y gi·ªù, <code>danh_sach_lop</code> ƒë√£ c√≥ 4 sinh vi√™n.</p>
            </div>
        </div>

        <!-- Slide 7: CRUD - Updating -->
        <div id="slide-7" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">3.2. Thao T√°c D·ªØ Li·ªáu: S·ª≠a (Update)</h3>
                <p class="mb-4 text-lg">ƒê·ªÉ s·ª≠a th√¥ng tin c·ªßa m·ªôt sinh vi√™n, ch√∫ng ta c·∫ßn:</p>
                <ol class="list-decimal list-inside mb-4 pl-4 text-gray-700">
                    <li>T√¨m ƒë√∫ng sinh vi√™n ƒë√≥ trong list (th∆∞·ªùng l√† duy·ªát qua list v√† ki·ªÉm tra m·ªôt gi√° tr·ªã ƒë·ªãnh danh duy
                        nh·∫•t nh∆∞ <code>ma_sv</code>).</li>
                    <li>Sau khi t√¨m th·∫•y dictionary c·ªßa sinh vi√™n ƒë√≥, ta truy c·∫≠p v√†o key c·∫ßn s·ª≠a v√† g√°n gi√° tr·ªã m·ªõi.
                    </li>
                </ol>
                <p class="mb-2 font-medium">V√≠ d·ª•: C·∫≠p nh·∫≠t ƒëi·ªÉm cho sinh vi√™n c√≥ m√£ 'SV001' th√†nh 8.8</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="comment"># danh_sach_lop t·ª´ slide tr∆∞·ªõc...</span>

<span class="keyword">for</span> <span class="variable">sinh_vien</span> <span class="keyword">in</span> <span class="variable">danh_sach_lop</span><span class="operator">:</span>
    <span class="comment"># T√¨m sinh vi√™n c√≥ m√£ SV001</span>
    <span class="keyword">if</span> <span class="variable">sinh_vien</span>[<span class="string">'ma_sv'</span>] <span class="operator">==</span> <span class="string">'SV001'</span><span class="operator">:</span>
        <span class="comment"># C·∫≠p nh·∫≠t ƒëi·ªÉm</span>
        <span class="variable">sinh_vien</span>[<span class="string">'diem'</span>] <span class="operator">=</span> <span class="number">8.8</span>
        <span class="keyword">break</span> <span class="comment"># D·ª´ng v√≤ng l·∫∑p sau khi c·∫≠p nh·∫≠t xong ƒë·ªÉ t·ªëi ∆∞u</span>

<span class="comment"># In ra ƒë·ªÉ ki·ªÉm tra</span>
<span class="function">print</span>(<span class="variable">danh_sach_lop</span>[<span class="number">0</span>])
<span class="comment"># Output: {'ten': 'Nguy·ªÖn VƒÉn An', 'ma_sv': 'SV001', 'diem': 8.8}</span></code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 8: CRUD - Deleting -->
        <div id="slide-8" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">3.3. Thao T√°c D·ªØ Li·ªáu: X√≥a (Delete)</h3>
                <p class="mb-4 text-lg">ƒê·ªÉ x√≥a m·ªôt sinh vi√™n, ch√∫ng ta c≈©ng c·∫ßn t√¨m ra sinh vi√™n ƒë√≥. Sau khi t√¨m th·∫•y,
                    ta c√≥ th·ªÉ x√≥a dictionary t∆∞∆°ng ·ª©ng kh·ªèi list.</p>
                <p class="mb-2 font-medium">V√≠ d·ª•: X√≥a sinh vi√™n c√≥ m√£ 'SV002'</p>
                <p class="mb-2 text-lg"><strong>C√°ch 1: D√πng <code>remove()</code></strong> (N·∫øu b·∫°n c√≥ ch√≠nh x√°c ƒë·ªëi
                    t∆∞·ª£ng dictionary c·∫ßn x√≥a)</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre
                        class="code-block"><code><span class="comment"># danh_sach_lop t·ª´ slide tr∆∞·ªõc...</span>
<span class="variable">sinh_vien_can_xoa</span> <span class="operator">=</span> <span class="boolean">None</span>

<span class="keyword">for</span> <span class="variable">sinh_vien</span> <span class="keyword">in</span> <span class="variable">danh_sach_lop</span><span class="operator">:</span>
    <span class="keyword">if</span> <span class="variable">sinh_vien</span>[<span class="string">'ma_sv'</span>] <span class="operator">==</span> <span class="string">'SV002'</span><span class="operator">:</span>
        <span class="variable">sinh_vien_can_xoa</span> <span class="operator">=</span> <span class="variable">sinh_vien</span>
        <span class="keyword">break</span>

<span class="keyword">if</span> <span class="variable">sinh_vien_can_xoa</span><span class="operator">:</span>
    <span class="variable">danh_sach_lop</span>.<span class="method">remove</span>(<span class="variable">sinh_vien_can_xoa</span>)
    <span class="function">print</span>(<span class="string">"ƒê√£ x√≥a sinh vi√™n SV002."</span>)

<span class="function">print</span>(<span class="string">f"S·ªë l∆∞·ª£ng sinh vi√™n c√≤n l·∫°i: {len(danh_sach_lop)}"</span>)</code></pre>
                </div>
                <p class="mt-4 mb-2 text-lg"><strong>L∆∞u √Ω:</strong> Vi·ªác x√≥a ph·∫ßn t·ª≠ trong khi ƒëang duy·ªát list c√≥ th·ªÉ
                    g√¢y ra l·ªói. An to√†n h∆°n l√† t√¨m ph·∫ßn t·ª≠ tr∆∞·ªõc, sau ƒë√≥ m·ªõi x√≥a n√≥ kh·ªèi list.</p>
            </div>
        </div>

        <!-- Slide 9: Intro to JSON -->
        <div id="slide-9" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">4. L√†m Vi·ªác v·ªõi File JSON</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">JSON l√† g√¨?</h4>
                <p class="mb-4 text-lg"><strong>JSON</strong> (JavaScript Object Notation) l√† m·ªôt ƒë·ªãnh d·∫°ng vƒÉn b·∫£n
                    (text) r·∫•t nh·∫π, ƒë∆∞·ª£c s·ª≠ d·ª•ng r·ªông r√£i ƒë·ªÉ l∆∞u tr·ªØ v√† trao ƒë·ªïi d·ªØ li·ªáu.</p>
                <ul class="list-disc list-inside mb-4 pl-4 text-gray-700">
                    <li>Con ng∆∞·ªùi c√≥ th·ªÉ ƒë·ªçc v√† vi·∫øt d·ªÖ d√†ng.</li>
                    <li>M√°y t√≠nh c√≥ th·ªÉ ph√¢n t√≠ch (parse) v√† t·∫°o ra d·ªÖ d√†ng.</li>
                    <li>N√≥ l√† ti√™u chu·∫©n m·ªü, ƒë·ªôc l·∫≠p v·ªõi ng√¥n ng·ªØ l·∫≠p tr√¨nh.</li>
                </ul>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">JSON v√† Python Dictionary</h4>
                <p class="mb-4 text-lg">C√∫ ph√°p c·ªßa JSON r·∫•t gi·ªëng v·ªõi Dictionary c·ªßa Python. ƒêi·ªÅu n√†y l√†m cho vi·ªác
                    chuy·ªÉn ƒë·ªïi gi·ªØa ch√∫ng tr·ªü n√™n c·ª±c k·ª≥ ƒë∆°n gi·∫£n.</p>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <p class="font-semibold text-center">Python Dictionary</p>
                        <div class="code-block-container">
                            <pre class="code-block"><code>{
    <span class="string">"ten"</span><span class="operator">:</span> <span class="string">"Tr√† s·ªØa"</span>,
    <span class="string">"gia"</span><span class="operator">:</span> <span class="number">50000</span>,
    <span class="string">"con_hang"</span><span class="operator">:</span> <span class="boolean">True</span>
}</code></pre>
                        </div>
                    </div>
                    <div>
                        <p class="font-semibold text-center">JSON Object</p>
                        <div class="code-block-container">
                            <pre class="code-block"><code>{
    <span class="string">"ten"</span><span class="operator">:</span> <span class="string">"Tr√† s·ªØa"</span>,
    <span class="string">"gia"</span><span class="operator">:</span> <span class="number">50000</span>,
    <span class="string">"con_hang"</span><span class="operator">:</span> <span class="boolean">true</span>
}</code></pre>
                        </div>
                    </div>
                </div>
                <p class="mt-2 text-sm text-gray-600">L∆∞u √Ω nh·ªè: <code>True/False</code> trong Python t∆∞∆°ng ·ª©ng v·ªõi
                    <code>true/false</code> (vi·∫øt th∆∞·ªùng) trong JSON.
                </p>
            </div>
        </div>

        <!-- Slide 10: Reading JSON file -->
        <div id="slide-10" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">4.1. ƒê·ªçc D·ªØ Li·ªáu t·ª´ File JSON (Import)</h3>
                <p class="mb-4 text-lg">Python c√≥ m·ªôt th∆∞ vi·ªán t√≠ch h·ª£p s·∫µn t√™n l√† <code>json</code> ƒë·ªÉ l√†m vi·ªác n√†y.
                    Ch√∫ng ta s·∫Ω d√πng h√†m <code>json.load()</code> ƒë·ªÉ ƒë·ªçc d·ªØ li·ªáu t·ª´ m·ªôt file.</p>
                <p class="mb-2 font-medium">Gi·∫£ s·ª≠ ch√∫ng ta c√≥ file <code>data.json</code> v·ªõi n·ªôi dung:</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code>[
    {
        "ten_mon": "C√† ph√™ ƒëen",
        "gia": 25000
    },
    {
        "ten_mon": "B·∫°c x·ªâu",
        "gia": 30000
    }
]</code></pre>
                </div>
                <p class="mt-4 mb-2 font-medium">Code Python ƒë·ªÉ ƒë·ªçc file n√†y:</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre
                        class="code-block"><code><span class="keyword">import</span> <span class="variable">json</span>

<span class="comment"># M·ªü file json ·ªü ch·∫ø ƒë·ªô ƒë·ªçc ('r')</span>
<span class="keyword">with</span> <span class="function">open</span>(<span class="string">'data.json'</span>, <span class="string">'r'</span>, <span class="variable">encoding</span><span class="operator">=</span><span class="string">'utf-8'</span>) <span class="keyword">as</span> <span class="variable">f</span><span class="operator">:</span>
    <span class="comment"># T·∫£i d·ªØ li·ªáu t·ª´ file v√† chuy·ªÉn th√†nh ƒë·ªëi t∆∞·ª£ng Python</span>
    <span class="variable">thuc_don</span> <span class="operator">=</span> <span class="variable">json</span>.<span class="method">load</span>(<span class="variable">f</span>)

<span class="comment"># B√¢y gi·ªù, 'thuc_don' l√† m·ªôt list c√°c dictionary</span>
<span class="function">print</span>(<span class="variable">thuc_don</span>)
<span class="function">print</span>(<span class="string">f"T√™n m√≥n ƒë·∫ßu ti√™n: {thuc_don[0]['ten_mon']}"</span>)</code></pre>
                </div>
                <p class="mt-2 text-sm text-gray-600">L∆∞u √Ω: <code>encoding='utf-8'</code> r·∫•t quan tr·ªçng ƒë·ªÉ ƒë·ªçc file c√≥
                    ch·ª©a ti·∫øng Vi·ªát.</p>
            </div>
        </div>

        <!-- Slide 11: Writing JSON file -->
        <div id="slide-11" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">4.2. Ghi D·ªØ Li·ªáu ra File JSON (Export)</h3>
                <p class="mb-4 text-lg">ƒê·ªÉ l∆∞u m·ªôt ƒë·ªëi t∆∞·ª£ng Python (nh∆∞ list, dictionary) ra file JSON, ta d√πng h√†m
                    <code>json.dump()</code>.
                </p>
                <p class="mb-2 font-medium">V√≠ d·ª•: L∆∞u danh s√°ch l·ªõp h·ªçc c·ªßa ch√∫ng ta ra file
                    <code>danh_sach_lop.json</code>
                </p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre
                        class="code-block"><code><span class="keyword">import</span> <span class="variable">json</span>

<span class="comment"># Gi·∫£ s·ª≠ ƒë√¢y l√† danh s√°ch l·ªõp hi·ªán t·∫°i</span>
<span class="variable">danh_sach_lop</span> <span class="operator">=</span> [
    {<span class="string">'ten'</span>: <span class="string">'Nguy·ªÖn VƒÉn An'</span>, <span class="string">'ma_sv'</span>: <span class="string">'SV001'</span>, <span class="string">'diem'</span>: <span class="number">8.8</span>},
    {<span class="string">'ten'</span>: <span class="string">'L√™ VƒÉn C√∫c'</span>, <span class="string">'ma_sv'</span>: <span class="string">'SV003'</span>, <span class="string">'diem'</span>: <span class="number">7.8</span>}
]

<span class="comment"># M·ªü file ·ªü ch·∫ø ƒë·ªô ghi ('w')</span>
<span class="keyword">with</span> <span class="function">open</span>(<span class="string">'danh_sach_lop.json'</span>, <span class="string">'w'</span>, <span class="variable">encoding</span><span class="operator">=</span><span class="string">'utf-8'</span>) <span class="keyword">as</span> <span class="variable">f</span><span class="operator">:</span>
    <span class="comment"># Ghi ƒë·ªëi t∆∞·ª£ng Python v√†o file JSON</span>
    <span class="comment"># indent=4: th·ª•t l·ªÅ 4 d·∫•u c√°ch ƒë·ªÉ file d·ªÖ ƒë·ªçc h∆°n</span>
    <span class="comment"># ensure_ascii=False: ƒë·ªÉ l∆∞u ti·∫øng Vi·ªát ƒë√∫ng ƒë·ªãnh d·∫°ng</span>
    <span class="variable">json</span>.<span class="method">dump</span>(<span class="variable">danh_sach_lop</span>, <span class="variable">f</span>, <span class="variable">indent</span><span class="operator">=</span><span class="number">4</span>, <span class="variable">ensure_ascii</span><span class="operator">=</span><span class="boolean">False</span>)

<span class="function">print</span>(<span class="string">"ƒê√£ l∆∞u danh s√°ch l·ªõp ra file danh_sach_lop.json th√†nh c√¥ng!"</span>)</code></pre>
                </div>
                <p class="mt-2 text-lg">B√¢y gi·ªù b·∫°n c√≥ th·ªÉ m·ªü file <code>danh_sach_lop.json</code> ƒë·ªÉ xem k·∫øt qu·∫£.</p>
            </div>
        </div>

        <!-- Slide 12: Application 1 - Student Manager -->
        <div id="slide-12" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-sky-600 mb-4">5. ·ª®ng D·ª•ng: Qu·∫£n L√Ω Sinh Vi√™n</h3>
                <p class="mb-4 text-lg">H√£y c√πng nhau ph√°c th·∫£o m·ªôt ch∆∞∆°ng tr√¨nh qu·∫£n l√Ω sinh vi√™n ho√†n ch·ªânh, s·ª≠ d·ª•ng
                    t·∫•t c·∫£ ki·∫øn th·ª©c v·ª´a h·ªçc.</p>
                <p class="mb-2 font-medium">Ch·ª©c nƒÉng ch√≠nh:</p>
                <ul class="list-disc list-inside mb-4 pl-4 text-gray-700">
                    <li>Hi·ªÉn th·ªã danh s√°ch sinh vi√™n.</li>
                    <li>Th√™m m·ªôt sinh vi√™n m·ªõi.</li>
                    <li>S·ª≠a th√¥ng tin m·ªôt sinh vi√™n (d·ª±a v√†o m√£ SV).</li>
                    <li>X√≥a m·ªôt sinh vi√™n (d·ª±a v√†o m√£ SV).</li>
                    <li>L∆∞u danh s√°ch hi·ªán t·∫°i v√†o file JSON.</li>
                    <li>T·∫£i danh s√°ch t·ª´ file JSON khi ch∆∞∆°ng tr√¨nh b·∫Øt ƒë·∫ßu.</li>
                    <li>Tho√°t ch∆∞∆°ng tr√¨nh.</li>
                </ul>
                <p class="mb-2 font-medium">C·∫•u tr√∫c d·ªØ li·ªáu:</p>
                <p class="mb-4 text-lg">M·ªôt list ch·ª©a c√°c dictionary, m·ªói dictionary l√† m·ªôt sinh vi√™n.</p>
                <pre
                    class="bg-gray-100 p-2 rounded"><code>[ {"ma_sv": "...", "ten": "...", "diem": ...}, ... ]</code></pre>
                <p class="mt-4 mb-2 font-medium">Lu·ªìng ho·∫°t ƒë·ªông:</p>
                <p class="mb-4 text-lg">S·ª≠ d·ª•ng v√≤ng l·∫∑p <code>while True</code> ƒë·ªÉ hi·ªÉn th·ªã menu v√† nh·∫≠n l·ª±a ch·ªçn c·ªßa
                    ng∆∞·ªùi d√πng. D√πng <code>if-elif-else</code> ƒë·ªÉ g·ªçi c√°c h√†m x·ª≠ l√Ω t∆∞∆°ng ·ª©ng.</p>
            </div>
        </div>

        <!-- Slide 13: Application 2 - Coffee Shop Manager -->
        <div id="slide-13" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-sky-600 mb-4">5. ·ª®ng D·ª•ng: Qu·∫£n L√Ω Qu√°n Cafe</h3>
                <p class="mb-4 text-lg">M·ªôt ·ª©ng d·ª•ng kh√°c l√† qu·∫£n l√Ω th·ª±c ƒë∆°n (menu) c·ªßa m·ªôt qu√°n cafe.</p>
                <p class="mb-2 font-medium">Ch·ª©c nƒÉng ch√≠nh:</p>
                <ul class="list-disc list-inside mb-4 pl-4 text-gray-700">
                    <li>Hi·ªÉn th·ªã to√†n b·ªô th·ª±c ƒë∆°n.</li>
                    <li>Th√™m m·ªôt m√≥n m·ªõi v√†o th·ª±c ƒë∆°n (t√™n, gi√°, lo·∫°i...).</li>
                    <li>C·∫≠p nh·∫≠t gi√° c·ªßa m·ªôt m√≥n.</li>
                    <li>X√≥a m·ªôt m√≥n kh·ªèi th·ª±c ƒë∆°n.</li>
                    <li>L∆∞u v√† t·∫£i th·ª±c ƒë∆°n t·ª´ file <code>menu.json</code>.</li>
                </ul>
                <p class="mb-2 font-medium">C·∫•u tr√∫c d·ªØ li·ªáu:</p>
                <p class="mb-4 text-lg">M·ªôt list c√°c dictionary, m·ªói dictionary l√† m·ªôt m√≥n ƒë·ªì u·ªëng.</p>
                <pre
                    class="bg-gray-100 p-2 rounded"><code>[ {"ten_mon": "...", "gia": ..., "loai": "..."}, ... ]</code></pre>
                <div class="flex justify-center mt-6">
                    <img src="https://placehold.co/400x200/0EA5E9/FFFFFF?text=Coffee+Shop+Menu"
                        alt="[H√¨nh ·∫£nh Menu Qu√°n Cafe]" class="shadow-md">
                </div>
            </div>
        </div>

        <!-- Slide 14: Application 3 - Course Manager -->
        <div id="slide-14" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-sky-600 mb-4">5. ·ª®ng D·ª•ng: Qu·∫£n L√Ω M√¥n H·ªçc</h3>
                <p class="mb-4 text-lg">T∆∞∆°ng t·ª±, ta c√≥ th·ªÉ x√¢y d·ª±ng ch∆∞∆°ng tr√¨nh qu·∫£n l√Ω c√°c m√¥n h·ªçc trong m·ªôt ch∆∞∆°ng
                    tr√¨nh ƒë√†o t·∫°o.</p>
                <p class="mb-2 font-medium">Ch·ª©c nƒÉng ch√≠nh:</p>
                <ul class="list-disc list-inside mb-4 pl-4 text-gray-700">
                    <li>Hi·ªÉn th·ªã danh s√°ch c√°c m√¥n h·ªçc.</li>
                    <li>Th√™m m·ªôt m√¥n h·ªçc m·ªõi (m√£ m√¥n, t√™n m√¥n, s·ªë t√≠n ch·ªâ).</li>
                    <li>S·ª≠a th√¥ng tin m√¥n h·ªçc (d·ª±a v√†o m√£ m√¥n).</li>
                    <li>X√≥a m·ªôt m√¥n h·ªçc.</li>
                    <li>L∆∞u v√† t·∫£i danh s√°ch m√¥n h·ªçc t·ª´ file <code>mon_hoc.json</code>.</li>
                </ul>
                <p class="mb-2 font-medium">C·∫•u tr√∫c d·ªØ li·ªáu:</p>
                <p class="mb-4 text-lg">M·ªôt list c√°c dictionary, m·ªói dictionary l√† m·ªôt m√¥n h·ªçc.</p>
                <pre
                    class="bg-gray-100 p-2 rounded"><code>[ {"ma_mon": "...", "ten_mon": "...", "tin_chi": ...}, ... ]</code></pre>
                <p class="mt-4 text-lg">T·∫•t c·∫£ c√°c ·ª©ng d·ª•ng tr√™n ƒë·ªÅu c√≥ chung m·ªôt logic n·ªÅn t·∫£ng: <strong>CRUD (Create,
                        Read, Update, Delete)</strong> tr√™n m·ªôt list c√°c dictionary v√† k·∫øt h·ª£p v·ªõi vi·ªác l∆∞u/t·∫£i file
                    JSON.</p>
            </div>
        </div>

        <!-- Slide 15: Practical Exercise -->
        <div id="slide-15" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-blue-500 mb-4">6. B√†i T·∫≠p Th·ª±c H√†nh</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">X√¢y d·ª±ng ch∆∞∆°ng tr√¨nh Qu·∫£n L√Ω Sinh Vi√™n</h4>
                <p class="mb-2 text-lg"><strong>Y√™u c·∫ßu:</strong> D·ª±a tr√™n c√°c slide tr∆∞·ªõc, h√£y vi·∫øt m·ªôt ch∆∞∆°ng tr√¨nh
                    Python ho√†n ch·ªânh cho ·ª©ng d·ª•ng "Qu·∫£n L√Ω Sinh Vi√™n" v·ªõi c√°c ch·ª©c nƒÉng ƒë√£ m√¥ t·∫£.</p>
                <p class="mb-2 font-medium">G·ª£i √Ω c·∫•u tr√∫c file:</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="keyword">import</span> <span class="variable">json</span>

<span class="variable">FILE_NAME</span> <span class="operator">=</span> <span class="string">'students.json'</span>

<span class="keyword">def</span> <span class="function">tai_danh_sach</span>():
    <span class="comment"># ... code ƒë·ªÉ ƒë·ªçc file json, n·∫øu file kh√¥ng t·ªìn t·∫°i th√¨ tr·∫£ v·ªÅ list r·ªóng</span>
    <span class="keyword">pass</span>

<span class="keyword">def</span> <span class="function">luu_danh_sach</span>(<span class="variable">danh_sach</span>):
    <span class="comment"># ... code ƒë·ªÉ ghi danh s√°ch v√†o file json</span>
    <span class="keyword">pass</span>

<span class="keyword">def</span> <span class="function">hien_thi_menu</span>():
    <span class="comment"># ... in ra c√°c l·ª±a ch·ªçn</span>
    <span class="keyword">pass</span>
    
<span class="comment"># ... c√°c h√†m kh√°c cho: hien_thi_sinh_vien, them_sinh_vien, sua_sinh_vien, xoa_sinh_vien</span>

<span class="keyword">def</span> <span class="function">main</span>():
    <span class="variable">danh_sach_sv</span> <span class="operator">=</span> <span class="function">tai_danh_sach</span>()
    <span class="keyword">while</span> <span class="boolean">True</span><span class="operator">:</span>
        <span class="function">hien_thi_menu</span>()
        <span class="variable">lua_chon</span> <span class="operator">=</span> <span class="function">input</span>(<span class="string">"Nh·∫≠p l·ª±a ch·ªçn c·ªßa b·∫°n: "</span>)
        <span class="keyword">if</span> <span class="variable">lua_chon</span> <span class="operator">==</span> <span class="string">'1'</span><span class="operator">:</span>
            <span class="comment"># g·ªçi h√†m hi·ªÉn th·ªã</span>
            <span class="keyword">pass</span>
        <span class="comment"># ... c√°c elif kh√°c</span>
        <span class="keyword">elif</span> <span class="variable">lua_chon</span> <span class="operator">==</span> <span class="string">'0'</span><span class="operator">:</span>
            <span class="function">luu_danh_sach</span>(<span class="variable">danh_sach_sv</span>)
            <span class="function">print</span>(<span class="string">"T·∫°m bi·ªát!"</span>)
            <span class="keyword">break</span>

<span class="comment"># G·ªçi h√†m main ƒë·ªÉ ch·∫°y ch∆∞∆°ng tr√¨nh</span>
<span class="function">main</span>()
</code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 16: Summary -->
        <div id="slide-16" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">7. T√≥m T·∫Øt Bu·ªïi H·ªçc H·ªçc</h3>
                <p class="mb-4 text-lg">Trong Bu·ªïi H·ªçc h·ªçc h√¥m nay, ch√∫ng ta ƒë√£ h·ªçc ƒë∆∞·ª£c nh·ªØng ki·∫øn th·ª©c c·ªët l√µi:</p>
                <ul class="list-disc list-inside mb-4 pl-4 text-gray-700 space-y-3">
                    <li><strong>Dictionary (T·ª´ ƒëi·ªÉn):</strong> C√°ch l∆∞u d·ªØ li·ªáu theo c·∫∑p <code>key: value</code>, c√°c
                        thao t√°c c∆° b·∫£n nh∆∞ th√™m, s·ª≠a, x√≥a, truy c·∫≠p.</li>
                    <li><strong>List ch·ª©a Dictionary:</strong> C·∫•u tr√∫c d·ªØ li·ªáu c·ª±c k·ª≥ m·∫°nh m·∫Ω ƒë·ªÉ qu·∫£n l√Ω c√°c ƒë·ªëi t∆∞·ª£ng
                        ph·ª©c t·∫°p (nh∆∞ sinh vi√™n, s·∫£n ph·∫©m...).</li>
                    <li><strong>Thao t√°c CRUD tr√™n List of Dictionaries:</strong> C√°ch th√™m (Create), ƒë·ªçc (Read), c·∫≠p
                        nh·∫≠t (Update) v√† x√≥a (Delete) d·ªØ li·ªáu trong c·∫•u tr√∫c n√†y.</li>
                    <li><strong>JSON:</strong> Hi·ªÉu ƒë∆∞·ª£c JSON l√† g√¨, t·∫°i sao n√≥ quan tr·ªçng v√† s·ª± t∆∞∆°ng ƒë·ªìng v·ªõi
                        Dictionary c·ªßa Python.</li>
                    <li><strong>L√†m vi·ªác v·ªõi file JSON:</strong> S·ª≠ d·ª•ng th∆∞ vi·ªán <code>json</code> ƒë·ªÉ <strong>ƒë·ªçc
                            (import)</strong> d·ªØ li·ªáu t·ª´ file v√†o ch∆∞∆°ng tr√¨nh v√† <strong>ghi (export)</strong> d·ªØ li·ªáu
                        t·ª´ ch∆∞∆°ng tr√¨nh ra file.</li>
                    <li><strong>·ª®ng d·ª•ng th·ª±c t·∫ø:</strong> Ph√°c th·∫£o c√°ch x√¢y d·ª±ng c√°c ch∆∞∆°ng tr√¨nh qu·∫£n l√Ω d·ª±a tr√™n
                        ki·∫øn th·ª©c ƒë√£ h·ªçc.</li>
                </ul>
                <p class="text-lg mb-6">N·∫Øm v·ªØng nh·ªØng kh√°i ni·ªám n√†y l√† m·ªôt b∆∞·ªõc ti·∫øn l·ªõn ƒë·ªÉ b·∫°n c√≥ th·ªÉ x√¢y d·ª±ng c√°c ·ª©ng
                    d·ª•ng c√≥ √Ω nghƒ©a v√† x·ª≠ l√Ω d·ªØ li·ªáu th·ª±c t·∫ø.</p>
                <div class="flex justify-center mt-8">
                    <img src="https://placehold.co/350x200/2563EB/FFFFFF?text=Summary+%26+Next+Steps"
                        alt="[H√¨nh ·∫£nh T√≥m t·∫Øt v√† c√°c b∆∞·ªõc ti·∫øp theo]" class="shadow-md">
                </div>
            </div>
        </div>

        <!-- Slide 17: Q&A -->
        <div id="slide-17" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-700 mb-6 text-center">8. H·ªèi & ƒê√°p</h3>
                <div class="flex justify-center mb-8">
                    <img src="https://placehold.co/300x200/1E40AF/FFFFFF?text=Q%26A" alt="[H√¨nh ·∫£nh H·ªèi v√† ƒê√°p]"
                        class="shadow-md">
                </div>
                <h4 class="text-2xl font-semibold text-center text-gray-700">C√°c b·∫°n c√≥ c√¢u h·ªèi n√†o v·ªÅ Dictionary, JSON,
                    hay c√°ch x√¢y d·ª±ng ·ª©ng d·ª•ng kh√¥ng?</h4>
                <p class="text-center text-gray-600 mt-4">ƒê·ª´ng ng·∫ßn ng·∫°i ƒë·∫∑t c√¢u h·ªèi nh√©!</p>
            </div>
        </div>

    </div>

    <script>
        const slides = Array.from(document.querySelectorAll('.slide'));
        const prevButton = document.getElementById('prevSlide');
        const nextButton = document.getElementById('nextSlide');
        const currentSlideNumDisplay = document.getElementById('currentSlideNum');
        const totalSlidesNumDisplay = document.getElementById('totalSlidesNum');
        const navbar = document.getElementById('navbar');

        let currentSlide = 0;
        if (slides.length > 0) {
            totalSlidesNumDisplay.textContent = slides.length;
        }

        function showSlide(index) {
            slides.forEach((slide, i) => {
                if (i === index) {
                    slide.style.display = 'flex';
                    setTimeout(() => {
                        slide.classList.add('active');
                    }, 10);
                } else {
                    slide.classList.remove('active');
                    setTimeout(() => {
                        if (!slide.classList.contains('active')) {
                            slide.style.display = 'none';
                        }
                    }, 400);
                }
            });
            currentSlideNumDisplay.textContent = index + 1;
            updateNavButtons();

            if (navbar) {
                window.scrollTo({ top: navbar.offsetHeight, behavior: 'smooth' });
            } else {
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }
        }

        function updateNavButtons() {
            if (!prevButton || !nextButton) return;
            prevButton.disabled = currentSlide === 0;
            nextButton.disabled = currentSlide === slides.length - 1;
        }

        if (prevButton && nextButton) {
            prevButton.addEventListener('click', () => {
                if (currentSlide > 0) {
                    currentSlide--;
                    showSlide(currentSlide);
                }
            });

            nextButton.addEventListener('click', () => {
                if (currentSlide < slides.length - 1) {
                    currentSlide++;
                    showSlide(currentSlide);
                }
            });
        }

        function copyCode(buttonElement) {
            const codeBlockContainer = buttonElement.closest('.code-block-container');
            const codeElement = codeBlockContainer.querySelector('.code-block');
            if (codeElement) {
                const codeToCopy = codeElement.innerText || codeElement.textContent;

                const textarea = document.createElement('textarea');
                textarea.value = codeToCopy;
                document.body.appendChild(textarea);
                textarea.select();
                try {
                    document.execCommand('copy');
                    const originalText = buttonElement.innerHTML;
                    buttonElement.innerHTML = '<i class="fas fa-check"></i> ƒê√£ ch√©p!';
                    buttonElement.classList.add('copied');
                    setTimeout(() => {
                        buttonElement.innerHTML = originalText;
                        buttonElement.classList.remove('copied');
                    }, 1500);
                } catch (err) {
                    console.error('Kh√¥ng th·ªÉ sao ch√©p code: ', err);
                    alert('L·ªói sao ch√©p code. Vui l√≤ng th·ª≠ l·∫°i ho·∫∑c sao ch√©p th·ªß c√¥ng.');
                }
                document.body.removeChild(textarea);
            }
        }

        if (slides.length > 0) {
            showSlide(currentSlide);
        } else {
            if (currentSlideNumDisplay) currentSlideNumDisplay.textContent = '0';
            updateNavButtons();
        }
    </script>

</body>

</html>

/* ===== Python Basic/lesson6.html ===== */
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ƒê·ªÅ Thi Cu·ªëi Kh√≥a Python C∆° B·∫£n</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" />
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f3f4f6; /* Light gray background */
        }

        .question-card {
            background-color: white;
            border-radius: 0.75rem;
            padding: 1.5rem 2rem;
            margin-bottom: 1rem; /* Reduced margin for single column */
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            transition: transform 0.2s, box-shadow 0.2s;
            border-left: 5px solid transparent;
        }

        .question-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.07);
        }

        .level-easy { border-color: #34d399; } /* Emerald 400 */
        .level-medium { border-color: #f59e0b; } /* Amber 500 */
        .level-hard { border-color: #ef4444; } /* Red 500 */

        .terminal {
            background-color: #1f2937; /* Gray 800 */
            border-radius: 0.5rem;
            margin-top: 1rem;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
            border: 1px solid #374151; /* Gray 700 */
            overflow: hidden;
        }
        .terminal-header {
            background-color: #374151; /* Gray 700 */
            padding: 0.5rem 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        .terminal-header span {
            display: block;
            width: 0.75rem;
            height: 0.75rem;
            border-radius: 50%;
        }
        .terminal-header .red { background-color: #f87171; } /* Red 400 */
        .terminal-header .yellow { background-color: #fbbd23; } /* Amber 400 */
        .terminal-header .green { background-color: #34d399; } /* Emerald 400 */
        
        .terminal-body {
            color: #e5e7eb; /* Gray 200 */
            padding: 1rem 1.25rem;
            font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
            white-space: pre-wrap;
            word-wrap: break-word;
            font-size: 0.9em;
            line-height: 1.6;
        }
        .terminal-body .comment { color: #9ca3af; } /* Gray 400 */
        
        .timer-container {
            position: sticky;
            top: 0;
            z-index: 50;
        }
        
        #timer.ticking {
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0%, 100% {
                transform: scale(1);
                opacity: 1;
            }
            50% {
                transform: scale(1.05);
                opacity: 0.95;
            }
        }
    </style>
</head>

<body class="text-gray-800">

    <div class="timer-container bg-gray-800 text-white p-4 shadow-lg">
        <div class="container mx-auto flex justify-between items-center">
            <h1 class="text-2xl font-bold">
                <i class="fa-brands fa-python mr-2"></i>
                ƒê·ªÅ Thi Python C∆° B·∫£n
            </h1>
            <div id="timer" class="ticking text-2xl font-bold bg-indigo-500 px-4 py-2 rounded-lg">
                <i class="fa-regular fa-clock mr-2"></i>
                <span id="time">02:00:00</span>
            </div>
        </div>
    </div>

    <div class="container mx-auto p-4 md:p-8">
        <div class="bg-white p-6 rounded-lg shadow-md mb-8">
            <h2 class="text-2xl font-bold text-gray-700 mb-2">Th√¥ng tin b√†i thi</h2>
            <p class="text-gray-600"><strong class="font-semibold">Th·ªùi gian l√†m b√†i:</strong> 120 ph√∫t</p>
            <p class="text-gray-600"><strong class="font-semibold">N·ªôi dung:</strong> 10 c√¢u h·ªèi l·∫≠p tr√¨nh Python t·ª´ d·ªÖ ƒë·∫øn kh√≥.</p>
            <p class="text-gray-600"><strong class="font-semibold">H∆∞·ªõng d·∫´n:</strong> H·ªçc vi√™n ƒë·ªçc k·ªπ ƒë·ªÅ b√†i v√† vi·∫øt code Python ƒë·ªÉ gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ. Ch∆∞∆°ng tr√¨nh c·∫ßn x·ª≠ l√Ω ƒë√∫ng c√°c tr∆∞·ªùng h·ª£p v√≠ d·ª• v√† c√≥ th·ªÉ c√°c tr∆∞·ªùng h·ª£p kh√°c t∆∞∆°ng t·ª±.</p>
        </div>

        <!-- PH·∫¶N C√ÇU H·ªéI -->
        <div class="space-y-8">
            <!-- C√¢u 1 -->
            <div class="question-card level-easy">
                <h3 class="text-xl font-bold text-gray-800">C√¢u 1: T√≠nh Ti·ªÅn Taxi (D·ªÖ)</h3>
                <p class="mt-2 text-gray-600">Vi·∫øt ch∆∞∆°ng tr√¨nh t√≠nh ti·ªÅn taxi d·ª±a tr√™n s·ªë km di chuy·ªÉn. Ng∆∞·ªùi d√πng nh·∫≠p v√†o s·ªë km, ch∆∞∆°ng tr√¨nh s·∫Ω in ra t·ªïng s·ªë ti·ªÅn ph·∫£i tr·∫£, bi·∫øt r·∫±ng:</p>
                <ul class="list-disc list-inside mt-2 text-gray-600">
                    <li>Gi√° m·ªü c·ª≠a (cho 1km ƒë·∫ßu ti√™n) l√†: 15,000ƒë.</li>
                    <li>T·ª´ km th·ª© 2 ƒë·∫øn km th·ª© 10: 12,000ƒë/km.</li>
                    <li>T·ª´ km th·ª© 11 tr·ªü ƒëi: 10,000ƒë/km.</li>
                </ul>
                <div class="terminal">
                    <div class="terminal-header"><span class="red"></span><span class="yellow"></span><span class="green"></span></div>
                    <div class="terminal-body">
<span class="comment"># V√≠ d·ª• 1:</span><br>
&gt; Nh·∫≠p s·ªë km: 0.5<br>
T·ªïng ti·ªÅn: 15000.0 ƒë·ªìng<br>
<span class="comment"># V√≠ d·ª• 2:</span><br>
&gt; Nh·∫≠p s·ªë km: 9<br>
T·ªïng ti·ªÅn: 111000.0 ƒë·ªìng <span class="comment"># (15000 + 8*12000)</span><br>
<span class="comment"># V√≠ d·ª• 3:</span><br>
&gt; Nh·∫≠p s·ªë km: 15<br>
T·ªïng ti·ªÅn: 171000.0 ƒë·ªìng <span class="comment"># (15000 + 9*12000 + 5*10000)</span>
                    </div>
                </div>
            </div>

            <!-- C√¢u 2 -->
            <div class="question-card level-easy">
                <h3 class="text-xl font-bold text-gray-800">C√¢u 2: Ki·ªÉm Tra Nguy√™n √Çm (D·ªÖ)</h3>
                <p class="mt-2 text-gray-600">Vi·∫øt ch∆∞∆°ng tr√¨nh y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p m·ªôt chu·ªói k√Ω t·ª±. ƒê·∫øm v√† in ra s·ªë l∆∞·ª£ng nguy√™n √¢m c√≥ trong chu·ªói ƒë√≥. C√°c nguy√™n √¢m l√† 'a', 'e', 'i', 'o', 'u' (kh√¥ng ph√¢n bi·ªát hoa th∆∞·ªùng).</p>
                <div class="terminal">
                    <div class="terminal-header"><span class="red"></span><span class="yellow"></span><span class="green"></span></div>
                    <div class="terminal-body">
<span class="comment"># V√≠ d·ª•:</span><br>
&gt; Nh·∫≠p chu·ªói: Xin Chao Cac Ban<br>
S·ªë l∆∞·ª£ng nguy√™n √¢m: 5
                    </div>
                </div>
            </div>

            <!-- C√¢u 3 -->
            <div class="question-card level-easy">
                <h3 class="text-xl font-bold text-gray-800">C√¢u 3: T·∫°o Danh S√°ch S·ªë L·∫ª (D·ªÖ)</h3>
                <p class="mt-2 text-gray-600">Vi·∫øt ch∆∞∆°ng tr√¨nh y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p v√†o m·ªôt s·ªë nguy√™n d∆∞∆°ng N. T·∫°o v√† in ra m·ªôt danh s√°ch (list) ch·ª©a t·∫•t c·∫£ c√°c s·ªë l·∫ª t·ª´ 1 ƒë·∫øn N.</p>
                <div class="terminal">
                    <div class="terminal-header"><span class="red"></span><span class="yellow"></span><span class="green"></span></div>
                    <div class="terminal-body">
<span class="comment"># V√≠ d·ª•:</span><br>
&gt; Nh·∫≠p N: 10<br>
Danh s√°ch s·ªë l·∫ª: [1, 3, 5, 7, 9]
                    </div>
                </div>
            </div>

            <!-- C√¢u 4 -->
            <div class="question-card level-medium">
                <h3 class="text-xl font-bold text-gray-800">C√¢u 4: T√¨m T·ª´ D√†i Nh·∫•t (Trung B√¨nh)</h3>
                <p class="mt-2 text-gray-600">Vi·∫øt ch∆∞∆°ng tr√¨nh y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p v√†o m·ªôt c√¢u. T√¨m v√† in ra t·ª´ d√†i nh·∫•t trong c√¢u ƒë√≥. N·∫øu c√≥ nhi·ªÅu t·ª´ c√≥ c√πng ƒë·ªô d√†i l·ªõn nh·∫•t, ch·ªâ c·∫ßn in ra t·ª´ ƒë·∫ßu ti√™n t√¨m th·∫•y.</p>
                <div class="terminal">
                    <div class="terminal-header"><span class="red"></span><span class="yellow"></span><span class="green"></span></div>
                    <div class="terminal-body">
<span class="comment"># V√≠ d·ª• 1:</span><br>
&gt; Nh·∫≠p m·ªôt c√¢u: Lap trinh Python rat thu vi<br>
T·ª´ d√†i nh·∫•t l√†: Laptrinh<br>
<span class="comment"># V√≠ d·ª• 2:</span><br>
&gt; Nh·∫≠p m·ªôt c√¢u: hoc vien cham chi<br>
T·ª´ d√†i nh·∫•t l√†: hocvien
                    </div>
                </div>
            </div>

            <!-- C√¢u 5 -->
            <div class="question-card level-medium">
                <h3 class="text-xl font-bold text-gray-800">C√¢u 5: Tr√≤ Ch∆°i ƒêo√°n S·ªë (Trung B√¨nh)</h3>
                <p class="mt-2 text-gray-600">Vi·∫øt m·ªôt ch∆∞∆°ng tr√¨nh tr√≤ ch∆°i ƒëo√°n s·ªë. Ch∆∞∆°ng tr√¨nh s·∫Ω "nghƒ©" ra m·ªôt s·ªë b√≠ m·∫≠t (b·∫°n c√≥ th·ªÉ g√°n c·ª©ng, v√≠ d·ª• `so_bi_mat = 42`).</p>
                <p class="mt-2 text-gray-600">S·ª≠ d·ª•ng v√≤ng l·∫∑p <code>while</code> ƒë·ªÉ cho ph√©p ng∆∞·ªùi d√πng ƒëo√°n s·ªë li√™n t·ª•c cho ƒë·∫øn khi ƒë√∫ng. Sau m·ªói l·∫ßn ƒëo√°n, cho bi·∫øt s·ªë ng∆∞·ªùi d√πng ƒëo√°n l√† "l·ªõn h∆°n" hay "nh·ªè h∆°n" s·ªë b√≠ m·∫≠t. Khi ƒëo√°n ƒë√∫ng, in ra s·ªë l·∫ßn ƒë√£ ƒëo√°n v√† k·∫øt th√∫c.</p>
                <div class="terminal">
                    <div class="terminal-header"><span class="red"></span><span class="yellow"></span><span class="green"></span></div>
                    <div class="terminal-body">
<span class="comment"># Lu·ªìng ch·∫°y v√≠ d·ª• (so_bi_mat = 42):</span><br>
&gt; ƒêo√°n m·ªôt s·ªë: 50<br>
L·ªõn h∆°n s·ªë b√≠ m·∫≠t!<br>
&gt; ƒêo√°n m·ªôt s·ªë: 30<br>
Nh·ªè h∆°n s·ªë b√≠ m·∫≠t!<br>
&gt; ƒêo√°n m·ªôt s·ªë: 42<br>
Ch√∫c m·ª´ng! B·∫°n ƒë√£ ƒëo√°n ƒë√∫ng sau 3 l·∫ßn.
                    </div>
                </div>
            </div>

            <!-- C√¢u 6 -->
            <div class="question-card level-medium">
                <h3 class="text-xl font-bold text-gray-800">C√¢u 6: Th·ªëng K√™ ƒêi·ªÉm Thi (Trung B√¨nh)</h3>
                <p class="mt-2 text-gray-600">Gi·∫£ s·ª≠ b·∫°n c√≥ m·ªôt file t√™n l√† <code>diem_thi.txt</code> v·ªõi n·ªôi dung l√† ƒëi·ªÉm s·ªë c·ªßa c√°c sinh vi√™n, m·ªói ƒëi·ªÉm tr√™n m·ªôt d√≤ng. Vi·∫øt ch∆∞∆°ng tr√¨nh ƒë·ªçc file n√†y, sau ƒë√≥ t√≠nh v√† in ra:</p>
                <ul class="list-disc list-inside mt-2 text-gray-600">
                    <li>T·ªïng s·ªë sinh vi√™n c√≥ ƒëi·ªÉm.</li>
                    <li>ƒêi·ªÉm trung b√¨nh.</li>
                    <li>S·ªë l∆∞·ª£ng sinh vi√™n c√≥ ƒëi·ªÉm >= 5.</li>
                </ul>
                <p class="mt-2 text-gray-600">T·∫°o file <code>diem_thi.txt</code> v·ªõi n·ªôi dung sau ƒë·ªÉ ch·∫°y th·ª≠:</p>
                <div class="terminal">
                    <div class="terminal-header"><span class="red"></span><span class="yellow"></span><span class="green"></span></div>
                    <div class="terminal-body">
<span class="comment"># N·ªôi dung file diem_thi.txt</span><br>
8<br>
4<br>
9.5<br>
10<br>
3<br>
7.5<br>
<span class="comment"># Output mong mu·ªën:</span><br>
T·ªïng s·ªë sinh vi√™n: 6<br>
ƒêi·ªÉm trung b√¨nh: 7.0<br>
S·ªë sinh vi√™n qua m√¥n: 4
                    </div>
                </div>
            </div>

            <!-- C√¢u 7 -->
            <div class="question-card level-hard">
                <h3 class="text-xl font-bold text-gray-800">C√¢u 7: T·∫ßn Su·∫•t T·ª´ (Kh√≥)</h3>
                <p class="mt-2 text-gray-600">Vi·∫øt ch∆∞∆°ng tr√¨nh y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p v√†o m·ªôt ƒëo·∫°n vƒÉn b·∫£n. Ch∆∞∆°ng tr√¨nh s·∫Ω th·ªëng k√™ t·∫ßn su·∫•t xu·∫•t hi·ªán c·ªßa m·ªói t·ª´ trong ƒëo·∫°n vƒÉn ƒë√≥ v√† l∆∞u v√†o m·ªôt dictionary.</p>
                <p class="mt-2 text-gray-600">Sau ƒë√≥, in dictionary ra m√†n h√¨nh. (L∆∞u √Ω: chuy·ªÉn t·∫•t c·∫£ c√°c t·ª´ v·ªÅ ch·ªØ th∆∞·ªùng ƒë·ªÉ th·ªëng k√™ cho ch√≠nh x√°c, v√≠ d·ª• "Python" v√† "python" ƒë∆∞·ª£c t√≠nh l√† m·ªôt).</p>
                <div class="terminal">
                    <div class="terminal-header"><span class="red"></span><span class="yellow"></span><span class="green"></span></div>
                    <div class="terminal-body">
<span class="comment"># V√≠ d·ª•:</span><br>
&gt; Nh·∫≠p ƒëo·∫°n vƒÉn: Hoc Python rat vui hoc python cung de<br>
<span class="comment"># Output mong mu·ªën (th·ª© t·ª± c√≥ th·ªÉ kh√°c):</span><br>
{'hoc': 2, 'python': 2, 'rat': 1, 'vui': 1, 'cung': 1, 'de': 1}
                    </div>
                </div>
            </div>

            <!-- C√¢u 8 -->
            <div class="question-card level-hard">
                <h3 class="text-xl font-bold text-gray-800">C√¢u 8: Qu·∫£n L√Ω S·∫£n Ph·∫©m (Kh√≥)</h3>
                <p class="mt-2 text-gray-600">B·∫°n ƒë∆∞·ª£c cung c·∫•p m·ªôt danh s√°ch c√°c s·∫£n ph·∫©m, m·ªói s·∫£n ph·∫©m l√† m·ªôt dictionary. Vi·∫øt m·ªôt ch∆∞∆°ng tr√¨nh cho ph√©p ng∆∞·ªùi d√πng:</p>
                <ol class="list-decimal list-inside mt-2 text-gray-600">
                    <li>T√¨m m·ªôt s·∫£n ph·∫©m d·ª±a tr√™n t√™n.</li>
                    <li>N·∫øu t√¨m th·∫•y, cho ph√©p c·∫≠p nh·∫≠t l·∫°i gi√° c·ªßa s·∫£n ph·∫©m ƒë√≥.</li>
                    <li>N·∫øu kh√¥ng t√¨m th·∫•y, th√¥ng b√°o "S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i".</li>
                    <li>In ra danh s√°ch s·∫£n ph·∫©m sau khi ƒë√£ c·∫≠p nh·∫≠t (n·∫øu c√≥).</li>
                </ol>
                <div class="terminal">
                    <div class="terminal-header"><span class="red"></span><span class="yellow"></span><span class="green"></span></div>
                    <div class="terminal-body">
<span class="comment"># D·ªØ li·ªáu ban ƒë·∫ßu (khai b√°o trong code):</span><br>
san_phams = [<br>
{'ten': 'iPhone 15', 'gia': 25000000},<br>
{'ten': 'Samsung S24', 'gia': 22000000},<br>
{'ten': 'Oppo Reno10', 'gia': 12000000}<br>
]<br>
<span class="comment"># V√≠ d·ª• lu·ªìng ch·∫°y:</span><br>
&gt; Nh·∫≠p t√™n s·∫£n ph·∫©m c·∫ßn c·∫≠p nh·∫≠t: Samsung S24<br>
&gt; Nh·∫≠p gi√° m·ªõi: 21500000<br>
<span class="comment"># Output mong mu·ªën:</span><br>
[<br>
{'ten': 'iPhone 15', 'gia': 25000000},<br>
{'ten': 'Samsung S24', 'gia': 21500000},<br>
{'ten': 'Oppo Reno10', 'gia': 12000000}<br>
]
                    </div>
                </div>
            </div>

            <!-- C√¢u 9 -->
            <div class="question-card level-hard">
                <h3 class="text-xl font-bold text-gray-800">C√¢u 9: T·ªïng H·ª£p Doanh Thu (Kh√≥)</h3>
                <p class="mt-2 text-gray-600">B·∫°n c√≥ m·ªôt file <code>doanh_thu.txt</code> ghi l·∫°i l·ªãch s·ª≠ b√°n h√†ng. M·ªói d√≤ng c√≥ ƒë·ªãnh d·∫°ng <code>Ten_San_Pham,So_Luong_Ban,Don_Gia</code>. H√£y vi·∫øt ch∆∞∆°ng tr√¨nh ƒë·ªçc file n√†y v√† t√≠nh t·ªïng doanh thu cho m·ªói s·∫£n ph·∫©m.</p>
                <p class="mt-2 text-gray-600">T·∫°o file <code>doanh_thu.txt</code> v·ªõi n·ªôi dung sau ƒë·ªÉ ch·∫°y th·ª≠:</p>
                <div class="terminal">
                    <div class="terminal-header"><span class="red"></span><span class="yellow"></span><span class="green"></span></div>
                    <div class="terminal-body">
<span class="comment"># N·ªôi dung file doanh_thu.txt</span><br>
BanhMi,10,15000<br>
SuaChua,20,5000<br>
BanhMi,5,15000<br>
KeoMut,15,2000<br>
SuaChua,10,5000<br>
<span class="comment"># Output mong mu·ªën (Doanh thu cho t·ª´ng s·∫£n ph·∫©m):</span><br>
BanhMi: 225000<br>
SuaChua: 150000<br>
KeoMut: 30000
                    </div>
                </div>
            </div>

            <!-- C√¢u 10 -->
            <div class="question-card level-hard">
                <h3 class="text-xl font-bold text-gray-800">C√¢u 10: C·∫≠p Nh·∫≠t D·ªØ Li·ªáu JSON (R·∫•t Kh√≥)</h3>
                <p class="mt-2 text-gray-600">B·∫°n c√≥ m·ªôt file <code>nhan_vien.json</code> ch·ª©a danh s√°ch c√°c nh√¢n vi√™n. Vi·∫øt ch∆∞∆°ng tr√¨nh th·ª±c hi·ªán c√°c vi·ªác sau:</p>
                <ol class="list-decimal list-inside mt-2 text-gray-600">
                    <li>ƒê·ªçc d·ªØ li·ªáu t·ª´ file <code>nhan_vien.json</code>.</li>
                    <li>Hi·ªÉn th·ªã danh s√°ch nh√¢n vi√™n hi·ªán c√≥.</li>
                    <li>Y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p th√¥ng tin cho m·ªôt nh√¢n vi√™n m·ªõi (t√™n, m√£ NV, ch·ª©c v·ª•).</li>
                    <li>Th√™m nh√¢n vi√™n m·ªõi n√†y v√†o danh s√°ch.</li>
                    <li>Ghi l·∫°i (l∆∞u ƒë√®) to√†n b·ªô danh s√°ch ƒë√£ c·∫≠p nh·∫≠t v√†o l·∫°i file <code>nhan_vien.json</code> m·ªôt c√°ch ƒë·∫πp m·∫Øt (th·ª•t l·ªÅ).</li>
                </ol>
                <p class="mt-2 text-gray-600">T·∫°o file <code>nhan_vien.json</code> v·ªõi n·ªôi dung sau ƒë·ªÉ ch·∫°y th·ª≠:</p>
                <div class="terminal">
                    <div class="terminal-header"><span class="red"></span><span class="yellow"></span><span class="green"></span></div>
                    <div class="terminal-body">
<span class="comment"># N·ªôi dung file nhan_vien.json ban ƒë·∫ßu</span><br>
[<br>
&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;"ten": "L√™ An",<br>
&nbsp;&nbsp;&nbsp;&nbsp;"ma_nv": "NV01",<br>
&nbsp;&nbsp;&nbsp;&nbsp;"chuc_vu": "L·∫≠p tr√¨nh vi√™n"<br>
&nbsp;&nbsp;}<br>
]
                    </div>
                </div>
            </div>

        </div>
    </div>

    <script>
        // Set countdown timer for 120 minutes (120 * 60 seconds)
        const startingMinutes = 120;
        let time = startingMinutes * 60;

        const countdownEl = document.getElementById('time');
        const timerDiv = document.getElementById('timer');

        function updateCountdown() {
            const hours = Math.floor(time / 3600);
            let minutes = Math.floor((time % 3600) / 60);
            let seconds = time % 60;

            // Add leading zero if needed
            minutes = minutes < 10 ? '0' + minutes : minutes;
            seconds = seconds < 10 ? '0' + seconds : seconds;
            let displayHours = hours < 10 ? '0' + hours : hours;

            countdownEl.innerHTML = `${displayHours}:${minutes}:${seconds}`;

            if (time > 0) {
                time--;
            } else {
                countdownEl.innerHTML = "H·∫æT GI·ªú!";
                timerDiv.classList.remove('ticking');
                clearInterval(timerInterval);
                // Optionally disable the page or show a popup
                alert("ƒê√£ h·∫øt th·ªùi gian l√†m b√†i!");
            }
        }

        const timerInterval = setInterval(updateCountdown, 1000);

        // Initial call to display time immediately
        updateCountdown();
    </script>
</body>
</html>


/* ===== Python Basic/lesson7.html ===== */
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bu·ªïi 6: H√†m (Function) trong Python</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            scroll-behavior: smooth;
            background-color: #f0f9ff;
            /* Light blue background */
        }

        #navbar {
            position: sticky;
            top: 0;
            z-index: 50;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .slide-container {
            padding-top: 1rem;
        }

        .slide {
            background-color: white;
            padding: 2rem;
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            margin-bottom: 2rem;
            display: none;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
            min-height: calc(100vh - 120px);
            display: flex;
            flex-direction: column;
        }

        .slide.active {
            display: flex;
            opacity: 1;
            transform: translateY(0);
        }

        .slide-content-wrapper {
            flex-grow: 1;
        }

        .code-block-container {
            position: relative;
            background-color: #1e293b;
            border-radius: 0.5rem;
            margin-top: 1rem;
            margin-bottom: 1rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .code-block-header {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            padding: 0.5rem 0.75rem;
            background-color: #334155;
            border-top-left-radius: 0.5rem;
            border-top-right-radius: 0.5rem;
        }

        .copy-button {
            background-color: #4a5568;
            color: #e2e8f0;
            border: none;
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            cursor: pointer;
            font-size: 0.875rem;
            transition: background-color 0.2s;
        }

        .copy-button:hover {
            background-color: #718096;
        }

        .copy-button .fa-copy {
            margin-right: 0.375rem;
        }

        .copy-button .fa-check {
            margin-right: 0.375rem;
            color: #48bb78;
        }

        .code-block {
            background-color: #1e293b;
            color: #e2e8f0;
            padding: 1rem;
            border-bottom-left-radius: 0.5rem;
            border-bottom-right-radius: 0.5rem;
            font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
            white-space: pre-wrap;
            word-wrap: break-word;
            font-size: 0.875em;
            line-height: 1.6;
            overflow-x: auto;
        }

        .copy-button:focus {
            outline: none;
            box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.5);
        }

        .code-block .comment {
            color: #6ee7b7;
        }

        /* Emerald 300 */
        .code-block .keyword {
            color: #93c5fd;
        }

        /* Blue 300 */
        .code-block .string {
            color: #fde047;
        }

        /* Yellow 300 */
        .code-block .number {
            color: #fdbb74;
        }

        /* Orange 300 */
        .code-block .function {
            color: #d8b4fe;
        }

        /* Purple 300 */
        .code-block .def-name {
            color: #67e8f9;
        }

        /* Cyan 300 */
        .code-block .operator {
            color: #fda4af;
        }

        /* Rose 300 */
        .code-block .boolean {
            color: #fdbb74;
        }

        /* Orange 300 */
        .code-block .none {
            color: #d8b4fe;
        }

        /* Purple 300 */

        ::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #4a5568;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb {
            background: #718096;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #a0aec0;
        }

        img {
            max-width: 100%;
            height: auto;
            border-radius: 0.375rem;
        }

        /* Customizations for Lesson 6 - Teal/Cyan theme */
        .text-theme-700 {
            color: #0f766e;
        }

        /* Teal 700 */
        .text-theme-600 {
            color: #0d9488;
        }

        /* Teal 600 */
        .bg-theme-500 {
            background-color: #14b8a6;
        }

        /* Teal 500 */
        .hover\:bg-theme-700:hover {
            background-color: #0f766e;
        }

        .text-teal-500 {
            color: #14b8a6;
        }

        .text-cyan-600 {
            color: #0891b2;
        }
    </style>
</head>

<body class="text-gray-800">

    <nav id="navbar" class="p-4">
        <div class="container mx-auto flex flex-wrap justify-between items-center">
            <h1 class="text-xl font-bold text-theme-600">Python Bu·ªïi 6: H√†m (Function)</h1>
            <div class="flex items-center mt-2 sm:mt-0">
                <button id="prevSlide"
                    class="bg-theme-500 hover:bg-theme-700 text-white font-bold py-2 px-4 rounded-lg shadow mr-2 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    <i class="fas fa-arrow-left mr-1"></i> Tr∆∞·ªõc
                </button>
                <button id="nextSlide"
                    class="bg-theme-500 hover:bg-theme-700 text-white font-bold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    Sau <i class="fas fa-arrow-right ml-1"></i>
                </button>
            </div>
            <div class="text-sm text-gray-600 mt-2 sm:mt-0 ml-0 sm:ml-4">
                Slide <span id="currentSlideNum">1</span> / <span id="totalSlidesNum"></span>
            </div>
        </div>
    </nav>

    <div class="container mx-auto p-4 slide-container">
        <!-- Slide 1: Title -->
        <div id="slide-1" class="slide">
            <div class="slide-content-wrapper justify-center flex flex-col">
                <h2 class="text-4xl font-bold text-center text-theme-700 mb-6">Bu·ªïi 6: S·ª©c M·∫°nh C·ªßa H√†m (Function)</h2>
                <p class="text-2xl text-center text-gray-600 mb-12">Vi·∫øt code th√¥ng minh h∆°n, kh√¥ng ph·∫£i nhi·ªÅu h∆°n!</p>
                <div class="flex justify-center my-8">
                    <img src="https://placehold.co/400x250/14B8A6/FFFFFF?text=Functions" alt="[H√¨nh ·∫£nh v·ªÅ H√†m]"
                        class="shadow-md">
                </div>
                <p class="text-center mt-8 text-lg text-gray-700">H√¥m nay ch√∫ng ta s·∫Ω h·ªçc c√°ch ƒë√≥ng g√≥i v√† t√°i s·ª≠ d·ª•ng
                    code.</p>
            </div>
        </div>

        <!-- Slide 2: Why use functions? -->
        <div id="slide-2" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">1. T·∫°i Sao Ph·∫£i D√πng H√†m?</h3>
                <p class="mb-4 text-lg">H√£y t∆∞·ªüng t∆∞·ª£ng b·∫°n ph·∫£i vi·∫øt ƒëi vi·∫øt l·∫°i c√πng m·ªôt ƒëo·∫°n code ·ªü nhi·ªÅu n∆°i kh√°c
                    nhau. R·∫•t t·ªën th·ªùi gian v√† kh√≥ s·ª≠a ch·ªØa ph·∫£i kh√¥ng?</p>
                <p class="mb-4 text-lg">H√†m (Function) ra ƒë·ªùi ƒë·ªÉ gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ ƒë√≥! H√†m l√† m·ªôt kh·ªëi code ƒë∆∞·ª£c ƒë·∫∑t
                    t√™n, d√πng ƒë·ªÉ th·ª±c hi·ªán m·ªôt c√¥ng vi·ªác c·ª• th·ªÉ. B·∫°n c√≥ th·ªÉ "g·ªçi" n√≥ ra ƒë·ªÉ ch·∫°y b·∫•t c·ª© khi n√†o c·∫ßn.</p>
                <div class="grid md:grid-cols-2 gap-6 mt-6">
                    <div class="bg-green-100 p-4 rounded-lg border-l-4 border-green-500">
                        <h4 class="font-bold text-xl text-green-800 mb-2"><i class="fas fa-recycle mr-2"></i>T√°i s·ª≠ d·ª•ng
                            Code</h4>
                        <p>Vi·∫øt m·ªôt l·∫ßn, d√πng nhi·ªÅu l·∫ßn. Ti·∫øt ki·ªám c√¥ng s·ª©c v√† gi·∫£m s·ªë d√≤ng code.</p>
                    </div>
                    <div class="bg-blue-100 p-4 rounded-lg border-l-4 border-blue-500">
                        <h4 class="font-bold text-xl text-blue-800 mb-2"><i class="fas fa-sitemap mr-2"></i>T·ªï ch·ª©c Code
                        </h4>
                        <p>Chia ch∆∞∆°ng tr√¨nh l·ªõn th√†nh c√°c h√†m nh·ªè h∆°n, m·ªói h√†m l√†m m·ªôt vi·ªác. Gi√∫p code d·ªÖ ƒë·ªçc, d·ªÖ hi·ªÉu
                            h∆°n.</p>
                    </div>
                    <div class="bg-yellow-100 p-4 rounded-lg border-l-4 border-yellow-500">
                        <h4 class="font-bold text-xl text-yellow-800 mb-2"><i class="fas fa-wrench mr-2"></i>D·ªÖ b·∫£o tr√¨
                        </h4>
                        <p>Khi c·∫ßn s·ª≠a l·ªói ho·∫∑c n√¢ng c·∫•p m·ªôt ch·ª©c nƒÉng, b·∫°n ch·ªâ c·∫ßn s·ª≠a ·ªü m·ªôt n∆°i duy nh·∫•t: b√™n trong
                            h√†m ƒë√≥.</p>
                    </div>
                    <div class="bg-purple-100 p-4 rounded-lg border-l-4 border-purple-500">
                        <h4 class="font-bold text-xl text-purple-800 mb-2"><i class="fas fa-puzzle-piece mr-2"></i>T√≠nh
                            Module</h4>
                        <p>Gi√∫p x√¢y d·ª±ng c√°c ch∆∞∆°ng tr√¨nh ph·ª©c t·∫°p t·ª´ nh·ªØng "vi√™n g·∫°ch" nh·ªè l√† c√°c h√†m.</p>
                    </div>
                </div>
                <p class="text-center text-xl mt-8 font-semibold text-gray-700">Nguy√™n t·∫Øc v√†ng: <span
                        class="text-theme-600">Don't Repeat Yourself (DRY)</span> - ƒê·ª´ng l·∫∑p l·∫°i ch√≠nh m√¨nh!</p>
            </div>
        </div>

        <!-- Slide 3: Basic Syntax -->
        <div id="slide-3" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">2. C√∫ Ph√°p C∆° B·∫£n</h3>
                <p class="mb-4 text-lg">ƒê·ªÉ t·∫°o m·ªôt h√†m trong Python, ch√∫ng ta s·ª≠ d·ª•ng t·ª´ kh√≥a <code>def</code>.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="keyword">def</span> <span class="def-name">ten_ham</span>(<span class="variable">tham_so_1</span>, <span class="variable">tham_so_2</span>, ...):
    <span class="comment"># Kh·ªëi l·ªánh c·ªßa h√†m (ph·∫£i th·ª•t v√†o)</span>
    <span class="variable">hanh_dong_1</span>
    <span class="variable">hanh_dong_2</span>
    <span class="keyword">return</span> <span class="variable">ket_qua</span></code></pre>
                </div>
                <ul class="list-disc list-inside mb-4 pl-4 text-gray-700 space-y-2 mt-4 text-lg">
                    <li><code>def</code>: T·ª´ kh√≥a ƒë·ªÉ b·∫Øt ƒë·∫ßu ƒë·ªãnh nghƒ©a m·ªôt h√†m.</li>
                    <li><code>ten_ham</code>: T√™n b·∫°n ƒë·∫∑t cho h√†m (tu√¢n theo quy t·∫Øc ƒë·∫∑t t√™n bi·∫øn).</li>
                    <li><code>(...)</code>: C·∫∑p ngo·∫∑c ƒë∆°n, b√™n trong ch·ª©a c√°c <strong>tham s·ªë (parameters)</strong> - l√†
                        c√°c gi√° tr·ªã ƒë·∫ßu v√†o c·ªßa h√†m. C√≥ th·ªÉ kh√¥ng c√≥ tham s·ªë n√†o.</li>
                    <li><code>:</code>: D·∫•u hai ch·∫•m k·∫øt th√∫c d√≤ng ƒë·ªãnh nghƒ©a h√†m.</li>
                    <li><strong>Kh·ªëi l·ªánh c·ªßa h√†m:</strong> To√†n b·ªô code b√™n trong h√†m, ph·∫£i ƒë∆∞·ª£c th·ª•t v√†o ƒë·∫ßu d√≤ng.
                    </li>
                    <li><code>return</code>: T·ª´ kh√≥a (t√πy ch·ªçn) ƒë·ªÉ tr·∫£ v·ªÅ m·ªôt gi√° tr·ªã t·ª´ h√†m.</li>
                </ul>
                <p class="mb-2 mt-6 font-medium text-xl">ƒê·ªãnh nghƒ©a h√†m vs. G·ªçi h√†m</p>
                <p class="text-lg">ƒê·ªãnh nghƒ©a h√†m (nh∆∞ tr√™n) ch·ªâ l√† t·∫°o ra "b·∫£n thi·∫øt k·∫ø". ƒê·ªÉ h√†m th·ª±c s·ª± ch·∫°y, b·∫°n ph·∫£i
                    <strong>g·ªçi (call)</strong> n√≥.
                </p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="comment"># ƒê·ªãnh nghƒ©a h√†m</span>
<span class="keyword">def</span> <span class="def-name">xin_chao</span>():
    <span class="function">print</span>(<span class="string">"Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi Python!"</span>)

<span class="comment"># G·ªçi h√†m ƒë·ªÉ th·ª±c thi</span>
<span class="def-name">xin_chao</span>()
<span class="comment"># Output: Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi Python!</span></code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 4: Function with no input -->
        <div id="slide-4" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">2.1. H√†m kh√¥ng c√≥ gi√° tr·ªã ƒë·∫ßu v√†o</h3>
                <p class="mb-4 text-lg">ƒê√¢y l√† lo·∫°i h√†m ƒë∆°n gi·∫£n nh·∫•t. N√≥ kh√¥ng nh·∫≠n b·∫•t k·ª≥ d·ªØ li·ªáu n√†o t·ª´ b√™n ngo√†i v√†
                    ch·ªâ th·ª±c hi·ªán m·ªôt kh·ªëi l·ªánh c·ªë ƒë·ªãnh m·ªói khi ƒë∆∞·ª£c g·ªçi.</p>
                <p class="mb-2 font-medium">V√≠ d·ª•: Hi·ªÉn th·ªã m·ªôt menu l·ª±a ch·ªçn.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="keyword">def</span> <span class="def-name">hien_thi_menu</span>():
    <span class="function">print</span>(<span class="string">"--- MENU ---"</span>)
    <span class="function">print</span>(<span class="string">"1. Xem s·∫£n ph·∫©m"</span>)
    <span class="function">print</span>(<span class="string">"2. Th√™m s·∫£n ph·∫©m"</span>)
    <span class="function">print</span>(<span class="string">"3. Tho√°t"</span>)
    <span class="function">print</span>(<span class="string">"------------"</span>)

<span class="comment"># M·ªói khi c·∫ßn hi·ªÉn th·ªã menu, ch·ªâ c·∫ßn g·ªçi h√†m</span>
<span class="function">print</span>(<span class="string">"Ch√†o m·ª´ng ƒë·∫øn v·ªõi c·ª≠a h√†ng!"</span>)
<span class="def-name">hien_thi_menu</span>()

<span class="variable">lua_chon</span> <span class="operator">=</span> <span class="function">input</span>(<span class="string">"Nh·∫≠p l·ª±a ch·ªçn: "</span>)
<span class="function">print</span>(<span class="string">f"B·∫°n ƒë√£ ch·ªçn {lua_chon}"</span>)

<span class="comment">#... sau ƒë√≥ ·ªü m·ªôt n∆°i kh√°c trong ch∆∞∆°ng tr√¨nh</span>
<span class="function">print</span>(<span class="string">"\nQuay tr·ªü l·∫°i menu ch√≠nh:"</span>)
<span class="def-name">hien_thi_menu</span>()
</code></pre>
                </div>
                <p class="mt-4 text-lg">H·ªØu √≠ch cho c√°c t√°c v·ª• l·∫∑p ƒëi l·∫∑p l·∫°i kh√¥ng c·∫ßn thay ƒë·ªïi, gi√∫p code c·ªßa b·∫°n g·ªçn
                    g√†ng h∆°n r·∫•t nhi·ªÅu.</p>
            </div>
        </div>

        <!-- Slide 5: Function with input -->
        <div id="slide-5" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">2.2. H√†m c√≥ gi√° tr·ªã ƒë·∫ßu v√†o (Tham s·ªë)</h3>
                <p class="mb-4 text-lg">H·∫ßu h·∫øt c√°c h√†m ƒë·ªÅu c·∫ßn x·ª≠ l√Ω d·ªØ li·ªáu. Ch√∫ng ta truy·ªÅn d·ªØ li·ªáu v√†o h√†m th√¥ng qua
                    c√°c <strong>tham s·ªë (parameters)</strong>.</p>
                <p class="mb-2 text-lg">Tham s·ªë l√† c√°c bi·∫øn ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a trong c·∫∑p ngo·∫∑c ƒë∆°n <code>()</code> c·ªßa h√†m.
                </p>
                <p class="mb-2 font-medium">V√≠ d·ª•: M·ªôt h√†m ch√†o h·ªèi theo t√™n.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="comment"># 'ten' l√† m·ªôt tham s·ªë (parameter)</span>
<span class="keyword">def</span> <span class="def-name">chao_hoi</span>(<span class="variable">ten</span>):
    <span class="function">print</span>(<span class="string">f"Xin ch√†o, {ten}! R·∫•t vui ƒë∆∞·ª£c g·∫∑p b·∫°n."</span>)

<span class="comment"># Khi g·ªçi h√†m, ta truy·ªÅn v√†o m·ªôt 'ƒë·ªëi s·ªë' (argument)</span>
<span class="def-name">chao_hoi</span>(<span class="string">"An"</span>)   <span class="comment"># "An" l√† ƒë·ªëi s·ªë</span>
<span class="def-name">chao_hoi</span>(<span class="string">"B√¨nh"</span>) <span class="comment"># "B√¨nh" l√† ƒë·ªëi s·ªë</span>

<span class="variable">ten_hoc_sinh</span> <span class="operator">=</span> <span class="string">"C√∫c"</span>
<span class="def-name">chao_hoi</span>(<span class="variable">ten_hoc_sinh</span>)
</code></pre>
                </div>
                <p class="mb-2 font-medium mt-4">H√†m c√≥ th·ªÉ c√≥ nhi·ªÅu tham s·ªë.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="keyword">def</span> <span class="def-name">thong_tin_sv</span>(<span class="variable">ten</span>, <span class="variable">tuoi</span>, <span class="variable">lop</span>):
    <span class="function">print</span>(<span class="string">f"--- Th√¥ng Tin Sinh Vi√™n ---"</span>)
    <span class="function">print</span>(<span class="string">f"T√™n: {ten}"</span>)
    <span class="function">print</span>(<span class="string">f"Tu·ªïi: {tuoi}"</span>)
    <span class="function">print</span>(<span class="string">f"L·ªõp: {lop}"</span>)

<span class="def-name">thong_tin_sv</span>(<span class="string">"Mai"</span>, <span class="number">21</span>, <span class="string">"L·∫≠p tr√¨nh Python"</span>)
</code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 6: Function with return value -->
        <div id="slide-6" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">2.3. H√†m c√≥ gi√° tr·ªã tr·∫£ v·ªÅ (return)</h3>
                <p class="mb-4 text-lg">C√°c h√†m tr∆∞·ªõc ƒë√≥ ch·ªâ in ra m√†n h√¨nh. Nh∆∞ng th∆∞·ªùng th√¨ ch√∫ng ta mu·ªën h√†m th·ª±c
                    hi·ªán t√≠nh to√°n v√† <strong>tr·∫£ v·ªÅ k·∫øt qu·∫£</strong> ƒë·ªÉ c√≥ th·ªÉ s·ª≠ d·ª•ng ·ªü n∆°i kh√°c.</p>
                <p class="mb-2 text-lg">T·ª´ kh√≥a <code>return</code> ƒë∆∞·ª£c d√πng cho vi·ªác n√†y. Khi g·∫∑p <code>return</code>,
                    h√†m s·∫Ω ngay l·∫≠p t·ª©c k·∫øt th√∫c v√† "g·ª≠i l·∫°i" gi√° tr·ªã theo sau n√≥.</p>
                <p class="mb-2 font-medium">V√≠ d·ª•: H√†m t√≠nh t·ªïng hai s·ªë.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="keyword">def</span> <span class="def-name">tinh_tong</span>(<span class="variable">a</span>, <span class="variable">b</span>):
    <span class="variable">tong</span> <span class="operator">=</span> <span class="variable">a</span> <span class="operator">+</span> <span class="variable">b</span>
    <span class="keyword">return</span> <span class="variable">tong</span>

<span class="comment"># G·ªçi h√†m v√† h·ª©ng k·∫øt qu·∫£ tr·∫£ v·ªÅ v√†o m·ªôt bi·∫øn</span>
<span class="variable">ket_qua_1</span> <span class="operator">=</span> <span class="def-name">tinh_tong</span>(<span class="number">5</span>, <span class="number">10</span>)
<span class="function">print</span>(<span class="string">f"T·ªïng c·ªßa 5 v√† 10 l√†: {ket_qua_1}"</span>) <span class="comment"># Output: 15</span>

<span class="variable">ket_qua_2</span> <span class="operator">=</span> <span class="def-name">tinh_tong</span>(<span class="variable">ket_qua_1</span>, <span class="number">20</span>) <span class="comment"># S·ª≠ d·ª•ng k·∫øt qu·∫£ c≈© cho l·∫ßn t√≠nh m·ªõi</span>
<span class="function">print</span>(<span class="string">f"K·∫øt qu·∫£ m·ªõi l√†: {ket_qua_2}"</span>) <span class="comment"># Output: 35</span>

<span class="comment"># C√≥ th·ªÉ vi·∫øt g·ªçn h∆°n</span>
<span class="keyword">def</span> <span class="def-name">tinh_hieu</span>(<span class="variable">x</span>, <span class="variable">y</span>):
    <span class="keyword">return</span> <span class="variable">x</span> <span class="operator">-</span> <span class="variable">y</span>

<span class="function">print</span>(<span class="string">f"Hi·ªáu c·ªßa 100 v√† 45 l√†: {tinh_hieu(100, 45)}"</span>)
</code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 7: Function with NO return value -->
        <div id="slide-7" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">2.4. H√†m kh√¥ng c√≥ gi√° tr·ªã tr·∫£ v·ªÅ</h3>
                <p class="mb-4 text-lg">"·ª¶a, v·∫≠y nh·ªØng h√†m kh√¥ng c√≥ `return` th√¨ sao? V√≠ d·ª• nh∆∞ h√†m `chao_hoi()` l√∫c
                    n√£y?"</p>
                <p class="mb-4 text-lg">Th·ª±c ra, <strong>m·ªçi h√†m trong Python ƒë·ªÅu tr·∫£ v·ªÅ m·ªôt gi√° tr·ªã n√†o ƒë√≥</strong>.
                    N·∫øu b·∫°n kh√¥ng vi·∫øt `return` m·ªôt c√°ch t∆∞·ªùng minh, h√†m s·∫Ω t·ª± ƒë·ªông tr·∫£ v·ªÅ m·ªôt gi√° tr·ªã ƒë·∫∑c bi·ªát l√†
                    <code>None</code>.
                </p>
                <p class="text-lg"><code>None</code> l√† m·ªôt ki·ªÉu d·ªØ li·ªáu ri√™ng trong Python, d√πng ƒë·ªÉ bi·ªÉu th·ªã s·ª± "v·∫Øng
                    m·∫∑t" ho·∫∑c "kh√¥ng c√≥ gi√° tr·ªã".</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="keyword">def</span> <span class="def-name">ham_in_an</span>():
    <span class="function">print</span>(<span class="string">"H√†m n√†y ch·ªâ in ra th√¥i, kh√¥ng return g√¨ c·∫£."</span>)

<span class="variable">ket_qua</span> <span class="operator">=</span> <span class="def-name">ham_in_an</span>()
<span class="comment"># Output: H√†m n√†y ch·ªâ in ra th√¥i, kh√¥ng return g√¨ c·∫£.</span>

<span class="function">print</span>(<span class="string">"Gi√° tr·ªã m√† h√†m tr·∫£ v·ªÅ l√†:"</span>, <span class="variable">ket_qua</span>)
<span class="comment"># Output: Gi√° tr·ªã m√† h√†m tr·∫£ v·ªÅ l√†: None</span>

<span class="function">print</span>(<span class="string">"Ki·ªÉu d·ªØ li·ªáu c·ªßa n√≥ l√†:"</span>, <span class="function">type</span>(<span class="variable">ket_qua</span>))
<span class="comment"># Output: Ki·ªÉu d·ªØ li·ªáu c·ªßa n√≥ l√†: &lt;class 'NoneType'&gt;</span>
</code></pre>
                </div>
                <p class="mt-4 text-lg font-semibold">T√≥m l·∫°i: H√†m ch·ªâ l√†m m·ªôt vi·ªác (nh∆∞ in ra m√†n h√¨nh) th∆∞·ªùng kh√¥ng
                    c·∫ßn `return`. H√†m c√≥ nhi·ªám v·ª• t√≠nh to√°n, x·ª≠ l√Ω ƒë·ªÉ cho ra k·∫øt qu·∫£ th√¨ <strong>ph·∫£i</strong> c√≥
                    `return`.</p>
            </div>
        </div>

        <!-- Slide 8: Integration with Lists -->
        <div id="slide-8" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">3. K·∫øt H·ª£p H√†m v√† List</h3>
                <p class="mb-4 text-lg">ƒê√¢y l√† l√∫c s·ª©c m·∫°nh c·ªßa h√†m th·ª±c s·ª± t·ªèa s√°ng! Ch√∫ng ta c√≥ th·ªÉ vi·∫øt c√°c h√†m ƒë·ªÉ x·ª≠
                    l√Ω c√°c t√°c v·ª• ph·ª©c t·∫°p tr√™n List, gi√∫p code g·ªçn g√†ng v√† d·ªÖ hi·ªÉu h∆°n.</p>
                <p class="mb-2 font-medium text-xl">B√†i to√°n: Cho m·ªôt danh s√°ch ƒëi·ªÉm, vi·∫øt ch∆∞∆°ng tr√¨nh in ra ƒëi·ªÉm trung
                    b√¨nh v√† x·∫øp lo·∫°i.</p>
                <p class="mb-4 text-lg">Thay v√¨ vi·∫øt t·∫•t c·∫£ code chung m·ªôt ch·ªó, h√£y chia nh·ªè b√†i to√°n th√†nh c√°c h√†m:</p>
                <ol class="list-decimal list-inside mb-4 pl-4 text-gray-700 text-lg space-y-2">
                    <li>M·ªôt h√†m ƒë·ªÉ t√≠nh ƒëi·ªÉm trung b√¨nh (nh·∫≠n v√†o list ƒëi·ªÉm, tr·∫£ v·ªÅ ƒëi·ªÉm trung b√¨nh).</li>
                    <li>M·ªôt h√†m ƒë·ªÉ x·∫øp lo·∫°i (nh·∫≠n v√†o ƒëi·ªÉm trung b√¨nh, tr·∫£ v·ªÅ chu·ªói x·∫øp lo·∫°i).</li>
                </ol>
                <div class="flex justify-center mt-8">
                    <img src="https://placehold.co/400x250/2DD4BF/FFFFFF?text=Functions+%26+Lists"
                        alt="[H√¨nh ·∫£nh H√†m v√† List]" class="shadow-md">
                </div>
            </div>
        </div>

        <!-- Slide 9: List example -->
        <div id="slide-9" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">3.1. V√≠ d·ª•: X·ª≠ l√Ω danh s√°ch ƒëi·ªÉm</h3>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="comment"># H√†m 1: T√≠nh ƒëi·ªÉm trung b√¨nh</span>
<span class="keyword">def</span> <span class="def-name">tinh_diem_trung_binh</span>(<span class="variable">danh_sach_diem</span>):
    <span class="keyword">if</span> <span class="keyword">not</span> <span class="variable">danh_sach_diem</span>: <span class="comment"># Ki·ªÉm tra n·∫øu list r·ªóng</span>
        <span class="keyword">return</span> <span class="number">0</span>
    <span class="variable">tong</span> <span class="operator">=</span> <span class="function">sum</span>(<span class="variable">danh_sach_diem</span>)
    <span class="keyword">return</span> <span class="variable">tong</span> / <span class="function">len</span>(<span class="variable">danh_sach_diem</span>)

<span class="comment"># H√†m 2: X·∫øp lo·∫°i h·ªçc l·ª±c</span>
<span class="keyword">def</span> <span class="def-name">xep_loai</span>(<span class="variable">diem_tb</span>):
    <span class="keyword">if</span> <span class="variable">diem_tb</span> <span class="operator">&gt;=</span> <span class="number">8.0</span>:
        <span class="keyword">return</span> <span class="string">"Gi·ªèi"</span>
    <span class="keyword">elif</span> <span class="variable">diem_tb</span> <span class="operator">&gt;=</span> <span class="number">6.5</span>:
        <span class="keyword">return</span> <span class="string">"Kh√°"</span>
    <span class="keyword">elif</span> <span class="variable">diem_tb</span> <span class="operator">&gt;=</span> <span class="number">5.0</span>:
        <span class="keyword">return</span> <span class="string">"Trung b√¨nh"</span>
    <span class="keyword">else</span>:
        <span class="keyword">return</span> <span class="string">"Y·∫øu"</span>

<span class="comment"># --- Ch∆∞∆°ng tr√¨nh ch√≠nh ---</span>
<span class="variable">diem_cua_an</span> <span class="operator">=</span> [<span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">7.5</span>, <span class="number">8.5</span>]

<span class="comment"># B∆∞·ªõc 1: G·ªçi h√†m t√≠nh ƒëi·ªÉm trung b√¨nh</span>
<span class="variable">diem_tb_cua_an</span> <span class="operator">=</span> <span class="def-name">tinh_diem_trung_binh</span>(<span class="variable">diem_cua_an</span>)
<span class="function">print</span>(<span class="string">f"ƒêi·ªÉm trung b√¨nh c·ªßa An: {diem_tb_cua_an:.2f}"</span>)

<span class="comment"># B∆∞·ªõc 2: D√πng k·∫øt qu·∫£ ƒë√≥ ƒë·ªÉ g·ªçi h√†m x·∫øp lo·∫°i</span>
<span class="variable">hoc_luc_cua_an</span> <span class="operator">=</span> <span class="def-name">xep_loai</span>(<span class="variable">diem_tb_cua_an</span>)
<span class="function">print</span>(<span class="string">f"H·ªçc l·ª±c c·ªßa An: {hoc_luc_cua_an}"</span>)
</code></pre>
                </div>
                <p class="mt-4 text-lg">B·∫±ng c√°ch chia nh·ªè, code tr·ªü n√™n c·ª±c k·ª≥ r√µ r√†ng: m·ªói h√†m c√≥ m·ªôt nhi·ªám v·ª• duy
                    nh·∫•t v√† ch∆∞∆°ng tr√¨nh ch√≠nh ch·ªâ vi·ªác g·ªçi c√°c h√†m theo ƒë√∫ng th·ª© t·ª±.</p>
            </div>
        </div>

        <!-- Slide 10: Integration with Dictionary -->
        <div id="slide-10" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">4. K·∫øt H·ª£p H√†m v√† Dictionary</h3>
                <p class="mb-4 text-lg">T∆∞∆°ng t·ª± v·ªõi List, vi·ªác d√πng h√†m ƒë·ªÉ x·ª≠ l√Ω Dictionary v√† List ch·ª©a Dictionary
                    gi√∫p ch∆∞∆°ng tr√¨nh c√≥ c·∫•u tr√∫c r·∫•t t·ªët.</p>
                <p class="mb-2 font-medium text-xl">B√†i to√°n: In th√¥ng tin c·ªßa m·ªôt sinh vi√™n t·ª´ m·ªôt danh s√°ch l·ªõp.</p>
                <p class="mb-4 text-lg">Ch√∫ng ta s·∫Ω t·∫°o c√°c h√†m cho t·ª´ng t√°c v·ª• nh·ªè:</p>
                <ol class="list-decimal list-inside mb-4 pl-4 text-gray-700 text-lg space-y-2">
                    <li>H√†m ƒë·ªÉ t√¨m m·ªôt sinh vi√™n trong danh s√°ch d·ª±a v√†o m√£ s·ªë.</li>
                    <li>H√†m ƒë·ªÉ in th√¥ng tin chi ti·∫øt c·ªßa m·ªôt sinh vi√™n (m·ªôt dictionary).</li>
                </ol>
                <div class="flex justify-center mt-8">
                    <img src="https://placehold.co/450x250/06B6D4/FFFFFF?text=Functions+%26+Dictionaries"
                        alt="[H√¨nh ·∫£nh H√†m v√† Dictionary]" class="shadow-md">
                </div>
            </div>
        </div>

        <!-- Slide 11: Dictionary example -->
        <div id="slide-11" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">4.1. V√≠ d·ª•: T√¨m v√† in th√¥ng tin sinh vi√™n</h3>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="comment"># H√†m t√¨m sinh vi√™n theo m√£, tr·∫£ v·ªÅ dictionary c·ªßa SV ƒë√≥ ho·∫∑c None</span>
<span class="keyword">def</span> <span class="def-name">tim_sinh_vien</span>(<span class="variable">danh_sach</span>, <span class="variable">ma_sv_can_tim</span>):
    <span class="keyword">for</span> <span class="variable">sv</span> <span class="keyword">in</span> <span class="variable">danh_sach</span>:
        <span class="keyword">if</span> <span class="variable">sv</span>[<span class="string">'ma_sv'</span>] <span class="operator">==</span> <span class="variable">ma_sv_can_tim</span>:
            <span class="keyword">return</span> <span class="variable">sv</span> <span class="comment"># Tr·∫£ v·ªÅ c·∫£ dictionary khi t√¨m th·∫•y</span>
    <span class="keyword">return</span> <span class="none">None</span> <span class="comment"># Tr·∫£ v·ªÅ None n·∫øu kh√¥ng t√¨m th·∫•y</span>

<span class="comment"># H√†m in th√¥ng tin chi ti·∫øt t·ª´ m·ªôt dictionary sinh vi√™n</span>
<span class="keyword">def</span> <span class="def-name">in_chi_tiet_sv</span>(<span class="variable">sv_info</span>):
    <span class="keyword">if</span> <span class="variable">sv_info</span>: <span class="comment"># Ki·ªÉm tra xem c√≥ ph·∫£i l√† None kh√¥ng</span>
        <span class="function">print</span>(<span class="string">f"--- Th√¥ng tin c·ªßa {sv_info['ten']} ---"</span>)
        <span class="function">print</span>(<span class="string">f"M√£ SV: {sv_info['ma_sv']}"</span>)
        <span class="function">print</span>(<span class="string">f"ƒêi·ªÉm TB: {sv_info['diem_tb']}"</span>)
    <span class="keyword">else</span>:
        <span class="function">print</span>(<span class="string">"Kh√¥ng t√¨m th·∫•y sinh vi√™n."</span>)

<span class="comment"># --- Ch∆∞∆°ng tr√¨nh ch√≠nh ---</span>
<span class="variable">danh_sach_lop</span> <span class="operator">=</span> [
    {<span class="string">'ma_sv'</span>: <span class="string">'SV001'</span>, <span class="string">'ten'</span>: <span class="string">'An'</span>, <span class="string">'diem_tb'</span>: <span class="number">8.5</span>},
    {<span class="string">'ma_sv'</span>: <span class="string">'SV002'</span>, <span class="string">'ten'</span>: <span class="string">'B√¨nh'</span>, <span class="string">'diem_tb'</span>: <span class="number">7.0</span>}
]

<span class="variable">sv_can_tim</span> <span class="operator">=</span> <span class="def-name">tim_sinh_vien</span>(<span class="variable">danh_sach_lop</span>, <span class="string">'SV002'</span>)
<span class="def-name">in_chi_tiet_sv</span>(<span class="variable">sv_can_tim</span>)

<span class="function">print</span>(<span class="string">"\n"</span>) <span class="comment"># In d√≤ng tr·ªëng</span>

<span class="variable">sv_khong_co</span> <span class="operator">=</span> <span class="def-name">tim_sinh_vien</span>(<span class="variable">danh_sach_lop</span>, <span class="string">'SV003'</span>)
<span class="def-name">in_chi_tiet_sv</span>(<span class="variable">sv_khong_co</span>)
</code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 12: Exercises -->
        <div id="slide-12" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-cyan-600 mb-4">5. B√†i T·∫≠p Th·ª±c H√†nh</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i 1: T√≠nh di·ªán t√≠ch (D·ªÖ)</h4>
                <p class="mb-2 text-lg"><strong>Y√™u c·∫ßu:</strong></p>
                <ol class="list-decimal list-inside mb-4 pl-4 text-gray-700">
                    <li>Vi·∫øt h√†m t√™n `tinh_dien_tich_hcn` nh·∫≠n v√†o `chieu_dai` v√† `chieu_rong`, sau ƒë√≥ `return` v·ªÅ di·ªán
                        t√≠ch h√¨nh ch·ªØ nh·∫≠t.</li>
                    <li>Vi·∫øt h√†m t√™n `tinh_chu_vi_hcn` nh·∫≠n v√†o `chieu_dai` v√† `chieu_rong`, sau ƒë√≥ `return` v·ªÅ chu vi.
                    </li>
                    <li>Vi·∫øt ch∆∞∆°ng tr√¨nh ch√≠nh: h·ªèi ng∆∞·ªùi d√πng chi·ªÅu d√†i, chi·ªÅu r·ªông, sau ƒë√≥ g·ªçi 2 h√†m tr√™n v√† in k·∫øt
                        qu·∫£ ra m√†n h√¨nh.</li>
                </ol>
            </div>
        </div>

        <!-- Slide 13: Exercises -->
        <div id="slide-13" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-cyan-600 mb-4">5. B√†i T·∫≠p Th·ª±c H√†nh</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i 2: L·ªçc danh s√°ch (Trung b√¨nh)</h4>
                <p class="mb-2 text-lg"><strong>Y√™u c·∫ßu:</strong> Vi·∫øt m·ªôt h√†m t√™n l√† `loc_cac_chuoi_dai`.</p>
                <ul class="list-disc list-inside mb-4 pl-4 text-gray-700">
                    <li>H√†m n√†y nh·∫≠n v√†o 2 tham s·ªë: m·ªôt `danh_sach_chuoi` (list) v√† m·ªôt s·ªë nguy√™n `do_dai_toi_thieu`.
                    </li>
                    <li>H√†m s·∫Ω `return` v·ªÅ m·ªôt <strong>list m·ªõi</strong> ch·ªâ ch·ª©a nh·ªØng chu·ªói trong `danh_sach_chuoi` c√≥
                        ƒë·ªô d√†i l·ªõn h∆°n ho·∫∑c b·∫±ng `do_dai_toi_thieu`.</li>
                </ul>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button" onclick="copyCode(this)"><i
                                class="far fa-copy"></i> Sao ch√©p</button></div>
                    <pre class="code-block"><code><span class="variable">cac_tu</span> <span class="operator">=</span> [<span class="string">"python"</span>, <span class="string">"is"</span>, <span class="string">"awesome"</span>, <span class="string">"and"</span>, <span class="string">"fun"</span>]

<span class="variable">tu_dai</span> <span class="operator">=</span> <span class="def-name">loc_cac_chuoi_dai</span>(<span class="variable">cac_tu</span>, <span class="number">4</span>)
<span class="function">print</span>(<span class="variable">tu_dai</span>) <span class="comment"># Output mong mu·ªën: ['python', 'awesome']</span>

<span class="variable">tu_rat_dai</span> <span class="operator">=</span> <span class="def-name">loc_cac_chuoi_dai</span>(<span class="variable">cac_tu</span>, <span class="number">6</span>)
<span class="function">print</span>(<span class="variable">tu_rat_dai</span>) <span class="comment"># Output mong mu·ªën: ['python', 'awesome']</span>
</code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 14: Exercises -->
        <div id="slide-14" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-cyan-600 mb-4">5. B√†i T·∫≠p Th·ª±c H√†nh</h3>
                <h4 class="text-2xl font-medium text-gray-700 mb-3">B√†i 3: Qu·∫£n l√Ω s·∫£n ph·∫©m (Kh√≥)</h4>
                <p class="mb-2 text-lg"><strong>Y√™u c·∫ßu:</strong> D·ª±a v√†o ki·∫øn th·ª©c v·ªÅ List, Dictionary v√† H√†m, h√£y c·∫£i
                    ti·∫øn ch∆∞∆°ng tr√¨nh qu·∫£n l√Ω s·∫£n ph·∫©m:</p>
                <ol class="list-decimal list-inside mb-4 pl-4 text-gray-700 space-y-2">
                    <li>T·∫°o m·ªôt list c√°c dictionary s·∫£n ph·∫©m. M·ªói s·∫£n ph·∫©m c√≥ 'ten' v√† 'gia'.</li>
                    <li>Vi·∫øt h√†m `hien_thi_san_pham(danh_sach)` ƒë·ªÉ in to√†n b·ªô s·∫£n ph·∫©m ra m√†n h√¨nh m·ªôt c√°ch ƒë·∫πp m·∫Øt.
                    </li>
                    <li>Vi·∫øt h√†m `tinh_tong_gia_tri(danh_sach)` ƒë·ªÉ t√≠nh v√† `return` t·ªïng gi√° tr·ªã c·ªßa t·∫•t c·∫£ s·∫£n ph·∫©m
                        trong gi·ªè h√†ng.</li>
                    <li>Vi·∫øt ch∆∞∆°ng tr√¨nh ch√≠nh ƒë·ªÉ t·∫°o danh s√°ch, g·ªçi h√†m hi·ªÉn th·ªã, sau ƒë√≥ g·ªçi h√†m t√≠nh t·ªïng v√† in k·∫øt
                        qu·∫£.</li>
                </ol>
            </div>
        </div>

        <!-- Slide 15: Summary -->
        <div id="slide-15" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-theme-600 mb-4">6. T√≥m T·∫Øt Bu·ªïi H·ªçc</h3>
                <p class="mb-4 text-lg">H√¥m nay, ch√∫ng ta ƒë√£ m·ªü kh√≥a m·ªôt trong nh·ªØng kh√°i ni·ªám m·∫°nh m·∫Ω nh·∫•t c·ªßa l·∫≠p
                    tr√¨nh:</p>
                <ul class="list-disc list-inside mb-6 pl-4 text-gray-700 space-y-3">
                    <li><strong>T·∫°i sao c·∫ßn H√†m:</strong> ƒê·ªÉ t√°i s·ª≠ d·ª•ng, t·ªï ch·ª©c, v√† d·ªÖ b·∫£o tr√¨ code (Nguy√™n t·∫Øc DRY).
                    </li>
                    <li><strong>ƒê·ªãnh nghƒ©a v√† G·ªçi h√†m:</strong> S·ª≠ d·ª•ng `def` ƒë·ªÉ t·∫°o v√† `ten_ham()` ƒë·ªÉ ch·∫°y.</li>
                    <li><strong>C√°c lo·∫°i h√†m:</strong>
                        <ul class="list-circle list-inside ml-6 mt-2 space-y-1">
                            <li>Kh√¥ng c√≥ tham s·ªë, kh√¥ng c√≥ `return`.</li>
                            <li>C√≥ tham s·ªë ƒë·ªÉ nh·∫≠n d·ªØ li·ªáu ƒë·∫ßu v√†o.</li>
                            <li>C√≥ `return` ƒë·ªÉ tr·∫£ v·ªÅ k·∫øt qu·∫£.</li>
                            <li>H√†m kh√¥ng `return` t∆∞·ªùng minh s·∫Ω tr·∫£ v·ªÅ `None`.</li>
                        </ul>
                    </li>
                    <li><strong>T√≠ch h·ª£p:</strong> K·∫øt h·ª£p h√†m v·ªõi List v√† Dictionary ƒë·ªÉ gi·∫£i quy·∫øt c√°c b√†i to√°n ph·ª©c
                        t·∫°p m·ªôt c√°ch c√≥ c·∫•u tr√∫c v√† hi·ªáu qu·∫£.</li>
                </ul>
                <p class="text-lg mb-6 font-semibold">Vi·∫øt code theo h√†m l√† m·ªôt th√≥i quen c·ª±c k·ª≥ t·ªët, gi√∫p b·∫°n tr·ªü th√†nh
                    m·ªôt l·∫≠p tr√¨nh vi√™n chuy√™n nghi·ªáp!</p>
            </div>
        </div>

        <!-- Slide 16: Q&A -->
        <div id="slide-16" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center">
                <h3 class="text-4xl font-semibold text-theme-700 mb-6 text-center">7. H·ªèi & ƒê√°p</h3>
                <div class="flex justify-center mb-8">
                    <img src="https://placehold.co/300x200/0F766E/FFFFFF?text=Q%26A" alt="[H√¨nh ·∫£nh H·ªèi v√† ƒê√°p]"
                        class="shadow-md">
                </div>
                <h4 class="text-2xl font-semibold text-center text-gray-700">C√°c b·∫°n c√≥ c√¢u h·ªèi n√†o v·ªÅ H√†m kh√¥ng?</h4>
                <p class="text-center text-gray-600 mt-4 text-lg">H√£y h·ªèi ngay ƒë·ªÉ l√†m ch·ªß c√¥ng c·ª• m·∫°nh m·∫Ω n√†y nh√©!</p>
            </div>
        </div>

    </div>

    <script>
        const slides = Array.from(document.querySelectorAll('.slide'));
        const prevButton = document.getElementById('prevSlide');
        const nextButton = document.getElementById('nextSlide');
        const currentSlideNumDisplay = document.getElementById('currentSlideNum');
        const totalSlidesNumDisplay = document.getElementById('totalSlidesNum');
        const navbar = document.getElementById('navbar');

        let currentSlide = 0;
        if (slides.length > 0) {
            totalSlidesNumDisplay.textContent = slides.length;
        }

        function showSlide(index) {
            slides.forEach((slide, i) => {
                if (i === index) {
                    slide.style.display = 'flex';
                    setTimeout(() => {
                        slide.classList.add('active');
                    }, 10);
                } else {
                    slide.classList.remove('active');
                    setTimeout(() => {
                        if (!slide.classList.contains('active')) {
                            slide.style.display = 'none';
                        }
                    }, 400);
                }
            });
            currentSlideNumDisplay.textContent = index + 1;
            updateNavButtons();

            if (navbar) {
                window.scrollTo({ top: navbar.offsetHeight, behavior: 'smooth' });
            } else {
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }
        }

        function updateNavButtons() {
            if (!prevButton || !nextButton) return;
            prevButton.disabled = currentSlide === 0;
            nextButton.disabled = currentSlide === slides.length - 1;
        }

        if (prevButton && nextButton) {
            prevButton.addEventListener('click', () => {
                if (currentSlide > 0) {
                    currentSlide--;
                    showSlide(currentSlide);
                }
            });

            nextButton.addEventListener('click', () => {
                if (currentSlide < slides.length - 1) {
                    currentSlide++;
                    showSlide(currentSlide);
                }
            });
        }

        function copyCode(buttonElement) {
            const codeBlockContainer = buttonElement.closest('.code-block-container');
            const codeElement = codeBlockContainer.querySelector('.code-block');
            if (codeElement) {
                const codeToCopy = codeElement.innerText || codeElement.textContent;
                const textarea = document.createElement('textarea');
                textarea.value = codeToCopy;
                document.body.appendChild(textarea);
                textarea.select();
                try {
                    document.execCommand('copy');
                    const originalText = buttonElement.innerHTML;
                    buttonElement.innerHTML = '<i class="fas fa-check"></i> ƒê√£ ch√©p!';
                    setTimeout(() => {
                        buttonElement.innerHTML = originalText;
                    }, 1500);
                } catch (err) {
                    console.error('Kh√¥ng th·ªÉ sao ch√©p code: ', err);
                }
                document.body.removeChild(textarea);
            }
        }

        if (slides.length > 0) {
            showSlide(currentSlide);
        } else {
            if (currentSlideNumDisplay) currentSlideNumDisplay.textContent = '0';
            updateNavButtons();
        }
    </script>

</body>

</html>

/* ===== Web Basic English/lesson1.html ===== */
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Session 1: Basic Web Development - HTML & CSS</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            scroll-behavior: smooth;
            background-color: #f3f4f6;
        }

        #navbar {
            position: sticky;
            top: 0;
            z-index: 50;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .slide-container {
            padding-top: 1rem;
        }

        .slide {
            background-color: white;
            padding: 2.5rem;
            border-radius: 0.75rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            margin-bottom: 2rem;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
            min-height: calc(100vh - 120px);
            display: none;
            flex-direction: column;
            justify-content: center;
        }

        .slide.active {
            display: flex;
            opacity: 1;
            transform: translateY(0);
        }

        .slide-content-wrapper {
            flex-grow: 1;
            width: 100%;
            max-width: 1024px;
            margin: 0 auto;
        }

        .code-block-container {
            position: relative;
            background-color: #1e293b;
            border-radius: 0.5rem;
            margin-top: 1rem;
            margin-bottom: 1rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .code-block-header {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            padding: 0.5rem 0.75rem;
            background-color: #334155;
            border-top-left-radius: 0.5rem;
            border-top-right-radius: 0.5rem;
        }

        .copy-button {
            background-color: #4a5568;
            color: #e2e8f0;
            border: none;
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            cursor: pointer;
            font-size: 0.875rem;
            transition: background-color 0.2s;
        }

        .copy-button:hover {
            background-color: #718096;
        }

        .copy-button .fa-copy {
            margin-right: 0.375rem;
        }

        .copy-button .fa-check {
            margin-right: 0.375rem;
            color: #48bb78;
        }

        .copy-button:focus {
            outline: none;
            box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.5);
        }

        .code-block {
            background-color: #1e293b;
            color: #e2e8f0;
            padding: 1.5rem;
            border-bottom-left-radius: 0.5rem;
            border-bottom-right-radius: 0.5rem;
            font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
            white-space: pre-wrap;
            word-wrap: break-word;
            font-size: 0.875em;
            line-height: 1.6;
            overflow-x: auto;
        }

        .code-block .comment {
            color: #6a9955;
        }

        .code-block .keyword {
            color: #569cd6;
        }

        .code-block .tag {
            color: #569cd6;
        }

        .code-block .attr-name {
            color: #9cdcfe;
        }

        .code-block .attr-value {
            color: #ce9178;
        }

        .html-output {
            border: 1px solid #e2e8f0;
            padding: 1.5rem;
            margin-top: 1rem;
            border-radius: 0.5rem;
            background-color: #f7fafc;
            min-height: 100px;
            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);
        }

        img {
            max-width: 100%;
            height: auto;
            border-radius: 0.375rem;
        }
    </style>
</head>

<body class="text-gray-800">

    <nav id="navbar" class="p-4">
        <div class="container mx-auto flex flex-wrap justify-between items-center">
            <h1 class="text-xl font-bold text-blue-600">Web Basics - Session 1</h1>
            <div class="flex items-center mt-2 sm:mt-0">
                <button id="prevSlide"
                    class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg shadow mr-2 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    <i class="fas fa-arrow-left mr-1"></i> Prev
                </button>
                <button id="nextSlide"
                    class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    Next <i class="fas fa-arrow-right ml-1"></i>
                </button>
            </div>
            <div class="text-sm text-gray-600 mt-2 sm:mt-0 ml-0 sm:ml-4">
                Slide <span id="currentSlideNum">1</span> / <span id="totalSlidesNum"></span>
            </div>
        </div>
    </nav>

    <div class="container mx-auto p-4 slide-container">
        <!-- Slide 1: Welcome -->
        <div id="slide-1" class="slide">
            <div class="slide-content-wrapper text-center">
                <h2 class="text-5xl font-bold text-blue-700 mb-6">Session 1: Introduction to Web Development</h2>
                <p class="text-3xl text-gray-600 mb-12">Basic HTML & CSS - The Foundation of Every Website!</p>
                <img src="https://placehold.co/500x300/007BFF/FFFFFF?text=HTML+%26+CSS+Foundation"
                    alt="[Image of Web Programming HTML CSS]" class="rounded-lg shadow-xl mx-auto">
                <p class="mt-10 text-xl text-gray-700">Welcome to the first session on Web Development!</p>
            </div>
        </div>

        <!-- Slide 2: Intro HTML/CSS -->
        <div id="slide-2" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6 text-center">1. Introduction to HTML and CSS</h3>
                <div class="grid md:grid-cols-2 gap-8">
                    <div class="bg-blue-50 p-6 rounded-lg shadow-md">
                        <h4 class="text-2xl font-bold text-blue-700 mb-3">What is HTML?</h4>
                        <p class="mb-3 text-lg text-gray-700"><strong>HTML</strong> (HyperText Markup Language) is the
                            standard language for creating web pages.</p>
                        <ul class="list-disc list-inside pl-4 text-gray-700 space-y-1">
                            <li><strong>Role:</strong> Builds the structure for web content.</li>
                            <li><strong>Analogy:</strong> Like the skeleton of a human body.</li>
                        </ul>
                    </div>
                    <div class="bg-green-50 p-6 rounded-lg shadow-md">
                        <h4 class="text-2xl font-bold text-green-700 mb-3">What is CSS?</h4>
                        <p class="mb-3 text-lg text-gray-700"><strong>CSS</strong> (Cascading Style Sheets) is the
                            language used to style a webpage.</p>
                        <ul class="list-disc list-inside pl-4 text-gray-700 space-y-1">
                            <li><strong>Role:</strong> Adds colors, layouts, fonts...</li>
                            <li><strong>Analogy:</strong> Like clothes and skin, making the website look good.</li>
                        </ul>
                    </div>
                </div>
                <div class="mt-8 text-center">
                    <img src="https://placehold.co/450x200/7E3AF2/FFFFFF?text=HTML+(Structure)+%2B+CSS+(Presentation)+%3D+Website"
                        alt="[Diagram of HTML + CSS = Web Page]" class="rounded-lg shadow-lg mx-auto">
                </div>
            </div>
        </div>

        <!-- Slide 3: HTML Syntax -->
        <div id="slide-3" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">2. Basic HTML File Structure</h3>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="htmlStructure"><code><span class="keyword">&lt;!DOCTYPE html&gt;</span>
&lt;<span class="tag">html</span> <span class="attr-name">lang</span>=<span class="attr-value">"en"</span>&gt;
&lt;<span class="tag">head</span>&gt;
    &lt;<span class="tag">meta</span> <span class="attr-name">charset</span>=<span class="attr-value">"UTF-8"</span>&gt;
    &lt;<span class="tag">title</span>&gt;Page Title&lt;/<span class="tag">title</span>&gt;
&lt;/<span class="tag">head</span>&gt;
&lt;<span class="tag">body</span>&gt;
    The main content of the website goes here
&lt;/<span class="tag">body</span>&gt;
&lt;/<span class="tag">html</span>&gt;</code></pre>
                </div>
                <ul class="list-disc list-inside mt-6 pl-4 text-gray-700 space-y-2 text-lg">
                    <li><code>&lt;!DOCTYPE html&gt;</code>: Declares this is an HTML5 document.</li>
                    <li><code>&lt;html&gt;</code>: The root element of an HTML page.</li>
                    <li><code>&lt;head&gt;</code>: Contains meta information about the page (title, styles, scripts...).
                    </li>
                    <li><code>&lt;body&gt;</code>: Contains the visible content of the webpage.</li>
                </ul>
            </div>
        </div>

        <!-- Slide 4: Heading Tags -->
        <div id="slide-4" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">3. Basic Tags: Headings <code>&lt;h1&gt;</code> -
                    <code>&lt;h6&gt;</code>
                </h3>
                <p class="mb-4 text-lg text-gray-700">Used to define heading levels. <code>&lt;h1&gt;</code> is the most
                    important.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="headingsExample"><code>&lt;<span class="tag">h1</span>&gt;This is an H1 heading&lt;/<span class="tag">h1</span>&gt;
&lt;<span class="tag">h2</span>&gt;This is an H2 heading&lt;/<span class="tag">h2</span>&gt;
&lt;<span class="tag">h3</span>&gt;This is an H3 heading&lt;/<span class="tag">h3</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Rendered Output:</h4>
                <div class="html-output" id="headingsOutput"></div>
            </div>
        </div>

        <!-- Slide 5: Paragraph Tag -->
        <div id="slide-5" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">3. Basic Tags: Paragraphs <code>&lt;p&gt;</code>
                </h3>
                <p class="mb-4 text-lg text-gray-700">The <code>&lt;p&gt;</code> (paragraph) tag is used to define a
                    paragraph of text.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="paragraphExample"><code>&lt;<span class="tag">p</span>&gt;This is the first paragraph. HTML is very interesting.&lt;/<span class="tag">p</span>&gt;
&lt;<span class="tag">p</span>&gt;This is the second paragraph.&lt;/<span class="tag">p</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Rendered Output:</h4>
                <div class="html-output" id="paragraphOutput"></div>
            </div>
        </div>

        <!-- Slide 6: Link Tag -->
        <div id="slide-6" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">3. Basic Tags: Links <code>&lt;a&gt;</code></h3>
                <p class="mb-4 text-lg text-gray-700">The <code>&lt;a&gt;</code> (anchor) tag creates a hyperlink to
                    another page or a location on the same page. The most important attribute is <code>href</code>
                    (hypertext reference), which specifies the destination URL.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block"
                        data-code-id="linkExample"><code>&lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"https://www.google.com"</span>&gt;Go to Google&lt;/<span class="tag">a</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Rendered Output:</h4>
                <div class="html-output" id="linkOutput"></div>
            </div>
        </div>

        <!-- Slide 7: Image Tag -->
        <div id="slide-7" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">3. Basic Tags: Images <code>&lt;img&gt;</code>
                </h3>
                <p class="mb-4 text-lg text-gray-700">The <code>&lt;img&gt;</code> tag embeds an image into the page.
                    It's a self-closing tag, meaning there's no <code>&lt;/img&gt;</code> tag. Important attributes are
                    <code>src</code> (source) and <code>alt</code> (alternative text).
                </p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block"
                        data-code-id="imageExample"><code>&lt;<span class="tag">img</span> <span class="attr-name">src</span>=<span class="attr-value">"https://placehold.co/400x200/007BFF/FFFFFF?text=Example+Image"</span> <span class="attr-name">alt</span>=<span class="attr-value">"A nice example image"</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Rendered Output:</h4>
                <div class="html-output" id="imageOutput"></div>
            </div>
        </div>

        <!-- Slide 8: Button Tag -->
        <div id="slide-8" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">3. Basic Tags: Buttons <code>&lt;button&gt;</code>
                </h3>
                <p class="mb-4 text-lg text-gray-700">The <code>&lt;button&gt;</code> tag defines a clickable button.
                </p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block"
                        data-code-id="buttonExample"><code>&lt;<span class="tag">button</span>&gt;Click me&lt;/<span class="tag">button</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Rendered Output:</h4>
                <div class="html-output" id="buttonOutput"></div>
            </div>
        </div>

        <!-- Slide 9: HTML Example -->
        <div id="slide-9" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">4. Example: Creating a Profile Page (HTML)</h3>
                <p class="mb-4 text-lg text-gray-700">Apply the learned tags to create a simple profile page.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="personalPageHtmlCode"><code>&lt;<span class="tag">h1</span>&gt;Hello, I'm John Doe&lt;/<span class="tag">h1</span>&gt;
&lt;<span class="tag">img</span> <span class="attr-name">src</span>=<span class="attr-value">"https://placehold.co/150/007BFF/FFFFFF?text=Profile+Pic"</span> <span class="attr-name">alt</span>=<span class="attr-value">"My profile picture"</span>&gt;
&lt;<span class="tag">p</span>&gt;I am a student passionate about web development. My hobbies include reading and playing games.&lt;/<span class="tag">p</span>&gt;
&lt;<span class="tag">h2</span>&gt;Contact Me:&lt;/<span class="tag">h2</span>&gt;
&lt;<span class="tag">p</span>&gt;
    You can connect with me via &lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span>&gt;Facebook&lt;/<span class="tag">a</span>&gt;.
&lt;/<span class="tag">p</span>&gt;
&lt;<span class="tag">button</span>&gt;Press for a greeting!&lt;/<span class="tag">button</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Rendered Output:</h4>
                <div class="html-output" id="personalPageHtmlOutput"></div>
            </div>
        </div>

        <!-- Slide 10: CSS Example -->
        <div id="slide-10" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">5. Example: Applying CSS (Inline)</h3>
                <p class="mb-4 text-lg text-gray-700">Add some "inline CSS" to the profile page to make it more
                    attractive.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="personalPageCssCode"><code>&lt;<span class="tag">body</span> <span class="attr-name">style</span>=<span class="attr-value">"font-family: sans-serif; background-color: #e9ecef; color: #343a40;"</span>&gt;
    &lt;<span class="tag">h1</span> <span class="attr-name">style</span>=<span class="attr-value">"color: #007bff; text-align: center;"</span>&gt;Hello, I'm John Doe&lt;/<span class="tag">h1</span>&gt;
    &lt;<span class="tag">div</span> <span class="attr-name">style</span>=<span class="attr-value">"text-align: center; margin-bottom: 20px;"</span>&gt;
        &lt;<span class="tag">img</span> <span class="attr-name">src</span>=<span class="attr-value">"https://placehold.co/150/007BFF/FFFFFF?text=Profile+Pic"</span> <span class="attr-name">alt</span>=<span class="attr-value">"Profile Picture"</span> <span class="attr-name">style</span>=<span class="attr-value">"border-radius: 50%; border: 4px solid #007bff;"</span>&gt;
    &lt;/<span class="tag">div</span>&gt;
    &lt;<span class="tag">p</span> <span class="attr-name">style</span>=<span class="attr-value">"font-size: 1.1em; line-height: 1.7;"</span>&gt;I am a student passionate about web development. My hobbies include reading and playing games.&lt;/<span class="tag">p</span>&gt;
    &lt;<span class="tag">h2</span> <span class="attr-name">style</span>=<span class="attr-value">"color: #28a745;"</span>&gt;Contact Me:&lt;/<span class="tag">h2</span>&gt;
    &lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span> <span class="attr-name">style</span>=<span class="attr-value">"color: #007bff; text-decoration: none;"</span>&gt;Facebook&lt;/<span class="tag">a</span>&gt;
&lt;/<span class="tag">body</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Rendered Output:</h4>
                <div class="html-output" id="personalPageCssOutput"></div>
            </div>
        </div>

        <!-- Slide 11: Summary -->
        <div id="slide-11" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-blue-700 mb-8">Session 1 Summary</h2>
                <div class="text-xl text-gray-700 space-y-5 max-w-3xl text-left bg-gray-50 p-8 rounded-lg shadow">
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>You learned about <strong>HTML</strong>
                        (structure) and <strong>CSS</strong> (style).</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>You know the basic tags:
                        <code>&lt;h1&gt;</code>, <code>&lt;p&gt;</code>, <code>&lt;a&gt;</code>,
                        <code>&lt;img&gt;</code>, <code>&lt;button&gt;</code>.
                    </p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>You tried applying <strong>inline
                            CSS</strong> to change the look of the webpage.</p>
                </div>
                <div
                    class="mt-12 bg-green-100 border-l-4 border-green-500 text-green-700 p-6 rounded-r-lg shadow-lg w-full max-w-3xl">
                    <h4 class="text-2xl font-bold mb-2">See you in Session 2!</h4>
                    <p class="text-lg">We will explore more important concepts in CSS!</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const slides = Array.from(document.querySelectorAll('.slide'));
            const prevButton = document.getElementById('prevSlide');
            const nextButton = document.getElementById('nextSlide');
            const currentSlideNumDisplay = document.getElementById('currentSlideNum');
            const totalSlidesNumDisplay = document.getElementById('totalSlidesNum');

            let currentSlide = 0;

            if (slides.length > 0) {
                totalSlidesNumDisplay.textContent = slides.length;
            } else {
                if (currentSlideNumDisplay) currentSlideNumDisplay.textContent = '0';
                if (totalSlidesNumDisplay) totalSlidesNumDisplay.textContent = '0';
            }

            function showSlide(index) {
                slides.forEach((slide, i) => {
                    if (i === index) {
                        slide.style.display = 'flex';
                        setTimeout(() => slide.classList.add('active'), 10);
                    } else {
                        slide.classList.remove('active');
                        setTimeout(() => {
                            if (!slide.classList.contains('active')) {
                                slide.style.display = 'none';
                            }
                        }, 400); // Must match the transition duration in CSS
                    }
                });
                if (currentSlideNumDisplay) {
                    currentSlideNumDisplay.textContent = index + 1;
                }
                updateNavButtons();
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }

            function updateNavButtons() {
                if (!prevButton || !nextButton) return;
                prevButton.disabled = currentSlide === 0;
                nextButton.disabled = currentSlide === slides.length - 1;
            }

            function copyCode(buttonElement) {
                const codeBlockContainer = buttonElement.closest('.code-block-container');
                const codeElement = codeBlockContainer.querySelector('pre.code-block');
                if (!codeElement) return;

                const codeToCopy = codeElement.innerText;
                const textarea = document.createElement('textarea');
                textarea.value = codeToCopy;
                document.body.appendChild(textarea);
                textarea.select();
                try {
                    document.execCommand('copy');
                    const originalContent = buttonElement.innerHTML;
                    buttonElement.innerHTML = '<i class="fas fa-check"></i> Copied!';
                    setTimeout(() => {
                        buttonElement.innerHTML = originalContent;
                    }, 1500);
                } catch (err) {
                    console.error('Could not copy code:', err);
                }
                document.body.removeChild(textarea);
            }

            function renderExample(codeBlockId, outputId) {
                const codeBlockEl = document.querySelector(`[data-code-id="${codeBlockId}"]`);
                const outputEl = document.getElementById(outputId);
                if (!codeBlockEl || !outputEl) return;

                const codeString = codeBlockEl.innerText;

                // Use Shadow DOM to render the code, preventing style conflicts
                outputEl.innerHTML = ''; // Clear previous content
                const shadow = outputEl.attachShadow({ mode: 'open' });
                shadow.innerHTML = codeString;
            }

            // Setup navigation
            if (prevButton && nextButton) {
                prevButton.addEventListener('click', () => {
                    if (currentSlide > 0) {
                        currentSlide--;
                        showSlide(currentSlide);
                    }
                });

                nextButton.addEventListener('click', () => {
                    if (currentSlide < slides.length - 1) {
                        currentSlide++;
                        showSlide(currentSlide);
                    }
                });
            }

            // Setup copy buttons
            document.querySelectorAll('.copy-button').forEach(button => {
                button.addEventListener('click', () => copyCode(button));
            });

            // Render all examples
            renderExample('headingsExample', 'headingsOutput');
            renderExample('paragraphExample', 'paragraphOutput');
            renderExample('linkExample', 'linkOutput');
            renderExample('imageExample', 'imageOutput');
            renderExample('buttonExample', 'buttonOutput');
            renderExample('personalPageHtmlCode', 'personalPageHtmlOutput');
            renderExample('personalPageCssCode', 'personalPageCssOutput');

            // Initial setup
            if (slides.length > 0) {
                showSlide(currentSlide);
            }
        });
    </script>
</body>

</html>

/* ===== Web Basic English/lesson2.html ===== */
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Session 2: HTML Structure & CSS Selectors</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            scroll-behavior: smooth;
            background-color: #f3f4f6;
        }

        #navbar {
            position: sticky;
            top: 0;
            z-index: 50;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .slide-container {
            padding-top: 1rem;
        }

        .slide {
            background-color: white;
            padding: 2.5rem;
            border-radius: 0.75rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            margin-bottom: 2rem;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
            min-height: calc(100vh - 120px);
            display: none;
            flex-direction: column;
        }

        .slide.active {
            display: flex;
            opacity: 1;
            transform: translateY(0);
        }

        .slide-content-wrapper {
            flex-grow: 1;
        }

        .code-block-container {
            position: relative;
            background-color: #1e293b;
            border-radius: 0.5rem;
            margin-top: 1rem;
            margin-bottom: 1rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .code-block-header {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            padding: 0.5rem 0.75rem;
            background-color: #334155;
            border-top-left-radius: 0.5rem;
            border-top-right-radius: 0.5rem;
        }

        .copy-button {
            background-color: #4a5568;
            color: #e2e8f0;
            border: none;
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            cursor: pointer;
            font-size: 0.875rem;
            transition: background-color 0.2s;
        }

        .copy-button:hover {
            background-color: #718096;
        }

        .copy-button .fa-copy {
            margin-right: 0.375rem;
        }

        .copy-button .fa-check {
            margin-right: 0.375rem;
            color: #48bb78;
        }

        .copy-button:focus {
            outline: none;
            box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.5);
        }

        .code-block {
            background-color: #1e293b;
            color: #e2e8f0;
            padding: 1.5rem;
            border-bottom-left-radius: 0.5rem;
            border-bottom-right-radius: 0.5rem;
            font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
            white-space: pre-wrap;
            word-wrap: break-word;
            font-size: 0.875em;
            line-height: 1.6;
            overflow-x: auto;
        }

        .code-block .comment {
            color: #6a9955;
        }

        .code-block .keyword {
            color: #569cd6;
        }

        .code-block .tag {
            color: #569cd6;
        }

        .code-block .attr-name {
            color: #9cdcfe;
        }

        .code-block .attr-value {
            color: #ce9178;
        }

        .code-block .string {
            color: #ce9178;
        }

        .code-block .property {
            color: #9cdcfe;
        }

        .code-block .css-value {
            color: #ce9178;
        }

        .code-block .selector {
            color: #d7ba7d;
        }

        ::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #4a5568;
        }

        ::-webkit-scrollbar-thumb {
            background: #718096;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #a0aec0;
        }

        .html-output {
            border: 1px solid #e2e8f0;
            padding: 1.5rem;
            margin-top: 1rem;
            border-radius: 0.5rem;
            background-color: #f7fafc;
            min-height: 100px;
            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);
        }

        img {
            max-width: 100%;
            height: auto;
            border-radius: 0.375rem;
        }
    </style>
</head>

<body class="text-gray-800">

    <nav id="navbar" class="p-4">
        <div class="container mx-auto flex flex-wrap justify-between items-center">
            <h1 class="text-xl font-bold text-blue-600">Web Basics - Session 2</h1>
            <div class="flex items-center mt-2 sm:mt-0">
                <button id="prevSlide"
                    class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg shadow mr-2 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    <i class="fas fa-arrow-left mr-1"></i> Prev
                </button>
                <button id="nextSlide"
                    class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    Next <i class="fas fa-arrow-right ml-1"></i>
                </button>
            </div>
            <div class="text-sm text-gray-600 mt-2 sm:mt-0 ml-0 sm:ml-4">
                Slide <span id="currentSlideNum">1</span> / <span id="totalSlidesNum"></span>
            </div>
        </div>
    </nav>

    <div class="container mx-auto p-4 slide-container">
        <!-- Slide 1: Title -->
        <div id="slide-1" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-blue-700 mb-6">Session 2: Structuring with &lt;div&gt; & CSS
                    Selectors</h2>
                <p class="text-2xl text-gray-600 mb-12">Mastering Layout and Element Selection</p>
                <img src="https://placehold.co/600x350/3498DB/FFFFFF?text=Structure+and+Selectors"
                    alt="[Image of structure and selectors]" class="rounded-lg shadow-xl max-w-2xl">
                <p class="mt-10 text-xl text-gray-700">Let's build more complex web layouts!</p>
            </div>
        </div>

        <!-- Slide 2: The <div> tag -->
        <div id="slide-2" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">1. The &lt;div&gt; Tag: The Unsung Hero of Layout
                </h3>
                <p class="text-lg text-gray-700 mb-4">The <code>&lt;div&gt;</code> (division) tag is a generic
                    "container". It has no semantic meaning; its main role is to <strong>group other elements
                        together</strong> for styling (CSS) or manipulation (JavaScript).</p>
                <div class="grid md:grid-cols-2 gap-8 mt-6">
                    <div class="bg-blue-50 p-6 rounded-lg shadow">
                        <h4 class="text-2xl font-bold text-blue-700 mb-3">Key Uses:</h4>
                        <ul class="list-disc list-inside pl-4 text-gray-700 space-y-2">
                            <li>Creating large layout blocks (header, main content, footer, sidebar).</li>
                            <li>Grouping related content to apply a common style.</li>
                            <li>Dividing a webpage into distinct, manageable sections.</li>
                        </ul>
                    </div>
                    <div class="bg-yellow-50 p-6 rounded-lg shadow">
                        <h4 class="text-2xl font-bold text-yellow-800 mb-3">Analogy:</h4>
                        <p class="text-gray-700">Imagine <code>&lt;div&gt;</code> tags are like cardboard boxes. By
                            themselves, they aren't special, but you use them to organize your belongings (web content)
                            into neat groups, making your house (webpage) tidy and structured.</p>
                    </div>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mt-8 mb-2">Example of a webpage layout using
                    <code>&lt;div&gt;</code>:
                </h4>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="divLayoutCode"><code><span class="comment">&lt;!-- The entire webpage is wrapped in a container div --&gt;</span>
&lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"container"</span>&gt;
  <span class="comment">&lt;!-- Header section --&gt;</span>
  &lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"header"</span>&gt; ...Header content... &lt;/<span class="tag">div</span>&gt;
  
  <span class="comment">&lt;!-- Main page section --&gt;</span>
  &lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"main-content"</span>&gt;
    <span class="comment">&lt;!-- Main content --&gt;</span>
    &lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"article"</span>&gt; ...Article content... &lt;/<span class="tag">div</span>&gt;
    <span class="comment">&lt;!-- Sidebar --&gt;</span>
    &lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"sidebar"</span>&gt; ...Sidebar content... &lt;/<span class="tag">div</span>&gt;
  &lt;/<span class="tag">div</span>&gt;
  
  <span class="comment">&lt;!-- Footer section --&gt;</span>
  &lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"footer"</span>&gt; ...Footer content... &lt;/<span class="tag">div</span>&gt;
&lt;/<span class="tag">div</span>&gt;</code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 3: Block vs Inline -->
        <div id="slide-3" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">2. Block vs. Inline: Understanding How Elements
                    Display</h3>
                <p class="text-lg text-gray-700 mb-6">Every HTML element has a default display type. The two most common
                    are <strong>block</strong> and <strong>inline</strong>.</p>
                <div class="grid md:grid-cols-2 gap-8">
                    <div class="bg-red-50 p-6 rounded-lg shadow">
                        <h4 class="text-2xl font-bold text-red-700 mb-3">Block Elements</h4>
                        <ul class="list-disc list-inside pl-4 text-gray-700 space-y-2">
                            <li>Always <strong>starts on a new line</strong>.</li>
                            <li>Takes up the <strong>full width</strong> of its parent element.</li>
                            <li>Examples: <code>&lt;div&gt;</code>, <code>&lt;h1&gt;</code>-<code>&lt;h6&gt;</code>,
                                <code>&lt;p&gt;</code>, <code>&lt;ul&gt;</code>, <code>&lt;li&gt;</code>.
                            </li>
                        </ul>
                    </div>
                    <div class="bg-indigo-50 p-6 rounded-lg shadow">
                        <h4 class="text-2xl font-bold text-indigo-700 mb-3">Inline Elements</h4>
                        <ul class="list-disc list-inside pl-4 text-gray-700 space-y-2">
                            <li><strong>Does not</strong> start on a new line.</li>
                            <li>Only takes up as <strong>much width as necessary</strong> for its content.</li>
                            <li>Examples: <code>&lt;span&gt;</code>, <code>&lt;a&gt;</code>, <code>&lt;img&gt;</code>,
                                <code>&lt;strong&gt;</code>, <code>&lt;button&gt;</code>.
                            </li>
                        </ul>
                    </div>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mt-8 mb-2">Practical Example:</h4>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="blockInlineCode"><code><span class="comment">&lt;!-- div and p are block elements, they will be on separate lines --&gt;</span>
&lt;<span class="tag">div</span> <span class="attr-name">style</span>=<span class="attr-value">"background-color: #f8d7da; padding: 10px; margin-bottom: 5px;"</span>&gt;This is a div (block).&lt;/<span class="tag">div</span>&gt;
&lt;<span class="tag">p</span> <span class="attr-name">style</span>=<span class="attr-value">"background-color: #d1ecf1; padding: 10px;"</span>&gt;This is a paragraph (block).&lt;/<span class="tag">p</span>&gt;

<span class="comment">&lt;!-- span and a are inline elements, they will be on the same line --&gt;</span>
&lt;<span class="tag">p</span> <span class="attr-name">style</span>=<span class="attr-value">"background-color: #e2e3e5; padding: 10px; margin-top: 10px;"</span>&gt;
  This is a
  &lt;<span class="tag">span</span> <span class="attr-name">style</span>=<span class="attr-value">"background-color: #fff3cd; font-weight: bold; padding: 5px; border-radius: 3px;"</span>&gt;span (inline)&lt;/<span class="tag">span</span>&gt;
  and this is a
  &lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span> <span class="attr-name">style</span>=<span class="attr-value">"background-color: #d4edda; padding: 5px; border-radius: 3px;"</span>&gt;link (inline)&lt;/<span class="tag">a</span>&gt;.
&lt;/<span class="tag">p</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Rendered Output:</h4>
                <div class="html-output" id="blockInlineOutput"></div>
            </div>
        </div>

        <!-- Slide 4: <style> tag -->
        <div id="slide-4" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">3. Centralizing CSS with the &lt;style&gt; Tag
                </h3>
                <p class="text-lg text-gray-700 mb-4"><strong>Internal CSS</strong>: Place CSS rules inside a
                    <code>&lt;style&gt;</code> tag, usually located in the <code>&lt;head&gt;</code> section. This is a
                    better approach than the Inline CSS from Session 1.
                </p>
                <h4 class="text-2xl font-bold text-green-700 my-4">Benefits:</h4>
                <ul class="list-disc list-inside pl-4 text-gray-700 space-y-2 text-lg">
                    <li><strong>Separates content (HTML) from presentation (CSS)</strong>.</li>
                    <li><strong>Easy to manage</strong> and edit all styles in one place.</li>
                    <li>Allows you to <strong>reuse</strong> a style for multiple elements.</li>
                </ul>
                <h4 class="text-xl font-medium text-gray-700 mt-8 mb-2">Example: Converting from Inline CSS to Internal
                    CSS</h4>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="internalCssCode"><code>&lt;<span class="tag">!DOCTYPE html</span>&gt;
&lt;<span class="tag">html</span>&gt;
&lt;<span class="tag">head</span>&gt;
  &lt;<span class="tag">title</span>&gt;Internal CSS&lt;/<span class="tag">title</span>&gt;
  &lt;<span class="tag">style</span>&gt;
    <span class="selector">h1</span> {
      <span class="property">color</span>: <span class="css-value">navy</span>;
      <span class="property">text-align</span>: <span class="css-value">center</span>;
    }
    <span class="selector">p</span> {
      <span class="property">font-family</span>: <span class="css-value">Verdana</span>;
      <span class="property">font-size</span>: <span class="css-value">16px</span>;
    }
    <span class="selector">button</span> {
      <span class="property">background-color</span>: <span class="css-value">green</span>;
      <span class="property">color</span>: <span class="css-value">white</span>;
      <span class="property">padding</span>: <span class="css-value">10px</span>;
      <span class="property">border</span>: <span class="css-value">none</span>;
      <span class="property">border-radius</span>: <span class="css-value">5px</span>;
    }
  &lt;/<span class="tag">style</span>&gt;
&lt;/<span class="tag">head</span>&gt;
&lt;<span class="tag">body</span>&gt;
  <span class="comment">&lt;!-- The HTML is now much cleaner! --&gt;</span>
  &lt;<span class="tag">h1</span>&gt;This is a Heading&lt;/<span class="tag">h1</span>&gt;
  &lt;<span class="tag">p</span>&gt;This is a paragraph.&lt;/<span class="tag">p</span>&gt;
  &lt;<span class="tag">button</span>&gt;Click Me&lt;/<span class="tag">button</span>&gt;
&lt;/<span class="tag">body</span>&gt;
&lt;/<span class="tag">html</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Rendered Output (body content):</h4>
                <div class="html-output" id="internalCssOutput"></div>
            </div>
        </div>

        <!-- Slide 5: Class selector -->
        <div id="slide-5" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">4. CSS Selectors: Bulk Selection with Classes</h3>
                <p class="text-lg text-gray-700 mb-4">When you want to apply the <strong>same style to many different
                        elements</strong>, use the <code>class</code> attribute.</p>
                <div class="grid md:grid-cols-2 gap-8 text-lg items-center">
                    <div>
                        <h4 class="text-2xl font-bold text-gray-800 mb-3">How it works:</h4>
                        <ol class="list-decimal list-inside space-y-2">
                            <li>In CSS, create a class with a name starting with a period (<code>.</code>).</li>
                            <li>In HTML, add the <code>class="class-name"</code> attribute to the elements.</li>
                            <li>An element can have multiple classes, separated by spaces.</li>
                        </ol>
                    </div>
                    <img src="https://placehold.co/400x200/2ECC71/FFFFFF?text=One+Style,+Many+Elements"
                        class="rounded-lg shadow-md">
                </div>
                <h4 class="text-xl font-medium text-gray-700 mt-8 mb-2">Example: Creating Buttons and Alerts</h4>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="classSelectorCode"><code>&lt;<span class="tag">style</span>&gt;
  <span class="selector">.btn</span> {
    <span class="property">padding</span>: <span class="css-value">10px 15px</span>;
    <span class="property">border</span>: <span class="css-value">none</span>;
    <span class="property">border-radius</span>: <span class="css-value">5px</span>;
    <span class="property">font-weight</span>: <span class="css-value">bold</span>;
    <span class="property">cursor</span>: <span class="css-value">pointer</span>;
  }
  <span class="selector">.btn-primary</span> {
    <span class="property">background-color</span>: <span class="css-value">#007bff</span>;
    <span class="property">color</span>: <span class="css-value">white</span>;
  }
  <span class="selector">.alert-danger</span> {
    <span class="property">background-color</span>: <span class="css-value">#f8d7da</span>;
    <span class="property">color</span>: <span class="css-value">#721c24</span>;
    <span class="property">padding</span>: <span class="css-value">1rem</span>;
    <span class="property">border</span>: <span class="css-value">1px solid #f5c6cb</span>;
    <span class="property">border-radius</span>: <span class="css-value">.25rem</span>;
    <span class="property">margin-top</span>: <span class="css-value">15px</span>;
  }
&lt;/<span class="tag">style</span>&gt;
<span class="comment">&lt;!-- HTML --&gt;</span>
&lt;<span class="tag">button</span> <span class="attr-name">class</span>=<span class="attr-value">"btn btn-primary"</span>&gt;Save Changes&lt;/<span class="tag">button</span>&gt;
&lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"alert-danger"</span>&gt;
    &lt;<span class="tag">strong</span>&gt;Error!&lt;/<span class="tag">strong</span>&gt; Please check the information again.
&lt;/<span class="tag">div</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Rendered Output:</h4>
                <div class="html-output" id="classSelectorOutput"></div>
            </div>
        </div>

        <!-- Slide 6: ID selector -->
        <div id="slide-6" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">5. CSS Selectors: Unique Selection with IDs</h3>
                <p class="text-lg text-gray-700 mb-4">When you want to apply a style to <strong>one and only one unique
                        element</strong> on the page, use the <code>id</code> attribute.</p>
                <div class="grid md:grid-cols-2 gap-8 text-lg items-center">
                    <div>
                        <h4 class="text-2xl font-bold text-gray-800 mb-3">How it works:</h4>
                        <ol class="list-decimal list-inside space-y-2">
                            <li>In HTML, add the attribute <code>id="unique-id-name"</code>. <strong>The ID must be
                                    unique</strong> on the page.</li>
                            <li>In CSS, select the element using a hash symbol (<code>#</code>) followed by the ID name.
                            </li>
                        </ol>
                    </div>
                    <img src="https://placehold.co/400x200/E74C3C/FFFFFF?text=One+Unique+Element"
                        class="rounded-lg shadow-md">
                </div>
                <h4 class="text-xl font-medium text-gray-700 mt-8 mb-2">Example: Styling a Header</h4>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="idSelectorCode"><code>&lt;<span class="tag">style</span>&gt;
  <span class="selector">#main-header</span> {
    <span class="property">background-color</span>: <span class="css-value">#343a40</span>;
    <span class="property">color</span>: <span class="css-value">white</span>;
    <span class="property">padding</span>: <span class="css-value">20px</span>;
    <span class="property">text-align</span>: <span class="css-value">center</span>;
    <span class="property">border-radius</span>: <span class="css-value">8px</span>;
  }
&lt;/<span class="tag">style</span>&gt;
<span class="comment">&lt;!-- HTML --&gt;</span>
&lt;<span class="tag">div</span> <span class="attr-name">id</span>=<span class="attr-value">"main-header"</span>&gt;
  &lt;<span class="tag">h1</span>&gt;My Website&lt;/<span class="tag">h1</span>&gt;
&lt;/<span class="tag">div</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Rendered Output:</h4>
                <div class="html-output" id="idSelectorOutput"></div>
            </div>
        </div>

        <!-- Slide 7: Practical Example -->
        <div id="slide-7" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">6. Exercise: Building a Blog Post Layout</h3>
                <p class="text-lg text-gray-700 mb-4">Apply what you've learned: <code>&lt;div&gt;</code>,
                    <code>class</code>, and <code>id</code> to create a simple blog post layout.
                </p>
                <div class="grid lg:grid-cols-2 gap-8">
                    <div class="code-block-container">
                        <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i>
                                Copy</button></div>
                        <pre class="code-block" data-code-id="blogLayoutCode"><code>&lt;<span class="tag">!DOCTYPE html</span>&gt;
&lt;<span class="tag">html</span>&gt;
&lt;<span class="tag">head</span>&gt;
&lt;<span class="tag">style</span>&gt;
  <span class="selector">body</span> { <span class="property">background-color</span>: <span class="css-value">#f4f4f4</span>; <span class="property">color</span>: <span class="css-value">#333</span>; <span class="property">font-family</span>: <span class="css-value">sans-serif</span>; }
  <span class="selector">#blog-container</span> {
    <span class="comment">/* Adjusted for output area */</span>
    <span class="property">margin</span>: <span class="css-value">auto</span>;
    <span class="property">background-color</span>: <span class="css-value">white</span>;
    <span class="property">padding</span>: <span class="css-value">20px</span>;
    <span class="property">box-shadow</span>: <span class="css-value">0 0 10px rgba(0,0,0,0.1)</span>;
    <span class="property">border-radius</span>: <span class="css-value">8px</span>;
  }
  <span class="selector">.post-header</span> { <span class="property">border-bottom</span>: <span class="css-value">2px solid #eee</span>; <span class="property">padding-bottom</span>: <span class="css-value">10px</span>; <span class="property">margin-bottom</span>: <span class="css-value">20px</span>; }
  <span class="selector">.post-title</span> { <span class="property">color</span>: <span class="css-value">#0056b3</span>; <span class="property">margin</span>: <span class="css-value">0</span>; }
  <span class="selector">.post-meta</span> { <span class="property">font-size</span>: <span class="css-value">0.9em</span>; <span class="property">color</span>: <span class="css-value">#888</span>; <span class="property">margin-top</span>: <span class="css-value">5px</span>; }
  <span class="selector">.post-content p</span> { <span class="property">line-height</span>: <span class="css-value">1.6</span>; }
  <span class="selector">.author-box</span> { <span class="property">background-color</span>: <span class="css-value">#e9ecef</span>; <span class="property">border</span>: <span class="css-value">1px solid #dee2e6</span>; <span class="property">padding</span>: <span class="css-value">15px</span>; <span class="property">margin-top</span>: <span class="css-value">25px</span>; <span class="property">border-radius</span>: <span class="css-value">5px</span>; }
&lt;/<span class="tag">style</span>&gt;
&lt;/<span class="tag">head</span>&gt;
&lt;<span class="tag">body</span>&gt;
  &lt;<span class="tag">div</span> <span class="attr-name">id</span>=<span class="attr-value">"blog-container"</span>&gt;
    &lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"post-header"</span>&gt;
      &lt;<span class="tag">h1</span> <span class="attr-name">class</span>=<span class="attr-value">"post-title"</span>&gt;My Web Development Journey&lt;/<span class="tag">h1</span>&gt;
      &lt;<span class="tag">p</span> <span class="attr-name">class</span>=<span class="attr-value">"post-meta"</span>&gt;Posted by John Doe on June 8, 2025&lt;/<span class="tag">p</span>&gt;
    &lt;/<span class="tag">div</span>&gt;
    &lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"post-content"</span>&gt;
      &lt;<span class="tag">p</span>&gt;This is the first paragraph of the article. We are applying classes for styling.&lt;/<span class="tag">p</span>&gt;
      &lt;<span class="tag">p</span>&gt;The div tag helps us group elements together.&lt;/<span class="tag">p</span>&gt;
    &lt;/<span class="tag">div</span>&gt;
    &lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"author-box"</span>&gt;
      &lt;<span class="tag">h4</span>&gt;About the Author&lt;/<span class="tag">h4</span>&gt;
      &lt;<span class="tag">p</span>&gt;John Doe is a passionate web developer.&lt;/<span class="tag">p</span>&gt;
    &lt;/<span class="tag">div</span>&gt;
  &lt;/<span class="tag">div</span>&gt;
&lt;/<span class="tag">body</span>&gt;
&lt;/<span class="tag">html</span>&gt;</code></pre>
                    </div>
                    <div>
                        <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Rendered Output:</h4>
                        <div class="html-output h-full" id="blogLayoutOutput"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 8: Summary -->
        <div id="slide-8" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-blue-700 mb-8">Session 2 Summary</h2>
                <div class="text-xl text-gray-700 space-y-5 max-w-3xl text-left bg-gray-50 p-8 rounded-lg shadow">
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>The <strong><code>&lt;div&gt;</code>
                            tag</strong> is a tool for grouping elements and building layouts.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>Understanding <strong>Block</strong>
                        (takes the full line) and <strong>Inline</strong> (stays on the line) is key to controlling
                        layout.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>Using
                        <strong><code>&lt;style&gt;</code></strong> keeps HTML cleaner and makes CSS more manageable.
                    </p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i><strong>Class
                            (<code>.class-name</code>)</strong> is used to apply one style to MANY elements.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i><strong>ID
                            (<code>#id-name</code>)</strong> is used to identify and style ONE UNIQUE element.</p>
                </div>
                <div
                    class="mt-12 bg-green-100 border-l-4 border-green-500 text-green-700 p-6 rounded-r-lg shadow-lg w-full max-w-3xl">
                    <h4 class="text-2xl font-bold mb-2">See you in Session 3!</h4>
                    <p class="text-lg">We will explore one of the most important CSS concepts: the <strong>Box
                            Model</strong>!</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const slides = Array.from(document.querySelectorAll('.slide'));
            const prevButton = document.getElementById('prevSlide');
            const nextButton = document.getElementById('nextSlide');
            const currentSlideNumDisplay = document.getElementById('currentSlideNum');
            const totalSlidesNumDisplay = document.getElementById('totalSlidesNum');

            let currentSlide = 0;

            if (slides.length > 0) {
                totalSlidesNumDisplay.textContent = slides.length;
            } else {
                if (currentSlideNumDisplay) currentSlideNumDisplay.textContent = '0';
                if (totalSlidesNumDisplay) totalSlidesNumDisplay.textContent = '0';
            }

            function showSlide(index) {
                slides.forEach((slide, i) => {
                    if (i === index) {
                        slide.style.display = 'flex';
                        setTimeout(() => slide.classList.add('active'), 10);
                    } else {
                        slide.classList.remove('active');
                        setTimeout(() => {
                            if (!slide.classList.contains('active')) {
                                slide.style.display = 'none';
                            }
                        }, 400); // Match CSS transition duration
                    }
                });
                if (currentSlideNumDisplay) {
                    currentSlideNumDisplay.textContent = index + 1;
                }
                updateNavButtons();
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }

            function updateNavButtons() {
                if (!prevButton || !nextButton) return;
                prevButton.disabled = currentSlide === 0;
                nextButton.disabled = currentSlide === slides.length - 1;
            }

            function copyCode(buttonElement) {
                const codeBlock = buttonElement.closest('.code-block-container').querySelector('pre.code-block code');
                if (!codeBlock) return;

                const codeToCopy = codeBlock.innerText;
                const textarea = document.createElement('textarea');
                textarea.value = codeToCopy;
                document.body.appendChild(textarea);
                textarea.select();
                try {
                    document.execCommand('copy');
                    const originalIcon = buttonElement.innerHTML;
                    buttonElement.innerHTML = '<i class="fas fa-check"></i> Copied!';
                    setTimeout(() => {
                        buttonElement.innerHTML = originalIcon;
                    }, 1500);
                } catch (err) {
                    console.error('Could not copy code:', err);
                    alert('Copy failed!');
                }
                document.body.removeChild(textarea);
            }

            function renderExample(codeBlockEl, outputEl) {
                if (!codeBlockEl || !outputEl) return;

                const codeString = codeBlockEl.querySelector('code').innerText;

                let styleContent = '';
                const styleMatch = codeString.match(/<style>([\s\S]*?)<\/style>/i);
                if (styleMatch) {
                    styleContent = styleMatch[1];
                }

                let bodyContent = '';
                const bodyMatch = codeString.match(/<body>([\s\S]*?)<\/body>/i);
                if (bodyMatch) {
                    bodyContent = bodyMatch[1];
                } else {
                    bodyContent = codeString.replace(/<style>[\s\S]*?<\/style>/i, '').trim();
                }

                outputEl.innerHTML = ''; // Clear previous content
                const shadow = outputEl.attachShadow({ mode: 'open' });
                shadow.innerHTML = `<style>${styleContent}</style>${bodyContent}`;
            }

            // Setup navigation
            if (prevButton && nextButton) {
                prevButton.addEventListener('click', () => {
                    if (currentSlide > 0) {
                        currentSlide--;
                        showSlide(currentSlide);
                    }
                });

                nextButton.addEventListener('click', () => {
                    if (currentSlide < slides.length - 1) {
                        currentSlide++;
                        showSlide(currentSlide);
                    }
                });
            }

            // Setup copy buttons
            document.querySelectorAll('.copy-button').forEach(button => {
                button.addEventListener('click', () => copyCode(button));
            });

            // Render all live examples
            renderExample(document.querySelector('[data-code-id="blockInlineCode"]'), document.getElementById('blockInlineOutput'));
            renderExample(document.querySelector('[data-code-id="internalCssCode"]'), document.getElementById('internalCssOutput'));
            renderExample(document.querySelector('[data-code-id="classSelectorCode"]'), document.getElementById('classSelectorOutput'));
            renderExample(document.querySelector('[data-code-id="idSelectorCode"]'), document.getElementById('idSelectorOutput'));
            renderExample(document.querySelector('[data-code-id="blogLayoutCode"]'), document.getElementById('blogLayoutOutput'));

            // Initial setup
            if (slides.length > 0) {
                showSlide(currentSlide);
            }
        });
    </script>
</body>

</html>

/* ===== Web Basic English/lesson3.html ===== */
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Session 3: CSS Box Model & Layouts (Detailed)</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            scroll-behavior: smooth;
            background-color: #f3f4f6;
        }

        #navbar {
            position: sticky;
            top: 0;
            z-index: 50;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .slide-container {
            padding-top: 1rem;
        }

        .slide {
            background-color: white;
            padding: 2.5rem;
            border-radius: 0.75rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            margin-bottom: 2rem;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
            min-height: calc(100vh - 120px);
            display: none;
            flex-direction: column;
        }

        .slide.active {
            display: flex;
            opacity: 1;
            transform: translateY(0);
        }

        .slide-content-wrapper {
            flex-grow: 1;
        }

        .code-block-container {
            position: relative;
            background-color: #1e293b;
            border-radius: 0.5rem;
            margin-top: 1rem;
            margin-bottom: 1rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .code-block-header {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            padding: 0.5rem 0.75rem;
            background-color: #334155;
            border-top-left-radius: 0.5rem;
            border-top-right-radius: 0.5rem;
        }

        .copy-button {
            background-color: #4a5568;
            color: #e2e8f0;
            border: none;
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            cursor: pointer;
            font-size: 0.875rem;
            transition: background-color 0.2s;
        }

        .copy-button:hover {
            background-color: #718096;
        }

        .copy-button .fa-copy {
            margin-right: 0.375rem;
        }

        .copy-button .fa-check {
            margin-right: 0.375rem;
            color: #48bb78;
        }

        .copy-button:focus {
            outline: none;
            box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.5);
        }

        .code-block {
            background-color: #1e293b;
            color: #e2e8f0;
            padding: 1.5rem;
            border-bottom-left-radius: 0.5rem;
            border-bottom-right-radius: 0.5rem;
            font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
            white-space: pre-wrap;
            word-wrap: break-word;
            font-size: 0.875em;
            line-height: 1.6;
            overflow-x: auto;
        }

        .code-block .comment {
            color: #6a9955;
        }

        .code-block .tag {
            color: #569cd6;
        }

        .code-block .attr-name {
            color: #9cdcfe;
        }

        .code-block .attr-value {
            color: #ce9178;
        }

        .code-block .property {
            color: #9cdcfe;
        }

        .code-block .css-value {
            color: #ce9178;
        }

        .code-block .selector {
            color: #d7ba7d;
        }

        .html-output {
            border: 1px solid #e2e8f0;
            padding: 1.5rem;
            margin-top: 1rem;
            border-radius: 0.5rem;
            background-color: #f7fafc;
            min-height: 100px;
            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);
        }

        .box-model-diagram {
            background-color: #f0f9ff;
            border: 2px dashed #0ea5e9;
            padding: 20px;
            text-align: center;
            font-size: 1.1rem;
            font-weight: 600;
            color: #0369a1;
            margin: 20px auto;
            max-width: 500px;
        }

        .box-model-diagram .border-box {
            background-color: #ecfdf5;
            border: 2px solid #22c55e;
            padding: 20px;
            color: #15803d;
        }

        .box-model-diagram .padding-box {
            background-color: #fefce8;
            border: 2px dotted #eab308;
            padding: 20px;
            color: #a16207;
        }

        .box-model-diagram .content-box {
            background-color: #fff;
            padding: 20px;
            border: 2px solid #ccc;
            color: #333;
        }
    </style>
</head>

<body class="text-gray-800">

    <nav id="navbar" class="p-4">
        <div class="container mx-auto flex flex-wrap justify-between items-center">
            <h1 class="text-xl font-bold text-teal-600">Web Basics - Session 3</h1>
            <div class="flex items-center mt-2 sm:mt-0">
                <button id="prevSlide"
                    class="bg-teal-500 hover:bg-teal-700 text-white font-bold py-2 px-4 rounded-lg shadow mr-2 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    <i class="fas fa-arrow-left mr-1"></i> Prev
                </button>
                <button id="nextSlide"
                    class="bg-teal-500 hover:bg-teal-700 text-white font-bold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    Next <i class="fas fa-arrow-right ml-1"></i>
                </button>
            </div>
            <div class="text-sm text-gray-600 mt-2 sm:mt-0 ml-0 sm:ml-4">
                Slide <span id="currentSlideNum">1</span> / <span id="totalSlidesNum"></span>
            </div>
        </div>
    </nav>

    <div class="container mx-auto p-4 slide-container">
        <!-- Slide 1: Title -->
        <div id="slide-1" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-teal-700 mb-6">Session 3: CSS Box Model & Layout</h2>
                <p class="text-2xl text-gray-600 mb-12">The Foundation for Building Any Web Interface</p>
                <img src="https://placehold.co/600x350/14B8A6/FFFFFF?text=CSS+Box+Model"
                    alt="[Image of CSS Box Model Diagram]" class="rounded-lg shadow-xl max-w-2xl">
                <p class="mt-10 text-xl text-gray-700">Let's learn how elements take up space on a webpage!</p>
            </div>
        </div>

        <!-- Slide 2: What is Box Model? -->
        <div id="slide-2" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-teal-600 mb-6">1. What is the CSS Box Model?</h3>
                <p class="text-lg text-gray-700 mb-4">In CSS, every HTML element can be considered a box. The
                    <strong>Box Model</strong> is a concept that describes how these boxes are displayed and take up
                    space on the page.
                </p>
                <p class="text-lg text-gray-700 mb-6">Each box consists of 4 areas, from the outside in:</p>
                <div class="box-model-diagram">
                    Margin
                    <div class="border-box">
                        Border
                        <div class="padding-box">
                            Padding
                            <div class="content-box">
                                Content
                            </div>
                        </div>
                    </div>
                </div>
                <ul class="list-disc list-inside mt-6 pl-4 text-gray-700 space-y-3 text-lg">
                    <li><strong>Content:</strong> The area containing the actual content (text, images, ...).</li>
                    <li><strong>Padding:</strong> A transparent area around the content, <strong>inside</strong> the
                        border.</li>
                    <li><strong>Border:</strong> A border that goes around the padding and content.</li>
                    <li><strong>Margin:</strong> A transparent area <strong>outside</strong> the border, creating space
                        between elements.</li>
                </ul>
            </div>
        </div>

        <!-- Slide 3: Margin -->
        <div id="slide-3" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-teal-600 mb-6">2. Margin</h3>
                <p class="text-lg text-gray-700 mb-4"><code>margin</code> is used to create space
                    <strong>outside</strong> an element's border, pushing other elements away.
                </p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="marginCode"><code>&lt;<span class="tag">style</span>&gt;
.box1 {
    background-color: #fecaca;
    border: 2px solid #b91c1c;
    width: 200px;
    padding: 10px;
    <span class="comment">/* Pushes the second box 50px away from the bottom */</span>
    margin-bottom: 50px;
}
.box2 {
    background-color: #dbeafe;
    border: 2px solid #1d4ed8;
    width: 200px;
    padding: 10px;
    <span class="comment">/* Automatically centers the box horizontally */</span>
    margin-left: auto;
    margin-right: auto;
}
&lt;/<span class="tag">style</span>&gt;
&lt;<span class="tag">div</span> class="box1"&gt;Box 1&lt;/<span class="tag">div</span>&gt;
&lt;<span class="tag">div</span> class="box2"&gt;Box 2 (centered)&lt;/<span class="tag">div</span>&gt;
</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Result:</h4>
                <div class="html-output" id="marginOutput"></div>
            </div>
        </div>

        <!-- Slide 4: Padding -->
        <div id="slide-4" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-teal-600 mb-6">3. Padding</h3>
                <p class="text-lg text-gray-700 mb-4"><code>padding</code> is used to create space
                    <strong>inside</strong> the border, between the border and the content.
                </p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="paddingCode"><code>&lt;<span class="tag">style</span>&gt;
.button-no-padding {
    background-color: #6ee7b7;
    border: 2px solid #047857;
}
.button-with-padding {
    background-color: #6ee7b7;
    border: 2px solid #047857;
    <span class="comment">/* Add 15px of padding around the text */</span>
    padding: 15px;
}
&lt;/<span class="tag">style</span>&gt;
&lt;<span class="tag">button</span> class="button-no-padding"&gt;Button without Padding&lt;/<span class="tag">button</span>&gt;
&lt;<span class="tag">br</span>&gt;&lt;<span class="tag">br</span>&gt;
&lt;<span class="tag">button</span> class="button-with-padding"&gt;Button with Padding&lt;/<span class="tag">button</span>&gt;
</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Result:</h4>
                <div class="html-output" id="paddingOutput"></div>
            </div>
        </div>

        <!-- Slide 5: Margin/Padding Shorthand -->
        <div id="slide-5" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-teal-600 mb-6">4. Shorthand for Margin & Padding</h3>
                <p class="text-lg text-gray-700 mb-4">You can set values for all four sides at once to make your code
                    more concise.</p>
                <ul class="list-disc list-inside pl-4 text-gray-700 space-y-4 text-lg bg-gray-50 p-6 rounded-lg">
                    <li><strong>4 values:</strong> <code>margin: 10px 20px 30px 40px;</code> (top, right, bottom, left)
                    </li>
                    <li><strong>3 values:</strong> <code>margin: 10px 20px 30px;</code> (top, left/right, bottom)</li>
                    <li><strong>2 values:</strong> <code>margin: 10px 20px;</code> (top/bottom, left/right)</li>
                    <li><strong>1 value:</strong> <code>margin: 10px;</code> (all 4 sides)</li>
                </ul>
                <p class="text-lg text-gray-700 mt-4"><em>The same rules apply to <code>padding</code>.</em></p>
                <div class="code-block-container mt-6">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="shorthandCode"><code>&lt;<span class="tag">style</span>&gt;
.shorthand-box {
    background-color: #f5d0fe;
    border: 2px solid #86198f;
    <span class="comment">/* top/bottom: 20px, left/right: 40px */</span>
    padding: 20px 40px;
}
&lt;/<span class="tag">style</span>&gt;
&lt;<span class="tag">div</span> class="shorthand-box"&gt;This box uses padding shorthand.&lt;/<span class="tag">div</span>&gt;
</code></pre>
                </div>
                <div class="html-output" id="shorthandOutput"></div>
            </div>
        </div>

        <!-- Slide 6: Border -->
        <div id="slide-6" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-teal-600 mb-6">5. Border</h3>
                <p class="text-lg text-gray-700 mb-4">The <code>border</code> property allows you to specify the style,
                    width, and color of an element's border.</p>
                <h4 class="text-2xl font-bold text-gray-800 my-4">Shorthand:</h4>
                <p class="text-lg text-gray-700 mb-4"><code>border: [width] [style] [color];</code></p>
                <ul class="list-disc list-inside mt-6 pl-4 text-gray-700 space-y-2 text-lg">
                    <li><code>border-style</code>: The style of the border (<code>solid</code>, <code>dashed</code>,
                        <code>dotted</code>, <code>double</code>, <code>groove</code>, ...).
                    </li>
                    <li><code>border-radius</code>: Used to round the corners of an element.</li>
                </ul>
                <div class="code-block-container mt-4">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="borderCode"><code>&lt;<span class="tag">style</span>&gt;
  .box-border { padding: 20px; margin-bottom: 15px; background-color: #f1f5f9; }
  .solid-border { border: 2px solid #2563eb; }
  .dashed-border { border: 3px dashed #dc2626; }
  .rounded-border { border: 2px solid #16a34a; border-radius: 15px; }
&lt;/<span class="tag">style</span>&gt;
&lt;<span class="tag">div</span> class="box-border solid-border"&gt;Solid border.&lt;/<span class="tag">div</span>&gt;
&lt;<span class="tag">div</span> class="box-border dashed-border"&gt;Dashed border.&lt;/<span class="tag">div</span>&gt;
&lt;<span class="tag">div</span> class="box-border rounded-border"&gt;Rounded border (border-radius).&lt;/<span class="tag">div</span>&gt;
</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Result:</h4>
                <div class="html-output" id="borderOutput"></div>
            </div>
        </div>

        <!-- Slide 7: Width, Height, box-sizing -->
        <div id="slide-7" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-teal-600 mb-6">6. Sizing & Box-sizing</h3>
                <p class="text-lg text-gray-700 mb-4"><code>width</code> and <code>height</code> set the size for the
                    <strong>content</strong> area.
                </p>
                <p class="text-lg text-gray-700 mb-4">This can cause issues: <code>width: 100px</code> +
                    <code>padding: 20px</code> => actual width becomes 140px!
                </p>
                <h4 class="text-2xl font-bold text-red-700 my-4">Solution: `box-sizing: border-box;`</h4>
                <p class="text-lg text-gray-700 mb-6">With this property, <code>padding</code> and <code>border</code>
                    are calculated <strong>inside</strong> the given <code>width</code> and <code>height</code>, not
                    added to it.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="boxSizingCode"><code>&lt;<span class="tag">style</span>&gt;
  .box-sizing {
    width: 200px;
    padding: 20px;
    border: 10px solid #fb923c;
    margin-bottom: 10px;
    color: white;
  }
  .content-box {
    background-color: #1e40af;
    <span class="comment">/* Actual width: 200 + 20*2 + 10*2 = 260px */</span>
    box-sizing: content-box; <span class="comment">/* Default */</span>
  }
  .border-box {
    background-color: #b91c1c;
    <span class="comment">/* Actual width: 200px */</span>
    box-sizing: border-box;
  }
&lt;/<span class="tag">style</span>&gt;
&lt;<span class="tag">div</span> class="box-sizing content-box"&gt;content-box (260px)&lt;/<span class="tag">div</span>&gt;
&lt;<span class="tag">div</span> class="box-sizing border-box"&gt;border-box (200px)&lt;/<span class="tag">div</span>&gt;
</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Result:</h4>
                <div class="html-output" id="boxSizingOutput"></div>
            </div>
        </div>

        <!-- Slide 8: max-width -->
        <div id="slide-8" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-teal-600 mb-6">7. `max-width` for Responsive Design</h3>
                <p class="text-lg text-gray-700 mb-6"><code>max-width</code> is a crucial property for building
                    responsive layouts.</p>
                <ul class="list-disc list-inside pl-4 text-gray-700 space-y-3 text-lg">
                    <li>It ensures an element never gets wider than the given value.</li>
                    <li>But it will automatically shrink on smaller screens.</li>
                    <li>Combining <code>max-width</code> with <code>margin: auto</code> is a common way to create and
                        center a page's main container.</li>
                </ul>
                <div class="code-block-container mt-6">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="maxWidthCode"><code>&lt;<span class="tag">style</span>&gt;
.container {
    max-width: 600px; <span class="comment">/* Max width of 600px */</span>
    margin: 20px auto; <span class="comment">/* Center the container */</span>
    padding: 20px;
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 8px;
}
&lt;/<span class="tag">style</span>&gt;
&lt;<span class="tag">div</span> class="container"&gt;
  &lt;h3&gt;Responsive Container&lt;/<span class="tag">h3</span>&gt;
  &lt;p&gt;Try resizing the browser window. This content will never be wider than 600px, but it will shrink if the window is smaller.&lt;/<span class="tag">p</span>&gt;
&lt;/<span class="tag">div</span>&gt;
</code></pre>
                </div>
                <div class="html-output" id="maxWidthOutput"></div>
            </div>
        </div>

        <!-- Slide 9: Exercise Intro -->
        <div id="slide-9" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-teal-600 mb-6">8. Exercise: Upgrading the Profile Page</h3>
                <p class="text-lg text-gray-700 mb-4">Now, let's apply what we've learned to give the Profile page from
                    Session 1 a "makeover".</p>
                <div class="grid lg:grid-cols-2 gap-8 items-center">
                    <div>
                        <h4 class="text-2xl font-medium text-gray-700 mb-2">Original HTML from Session 1:</h4>
                        <div class="code-block-container">
                            <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i>
                                    Copy</button></div>
                            <pre class="code-block" data-code-id="profileOriginalHtml"><code><span class="comment">&lt;!-- We will start with this code --&gt;</span>
&lt;<span class="tag">h1</span>&gt;Hello, I'm John Doe&lt;/<span class="tag">h1</span>&gt;
&lt;<span class="tag">img</span> <span class="attr-name">src</span>=<span class="attr-value">"https://placehold.co/150"</span> <span class="attr-name">alt</span>=<span class="attr-value">"My profile picture"</span>&gt;
&lt;<span class="tag">p</span>&gt;I am a student passionate about web development. My hobbies include reading and playing games.&lt;/<span class="tag">p</span>&gt;
&lt;<span class="tag">h2</span>&gt;Contact Me:&lt;/<span class="tag">h2</span>&gt;
&lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span>&gt;Facebook&lt;/<span class="tag">a</span>&gt;
</code></pre>
                        </div>
                    </div>
                    <div>
                        <h4 class="text-2xl font-medium text-gray-700 mb-2">Desired Result:</h4>
                        <div class="html-output" id="profileFinalPreview"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 10: Exercise Step 1 -->
        <div id="slide-10" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-teal-600 mb-4">Exercise - Step 1: Create the Container</h3>
                <p class="text-lg text-gray-700 mb-4">First, wrap the entire HTML code in a <code>&lt;div&gt;</code>
                    with the class <code>profile-container</code>. Then, use CSS to create a "card" and center it on the
                    screen.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="profileStep1"><code><span class="comment">&lt;!-- CSS --&gt;</span>
&lt;<span class="tag">style</span>&gt;
  <span class="selector">body</span> {
    <span class="property">background-color</span>: <span class="css-value">#f3f4f6</span>; <span class="comment">/* Add a nice background color */</span>
    <span class="property">font-family</span>: <span class="css-value">'Inter', sans-serif</span>;
  }
  <span class="selector">.profile-container</span> {
    <span class="property">max-width</span>: <span class="css-value">600px</span>;
    <span class="property">margin</span>: <span class="css-value">40px auto</span>; <span class="comment">/* 40px top/bottom, auto left/right to center */</span>
    <span class="property">background-color</span>: <span class="css-value">white</span>;
    <span class="property">border-radius</span>: <span class="css-value">15px</span>;
    <span class="property">box-shadow</span>: <span class="css-value">0 5px 15px rgba(0,0,0,0.05)</span>;
  }
&lt;/<span class="tag">style</span>&gt;

<span class="comment">&lt;!-- HTML --&gt;</span>
&lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-container"</span>&gt;
    &lt;<span class="tag">h1</span>&gt;Hello, I'm John Doe&lt;/<span class="tag">h1</span>&gt;
    &lt;<span class="tag">img</span> <span class="attr-name">src</span>=<span class="attr-value">"https://placehold.co/150"</span> <span class="attr-name">alt</span>=<span class="attr-value">"My profile picture"</span>&gt;
    &lt;<span class="tag">p</span>&gt;I am a student passionate about web development...&lt;/<span class="tag">p</span>&gt;
    &lt;<span class="tag">h2</span>&gt;Contact Me:&lt;/<span class="tag">h2</span>&gt;
    &lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span>&gt;Facebook&lt;/<span class="tag">a</span>&gt;
&lt;/<span class="tag">div</span>&gt;
</code></pre>
                </div>
                <div class="html-output" id="profileStep1Output"></div>
            </div>
        </div>

        <!-- Slide 11: Exercise Step 2 -->
        <div id="slide-11" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-teal-600 mb-4">Exercise - Step 2: Add Padding & Align Content
                </h3>
                <p class="text-lg text-gray-700 mb-4">The content is currently stuck to the card's edges. Let's add
                    <code>padding</code> to the container. Also, center all the content using
                    <code>text-align: center</code>.
                </p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="profileStep2"><code><span class="comment">&lt;!-- Full code for Step 2 --&gt;</span>
&lt;<span class="tag">style</span>&gt;
  <span class="selector">body</span> { 
    <span class="property">background-color</span>: <span class="css-value">#f3f4f6</span>; 
    <span class="property">font-family</span>: <span class="css-value">'Inter'</span>, <span class="css-value">sans-serif</span>; 
  }
  <span class="selector">.profile-container</span> {
    <span class="property">max-width</span>: <span class="css-value">600px</span>;
    <span class="property">margin</span>: <span class="css-value">40px auto</span>;
    <span class="property">background-color</span>: <span class="css-value">white</span>;
    <span class="property">border-radius</span>: <span class="css-value">15px</span>;
    <span class="property">box-shadow</span>: <span class="css-value">0 5px 15px rgba(0,0,0,0.05)</span>;
    <span class="comment">/* -- ADD NEW -- */</span>
    <span class="property">padding</span>: <span class="css-value">40px</span>;
    <span class="property">text-align</span>: <span class="css-value">center</span>;
    <span class="property">box-sizing</span>: <span class="css-value">border-box</span>; <span class="comment">/* Ensures padding doesn't increase the width */</span>
  }
&lt;/<span class="tag">style</span>&gt;

<span class="comment">&lt;!-- HTML --&gt;</span>
&lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-container"</span>&gt;
    &lt;<span class="tag">h1</span>&gt;Hello, I'm John Doe&lt;/<span class="tag">h1</span>&gt;
    &lt;<span class="tag">img</span> <span class="attr-name">src</span>=<span class="attr-value">"https://placehold.co/150"</span> <span class="attr-name">alt</span>=<span class="attr-value">"My profile picture"</span>&gt;
    &lt;<span class="tag">p</span>&gt;I am a student passionate about web development. My hobbies include reading and playing games.&lt;/<span class="tag">p</span>&gt;
    &lt;<span class="tag">h2</span>&gt;Contact Me:&lt;/<span class="tag">h2</span>&gt;
    &lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span>&gt;Facebook&lt;/<span class="tag">a</span>&gt;
&lt;/<span class="tag">div</span>&gt;
</code></pre>
                </div>
                <div class="html-output" id="profileStep2Output"></div>
            </div>
        </div>

        <!-- Slide 12: Exercise Step 3 -->
        <div id="slide-12" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-teal-600 mb-4">Exercise - Step 3: Style the Image & Text</h3>
                <p class="text-lg text-gray-700 mb-4">Now, let's style the individual elements inside: make the profile
                    picture circular and create proper spacing for the text.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="profileStep3"><code><span class="comment">&lt;!-- Full code for Step 3 --&gt;</span>
&lt;<span class="tag">style</span>&gt;
  <span class="selector">body</span> { <span class="property">background-color</span>:<span class="css-value">#f3f4f6</span>; <span class="property">font-family</span>:<span class="css-value">'Inter', sans-serif</span>; }
  <span class="selector">.profile-container</span> {
    <span class="property">max-width</span>: <span class="css-value">600px</span>; <span class="property">margin</span>:<span class="css-value">40px auto</span>;
    <span class="property">background</span>:<span class="css-value">white</span>; <span class="property">border-radius</span>:<span class="css-value">15px</span>;
    <span class="property">box-shadow</span>:<span class="css-value">0 5px 15px rgba(0,0,0,0.05)</span>;
    <span class="property">padding</span>:<span class="css-value">40px</span>; <span class="property">text-align</span>:<span class="css-value">center</span>;
    <span class="property">box-sizing</span>:<span class="css-value">border-box</span>;
  }
  <span class="comment">/* -- ADD NEW -- */</span>
  <span class="selector">.profile-picture</span> {
    <span class="property">width</span>: <span class="css-value">150px</span>; <span class="property">height</span>:<span class="css-value">150px</span>;
    <span class="property">border-radius</span>: <span class="css-value">50%</span>; <span class="comment">/* This is the key to creating a circular image */</span>
    <span class="property">border</span>: <span class="css-value">5px solid #4f46e5</span>;
    <span class="property">object-fit</span>: <span class="css-value">cover</span>; <span class="property">margin-bottom</span>:<span class="css-value">20px</span>;
  }
  <span class="selector">.profile-name</span> {
    <span class="property">font-size</span>: <span class="css-value">2rem</span>; <span class="property">margin</span>:<span class="css-value">0 0 10px 0</span>;
  }
  <span class="selector">.profile-bio</span> {
    <span class="property">color</span>: <span class="css-value">#4b5563</span>; <span class="property">margin-bottom</span>:<span class="css-value">25px</span>;
  }
&lt;/<span class="tag">style</span>&gt;

<span class="comment">&lt;!-- HTML with classes added --&gt;</span>
&lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-container"</span>&gt;
  &lt;<span class="tag">img</span> <span class="attr-name">src</span>=<span class="attr-value">"https://placehold.co/150"</span> <span class="attr-name">alt</span>=<span class="attr-value">"Profile"</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-picture"</span>&gt;
  &lt;<span class="tag">h1</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-name"</span>&gt;Hello, I'm John Doe&lt;/<span class="tag">h1</span>&gt;
  &lt;<span class="tag">p</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-bio"</span>&gt;I am a student passionate about web development. My hobbies include reading and playing games.&lt;/<span class="tag">p</span>&gt;
  &lt;<span class="tag">h2</span>&gt;Contact Me:&lt;/<span class="tag">h2</span>&gt;
  &lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span>&gt;Facebook&lt;/<span class="tag">a</span>&gt;
&lt;/<span class="tag">div</span>&gt;
</code></pre>
                </div>
                <div class="html-output" id="profileStep3Output"></div>
            </div>
        </div>

        <!-- Slide 13: Final Exercise & Code -->
        <div id="slide-13" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-teal-600 mb-4">Exercise - Step 4: Final Touches (Full Code)</h3>
                <p class="text-lg text-gray-700 mb-4">Finally, replace the text links with social media icons from Font
                    Awesome to make the profile look more professional.</p>
                <div class="grid lg:grid-cols-2 gap-8">
                    <div class="code-block-container">
                        <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i>
                                Copy</button></div>
                        <pre class="code-block" data-code-id="profileFinalCode"><code>&lt;<span class="tag">style</span>&gt;
  <span class="selector">body</span> { <span class="property">background</span>:<span class="css-value">#f3f4f6</span>; <span class="property">font-family</span>:<span class="css-value">'Inter'</span>, <span class="css-value">sans-serif</span>; }
  <span class="selector">.profile-container</span> {
    <span class="property">max-width</span>: <span class="css-value">600px</span>; <span class="property">margin</span>: <span class="css-value">40px auto</span>;
    <span class="property">background</span>: <span class="css-value">white</span>; <span class="property">border-radius</span>: <span class="css-value">15px</span>;
    <span class="property">box-shadow</span>: <span class="css-value">0 5px 15px rgba(0,0,0,0.05)</span>;
    <span class="property">padding</span>: <span class="css-value">40px</span>; <span class="property">text-align</span>: <span class="css-value">center</span>;
    <span class="property">box-sizing</span>: <span class="css-value">border-box</span>;
  }
  <span class="selector">.profile-picture</span> {
    <span class="property">width</span>: <span class="css-value">150px</span>; <span class="property">height</span>: <span class="css-value">150px</span>;
    <span class="property">border-radius</span>: <span class="css-value">50%</span>; <span class="property">border</span>: <span class="css-value">5px solid #4f46e5</span>;
    <span class="property">object-fit</span>: <span class="css-value">cover</span>; <span class="property">margin-bottom</span>: <span class="css-value">20px</span>;
  }
  <span class="selector">.profile-name</span> { <span class="property">font-size</span>: <span class="css-value">2rem</span>; <span class="property">margin</span>: <span class="css-value">0 0 10px</span>; }
  <span class="selector">.profile-bio</span> { <span class="property">color</span>: <span class="css-value">#4b5563</span>; <span class="property">margin-bottom</span>: <span class="css-value">25px</span>; }
  <span class="selector">.social-links a</span> {
    <span class="property">color</span>: <span class="css-value">#4f46e5</span>; <span class="property">text-decoration</span>: <span class="css-value">none</span>;
    <span class="property">margin</span>: <span class="css-value">0 15px</span>; <span class="property">font-size</span>: <span class="css-value">1.5rem</span>;
  }
&lt;/<span class="tag">style</span>&gt;

&lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-container"</span>&gt;
  &lt;<span class="tag">img</span> <span class="attr-name">src</span>=<span class="attr-value">"https://placehold.co/150"</span> <span class="attr-name">alt</span>=<span class="attr-value">"Profile"</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-picture"</span>&gt;
  &lt;<span class="tag">h1</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-name"</span>&gt;John Doe&lt;/<span class="tag">h1</span>&gt;
  &lt;<span class="tag">p</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-bio"</span>&gt;A passionate Web Developer who loves learning new technologies and building useful web applications.&lt;/<span class="tag">p</span>&gt;
  &lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"social-links"</span>&gt;
    &lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span>&gt;&lt;<span class="tag">i</span> <span class="attr-name">class</span>=<span class="attr-value">"fab fa-github"</span>&gt;&lt;/<span class="tag">i</span>&gt;&lt;/<span class="tag">a</span>&gt;
    &lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span>&gt;&lt;<span class="tag">i</span> <span class="attr-name">class</span>=<span class="attr-value">"fab fa-linkedin"</span>&gt;&lt;/<span class="tag">i</span>&gt;&lt;/<span class="tag">a</span>&gt;
    &lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span>&gt;&lt;<span class="tag">i</span> <span class="attr-name">class</span>=<span class="attr-value">"fab fa-facebook"</span>&gt;&lt;/<span class="tag">i</span>&gt;&lt;/<span class="tag">a</span>&gt;
  &lt;/<span class="tag">div</span>&gt;
&lt;/<span class="tag">div</span>&gt;
</code></pre>
                    </div>
                    <div>
                        <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Final Result:</h4>
                        <div class="html-output" id="profileFinalOutput"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 14: Summary -->
        <div id="slide-14" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-teal-700 mb-8">Session 3 Summary</h2>
                <div class="text-xl text-gray-700 space-y-5 max-w-4xl text-left bg-gray-50 p-8 rounded-lg shadow">
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>You now understand the <strong>CSS Box
                            Model</strong> (Content, Padding, Border, Margin).</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>You know how to use and write shorthand
                        for <code>padding</code> and <code>margin</code>.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>You understand the importance of
                        <strong>`box-sizing: border-box;`</strong> for size calculations.
                    </p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>You know how to use <code>max-width</code>
                        to create responsive containers.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>You have applied all this knowledge to
                        build real UI components.</p>
                </div>
                <div
                    class="mt-12 bg-green-100 border-l-4 border-green-500 text-green-700 p-6 rounded-r-lg shadow-lg w-full max-w-4xl">
                    <h4 class="text-2xl font-bold mb-2">See you in Session 4!</h4>
                    <p class="text-lg">We will explore more modern and powerful layout techniques with
                        <strong>Flexbox</strong>!
                    </p>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // DOM variable declarations
            const slides = Array.from(document.querySelectorAll('.slide'));
            const prevButton = document.getElementById('prevSlide');
            const nextButton = document.getElementById('nextSlide');
            const currentSlideNumDisplay = document.getElementById('currentSlideNum');
            const totalSlidesNumDisplay = document.getElementById('totalSlidesNum');

            let currentSlide = 0;
            if (totalSlidesNumDisplay) {
                totalSlidesNumDisplay.textContent = slides.length || '0';
            }

            // Function to show the current slide and hide others
            function showSlide(index) {
                slides.forEach((slide, i) => {
                    slide.classList.remove('active');
                    if (i === index) {
                        slide.style.display = 'flex';
                        // Add a small delay for the transition effect
                        setTimeout(() => slide.classList.add('active'), 10);
                    } else {
                        // Delay hiding the slide to allow the fade-out effect
                        setTimeout(() => {
                            if (!slide.classList.contains('active')) slide.style.display = 'none';
                        }, 400);
                    }
                });
                if (currentSlideNumDisplay) {
                    currentSlideNumDisplay.textContent = index + 1;
                }
                updateNavButtons();
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }

            // Function to update the state of navigation buttons
            function updateNavButtons() {
                if (!prevButton || !nextButton) return;
                prevButton.disabled = currentSlide === 0;
                nextButton.disabled = currentSlide === slides.length - 1;
            }

            // Function to copy code, using an older method for better compatibility
            function copyCode(buttonElement) {
                const codeBlock = buttonElement.closest('.code-block-container').querySelector('pre.code-block');
                if (!codeBlock) return;

                const codeToCopy = codeBlock.innerText;
                const textarea = document.createElement('textarea');
                textarea.value = codeToCopy;
                document.body.appendChild(textarea);
                textarea.select();
                try {
                    document.execCommand('copy');
                    const originalIcon = buttonElement.innerHTML;
                    buttonElement.innerHTML = '<i class="fas fa-check"></i> Copied!';
                    setTimeout(() => {
                        buttonElement.innerHTML = originalIcon;
                    }, 1500);
                } catch (err) {
                    console.error('Could not copy text: ', err);
                }
                document.body.removeChild(textarea);
            }

            // Function to render example code into an output area
            function renderHtml(codeString, outputEl) {
                if (!outputEl) return;
                let styleContent = '';
                const styleMatch = codeString.match(/<style>([\s\S]*?)<\/style>/i);
                if (styleMatch) styleContent = styleMatch[1];

                let bodyContent = codeString.replace(/<style>([\s\S]*?)<\/style>/i, '').trim();
                let fontAwesome = bodyContent.includes('fab fa-') ? `<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">` : '';

                outputEl.innerHTML = '';
                const shadow = outputEl.attachShadow({ mode: 'open' });
                shadow.innerHTML = `<style>${styleContent}</style>${fontAwesome}<div style="font-family: 'Inter', sans-serif;">${bodyContent}</div>`;
            }

            // Helper function to render an example from a code block
            function renderExample(codeBlockId, outputId) {
                const codeBlockEl = document.querySelector(`[data-code-id="${codeBlockId}"]`);
                const outputEl = document.getElementById(outputId);
                if (!codeBlockEl || !outputEl) return;

                renderHtml(codeBlockEl.innerText, outputEl);
            }

            // --- START RENDERING EXAMPLES ---
            // Wrap all render calls in a try...catch block to ensure that if one fails,
            // the navigation buttons still work.
            try {
                // Render basic examples
                renderExample('marginCode', 'marginOutput');
                renderExample('paddingCode', 'paddingOutput');
                renderExample('shorthandCode', 'shorthandOutput');
                renderExample('borderCode', 'borderOutput');
                renderExample('boxSizingCode', 'boxSizingOutput');
                renderExample('maxWidthCode', 'maxWidthOutput');

                // Render steps of the Profile exercise
                renderExample('profileFinalCode', 'profileFinalPreview');
                renderExample('profileStep1', 'profileStep1Output');
                renderExample('profileStep2', 'profileStep2Output');
                renderExample('profileStep3', 'profileStep3Output');
                renderExample('profileFinalCode', 'profileFinalOutput');
            } catch (e) {
                console.error("A critical error occurred while rendering examples, navigation might be affected:", e);
            }
            // --- END RENDERING EXAMPLES ---


            // Assign events to navigation buttons
            if (prevButton && nextButton) {
                prevButton.addEventListener('click', () => {
                    if (currentSlide > 0) {
                        currentSlide--;
                        showSlide(currentSlide);
                    }
                });

                nextButton.addEventListener('click', () => {
                    if (currentSlide < slides.length - 1) {
                        currentSlide++;
                        showSlide(currentSlide);
                    }
                });
            }

            // Assign events to copy buttons
            document.querySelectorAll('.copy-button').forEach(button => {
                button.addEventListener('click', () => copyCode(button));
            });

            // Show the first slide on page load
            if (slides.length > 0) {
                showSlide(currentSlide);
            }
        });
    </script>
</body>

</html>

/* ===== Web Basic English/lesson4.html ===== */
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Session 4: CSS Flexbox</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            scroll-behavior: smooth;
            background-color: #f3f4f6;
        }

        #navbar {
            position: sticky;
            top: 0;
            z-index: 50;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .slide-container {
            padding-top: 1rem;
        }

        .slide {
            background-color: white;
            padding: 2.5rem;
            border-radius: 0.75rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            margin-bottom: 2rem;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
            min-height: calc(100vh - 120px);
            display: none;
            flex-direction: column;
        }

        .slide.active {
            display: flex;
            opacity: 1;
            transform: translateY(0);
        }

        .slide-content-wrapper {
            flex-grow: 1;
        }

        .code-block-container {
            position: relative;
            background-color: #1e293b;
            border-radius: 0.5rem;
            margin-top: 1rem;
            margin-bottom: 1rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .code-block-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.5rem 0.75rem;
            background-color: #334155;
            border-top-left-radius: 0.5rem;
            border-top-right-radius: 0.5rem;
        }

        .file-name {
            color: #e2e8f0;
            font-size: 0.875rem;
            font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
        }

        .copy-button {
            background-color: #4a5568;
            color: #e2e8f0;
            border: none;
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            cursor: pointer;
            font-size: 0.875rem;
            transition: background-color 0.2s;
        }

        .copy-button:hover {
            background-color: #718096;
        }

        .copy-button .fa-copy {
            margin-right: 0.375rem;
        }

        .copy-button .fa-check {
            margin-right: 0.375rem;
            color: #48bb78;
        }


        .code-block {
            background-color: #1e293b;
            color: #e2e8f0;
            padding: 1.5rem;
            border-bottom-left-radius: 0.5rem;
            border-bottom-right-radius: 0.5rem;
            font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
            white-space: pre-wrap;
            word-wrap: break-word;
            font-size: 0.875em;
            line-height: 1.6;
            overflow-x: auto;
        }

        .html-output {
            border: 1px solid #e2e8f0;
            padding: 1.5rem;
            margin-top: 1rem;
            border-radius: 0.5rem;
            background-color: #f7fafc;
            min-height: 100px;
            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);
        }

        .flex-demo-container {
            display: flex;
            background-color: #f0f9ff;
            border-radius: 8px;
            padding: 1rem;
            min-height: 150px;
            border: 2px dashed #0ea5e9;
        }

        .flex-demo-container>div {
            background-color: #0ea5e9;
            color: white;
            padding: 1rem;
            margin: 0.5rem;
            border-radius: 6px;
            text-align: center;
            font-weight: bold;
            flex-grow: 0;
            flex-shrink: 0;
        }
    </style>
</head>

<body class="text-gray-800">

    <nav id="navbar" class="p-4">
        <div class="container mx-auto flex flex-wrap justify-between items-center">
            <h1 class="text-xl font-bold text-indigo-600">Web Development - Session 4</h1>
            <div class="flex items-center mt-2 sm:mt-0">
                <button id="prevSlide"
                    class="bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-lg shadow mr-2 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    <i class="fas fa-arrow-left mr-1"></i> Prev Slide
                </button>
                <button id="nextSlide"
                    class="bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    Next Slide <i class="fas fa-arrow-right ml-1"></i>
                </button>
            </div>
            <div class="text-sm text-gray-600 mt-2 sm:mt-0 ml-0 sm:ml-4">
                Slide <span id="currentSlideNum">1</span> / <span id="totalSlidesNum"></span>
            </div>
        </div>
    </nav>

    <div class="container mx-auto p-4 slide-container">
        <!-- Slide 1: Title -->
        <div id="slide-1" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-indigo-700 mb-6">Session 4: CSS Flexbox</h2>
                <p class="text-2xl text-gray-600 mb-12">Mastering Modern Layout Techniques</p>
                <img src="https://placehold.co/600x350/6366F1/FFFFFF?text=Flexbox" alt="[Image of CSS Flexbox]"
                    class="rounded-lg shadow-xl max-w-2xl">
                <p class="mt-10 text-xl text-gray-700">Let's learn how to structure web page layouts flexibly!</p>
            </div>
        </div>

        <!-- Slide 2: External CSS -->
        <div id="slide-2" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6">1. External CSS - Using a Separate CSS File</h3>
                <p class="text-lg text-gray-700 mb-4">Instead of writing CSS directly in a <code>&lt;style&gt;</code>
                    tag, we should create a separate CSS file (e.g., <code>styles.css</code>) and link it to our HTML
                    file.</p>
                <h4 class="text-2xl font-medium text-gray-800 mb-3 mt-5">Benefits:</h4>
                <ul class="list-disc list-inside pl-4 text-gray-700 space-y-3 text-lg">
                    <li><strong>Easier Maintenance:</strong> Manage CSS code centrally in one place.</li>
                    <li><strong>Reusability:</strong> One CSS file can be used for multiple HTML pages.</li>
                    <li><strong>Faster Page Load:</strong> The browser can cache the CSS file.</li>
                </ul>
                <h4 class="text-2xl font-medium text-gray-800 mb-3 mt-6">How to do it:</h4>
                <p class="text-lg text-gray-700 mb-4">In the HTML file, place the <code>&lt;link&gt;</code> tag inside
                    the <code>&lt;head&gt;</code> section.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><span class="file-name">index.html</span><button
                            class="copy-button"><i class="far fa-copy"></i> Copy</button></div>
                    <pre class="code-block" data-code-id="externalCssHtml"><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;My Page&lt;/title&gt;
  &lt;link rel="stylesheet" href="styles.css"&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Hello World!&lt;/h1&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
                </div>
                <div class="code-block-container">
                    <div class="code-block-header"><span class="file-name">styles.css</span><button
                            class="copy-button"><i class="far fa-copy"></i> Copy</button></div>
                    <pre class="code-block" data-code-id="externalCssCss"><code>body {
  background-color: #f0f4f8;
  font-family: sans-serif;
}

h1 {
  color: #3b82f6;
  text-align: center;
}</code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 3: Intro to Flexbox -->
        <div id="slide-3" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6">2. Introduction to Flexbox</h3>
                <p class="text-lg text-gray-700 mb-4">Flexbox (Flexible Box Layout) is a CSS layout model that allows
                    items in a container to be dynamically arranged and distributed, even when their size is unknown or
                    dynamic.</p>
                <p class="text-lg text-gray-700 mb-6">Flexbox is based on two main components:</p>
                <div class="grid md:grid-cols-2 gap-8 text-lg">
                    <div class="bg-blue-50 p-6 rounded-lg border border-blue-200">
                        <h4 class="text-2xl font-bold text-blue-800 mb-2">Flex Container</h4>
                        <p>The "parent" element that wraps the items. You enable Flexbox by setting its
                            <code>display: flex;</code> property.
                        </p>
                    </div>
                    <div class="bg-purple-50 p-6 rounded-lg border border-purple-200">
                        <h4 class="text-2xl font-bold text-purple-800 mb-2">Flex Items</h4>
                        <p>The direct "child" elements inside the flex container. They will be arranged according to
                            Flexbox rules.</p>
                    </div>
                </div>
                <div class="mt-8 p-4 bg-gray-100 rounded-lg text-center">
                    <img src="https://placehold.co/700x250/E0E7FF/4F46E5?text=Flex+Container+%26+Items"
                        alt="[Diagram of Flex Container and Flex Items]" class="mx-auto rounded-md shadow-md">
                </div>
            </div>
        </div>

        <!-- Slide 4: Flex Container - display & flex-direction -->
        <div id="slide-4" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6">3. Flex Container Properties</h3>
                <h4 class="text-2xl font-medium text-gray-800 mb-3">display: flex</h4>
                <p class="text-lg text-gray-700 mb-6">This is the most important property to get started. It turns an
                    element into a flex container.</p>

                <h4 class="text-2xl font-medium text-gray-800 mb-3">flex-direction: Defining the Flow Direction</h4>
                <p class="text-lg text-gray-700 mb-4">This property establishes the main axis, thus defining the
                    direction flex items are placed in the flex container.</p>

                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="flexDirectionCode"><code>.container {
  display: flex;
  /* Possible values: */
  flex-direction: row; /* (default) Items are placed from left to right */
  /* flex-direction: row-reverse; */ /* From right to left */
  /* flex-direction: column; */      /* From top to bottom */
  /* flex-direction: column-reverse; */ /* From bottom to top */
}</code></pre>
                </div>

                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Example: <code>flex-direction: row;</code>
                    (default)</h4>
                <div class="html-output" id="flexDirectionRowOutput"></div>

                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Example: <code>flex-direction: column;</code>
                </h4>
                <div class="html-output" id="flexDirectionColumnOutput"></div>
            </div>
        </div>

        <!-- Slide 5: justify-content -->
        <div id="slide-5" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6">4. `justify-content`: Aligning on the Main Axis
                </h3>
                <p class="text-lg text-gray-700 mb-6">This property is used to align flex items along the <strong>main
                        axis</strong> of the flex container. The main axis is defined by <code>flex-direction</code>.
                </p>

                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="justifyContentCode"><code>.container {
  display: flex;
  /* flex-direction: row; (default) */

  /* Align items */
  justify-content: flex-start; /* (default) Items are packed toward the start */
  /* justify-content: flex-end; */   /* Items are packed toward the end */
  /* justify-content: center; */    /* Items are centered along the line */
  /* justify-content: space-between; */ /* Items are evenly distributed; first item is on the start line, last item on the end line */
  /* justify-content: space-around; */  /* Items are evenly distributed with equal space around them */
  /* justify-content: space-evenly; */  /* Items are distributed so that the spacing between any two items is equal */
}</code></pre>
                </div>

                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Interactive Example:</h4>
                <div class="flex items-center space-x-2 mb-4">
                    <label for="justifyContentSelect">Choose <code>justify-content</code> value:</label>
                    <select id="justifyContentSelect" class="p-2 border rounded-md bg-white">
                        <option value="flex-start">flex-start</option>
                        <option value="flex-end">flex-end</option>
                        <option value="center">center</option>
                        <option value="space-between">space-between</option>
                        <option value="space-around">space-around</option>
                        <option value="space-evenly">space-evenly</option>
                    </select>
                </div>
                <div id="justifyContentDemoContainer" class="flex-demo-container" style="transition: all 0.3s ease;">
                    <div>1</div>
                    <div>2</div>
                    <div>3</div>
                </div>
            </div>
        </div>

        <!-- Slide 6: align-items -->
        <div id="slide-6" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6">5. `align-items`: Aligning on the Cross Axis
                </h3>
                <p class="text-lg text-gray-700 mb-6">This property is used to align flex items along the <strong>cross
                        axis</strong>, which is the axis perpendicular to the main axis.</p>

                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="alignItemsCode"><code>.container {
  display: flex;
  height: 200px; /* Height is needed to see the effect */

  /* Align items */
  align-items: stretch; /* (default) Stretch to fill the container */
  /* align-items: flex-start; */ /* Placed at the start of the cross axis */
  /* align-items: flex-end; */   /* Placed at the end of the cross axis */
  /* align-items: center; */    /* Centered in the cross axis */
  /* align-items: baseline; */  /* Align based on the items' text baseline */
}</code></pre>
                </div>

                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Interactive Example:</h4>
                <div class="flex items-center space-x-2 mb-4">
                    <label for="alignItemsSelect">Choose <code>align-items</code> value:</label>
                    <select id="alignItemsSelect" class="p-2 border rounded-md bg-white">
                        <option value="stretch">stretch</option>
                        <option value="flex-start">flex-start</option>
                        <option value="flex-end">flex-end</option>
                        <option value="center">center</option>
                        <option value="baseline">baseline</option>
                    </select>
                </div>
                <div id="alignItemsDemoContainer" class="flex-demo-container"
                    style="height: 200px; transition: all 0.3s ease;">
                    <div style="padding-top: 1rem; padding-bottom: 1rem;">1</div>
                    <div style="padding-top: 2rem; padding-bottom: 2rem; font-size: 1.5rem;">2</div>
                    <div style="padding-top: 0.5rem; padding-bottom: 0.5rem;">3</div>
                </div>
            </div>
        </div>

        <!-- Slide 7: Example 1 - Navigation Bar -->
        <div id="slide-7" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6">6. Example 1: Building a Navigation Bar</h3>
                <p class="text-lg text-gray-700 mb-4">Flexbox is perfect for creating a simple navigation bar, with a
                    logo on the left and links on the right.</p>
                <div class="grid lg:grid-cols-2 gap-6">
                    <div>
                        <div class="code-block-container">
                            <div class="code-block-header"><span class="file-name">HTML</span><button
                                    class="copy-button"><i class="far fa-copy"></i> Copy</button></div>
                            <pre class="code-block" data-code-id="navHtml"><code>&lt;nav class="navbar"&gt;
  &lt;div class="logo"&gt;Logo&lt;/div&gt;
  &lt;ul class="nav-links"&gt;
    &lt;li&gt;&lt;a href="#"&gt;Home&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="#"&gt;Products&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="#"&gt;Contact&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;</code></pre>
                        </div>
                        <div class="code-block-container">
                            <div class="code-block-header"><span class="file-name">CSS</span><button
                                    class="copy-button"><i class="far fa-copy"></i> Copy</button></div>
                            <pre class="code-block" data-code-id="navCss"><code>.navbar {
  display: flex;
  justify-content: space-between; /* Pushes logo and nav-links to opposite ends */
  align-items: center; /* Vertically centers the items */
  background-color: #4338ca;
  padding: 1rem 2rem;
  border-radius: 8px;
  color: white;
}
.logo { font-size: 1.5rem; font-weight: bold; }
.nav-links {
  display: flex;
  list-style: none; /* Removes bullet points */
  padding: 0;
  margin: 0;
}
.nav-links li { margin-left: 1.5rem; }
.nav-links a { color: white; text-decoration: none; }</code></pre>
                        </div>
                    </div>
                    <div>
                        <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Result:</h4>
                        <div class="html-output" id="navOutput"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 8: Example 2 - Card Layout -->
        <div id="slide-8" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6">7. Example 2: Card Layout</h3>
                <p class="text-lg text-gray-700 mb-4">Use <code>flex-wrap: wrap;</code> to allow items to wrap onto the
                    next line when there isn't enough space, creating a responsive layout.</p>
                <div class="grid lg:grid-cols-2 gap-6">
                    <div>
                        <div class="code-block-container">
                            <div class="code-block-header"><span class="file-name">HTML</span><button
                                    class="copy-button"><i class="far fa-copy"></i> Copy</button></div>
                            <pre class="code-block" data-code-id="cardHtml"><code>&lt;div class="card-container"&gt;
  &lt;div class="card"&gt;Card 1&lt;/div&gt;
  &lt;div class="card"&gt;Card 2&lt;/div&gt;
  &lt;div class="card"&gt;Card 3&lt;/div&gt;
  &lt;div class="card"&gt;Card 4&lt;/div&gt;
&lt;/div&gt;</code></pre>
                        </div>
                        <div class="code-block-container">
                            <div class="code-block-header"><span class="file-name">CSS</span><button
                                    class="copy-button"><i class="far fa-copy"></i> Copy</button></div>
                            <pre class="code-block" data-code-id="cardCss"><code>.card-container {
  display: flex;
  flex-wrap: wrap; /* Allows items to wrap to the next line */
  gap: 1rem; /* Creates space between cards */
}
.card {
  background-color: #ecfdf5;
  border: 1px solid #10b981;
  border-radius: 8px;
  padding: 2rem;
  text-align: center;
  /* flex: 1 1 200px; */ /* Shorthand for flex-grow, flex-shrink, flex-basis */
  flex-grow: 1; /* Allows the card to grow to fill available space */
  min-width: 200px; /* Minimum width for each card */
}</code></pre>
                        </div>
                    </div>
                    <div>
                        <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Result (try resizing the window):</h4>
                        <div class="html-output" id="cardOutput"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 9: Flexbox Froggy -->
        <div id="slide-9" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-4xl font-bold text-emerald-600 mb-6">8. Practice with Flexbox Froggy!</h2>
                <p class="text-2xl text-gray-600 mb-8 max-w-3xl">The best way to master Flexbox is by practicing. Play
                    the Flexbox Froggy game to reinforce your knowledge in a fun way!</p>
                <a href="https://flexboxfroggy.com/" target="_blank" class="mb-8 block">
                    <img src="https://placehold.co/700x400/22C55E/FFFFFF?text=Flexbox+Froggy"
                        alt="[Screenshot of the Flexbox Froggy game]"
                        class="rounded-lg shadow-xl hover:shadow-2xl transition-shadow duration-300">
                </a>
                <a href="https://flexboxfroggy.com/" target="_blank"
                    class="bg-emerald-500 hover:bg-emerald-700 text-white font-bold py-4 px-8 rounded-lg shadow-lg text-2xl transition duration-150 ease-in-out">
                    Play Now <i class="fas fa-gamepad ml-2"></i>
                </a>
            </div>
        </div>

        <!-- Slide 10: Summary -->
        <div id="slide-10" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-indigo-700 mb-8">Session 4 Summary</h2>
                <div class="text-xl text-gray-700 space-y-5 max-w-4xl text-left bg-gray-50 p-8 rounded-lg shadow">
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>You now know how to organize code with an
                        <strong>External CSS file</strong>.
                    </p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>You understand the core concepts of
                        Flexbox: <strong>Flex Container</strong> and <strong>Flex Items</strong>.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>You have learned the key properties for
                        layout: <code>display: flex</code>, <code>flex-direction</code>, <code>justify-content</code>,
                        and <code>align-items</code>.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>You know how to use <code>flex-wrap</code>
                        to create responsive layouts.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>You have applied this knowledge to build
                        real UI components.</p>
                </div>
                <div
                    class="mt-12 bg-indigo-100 border-l-4 border-indigo-500 text-indigo-700 p-6 rounded-r-lg shadow-lg w-full max-w-4xl">
                    <h4 class="text-2xl font-bold mb-2">See you in Session 5!</h4>
                    <p class="text-lg">We will explore another powerful layout tool: <strong>CSS Grid</strong>!</p>
                </div>
            </div>
        </div>

    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const slides = Array.from(document.querySelectorAll('.slide'));
            const prevButton = document.getElementById('prevSlide');
            const nextButton = document.getElementById('nextSlide');
            const currentSlideNumDisplay = document.getElementById('currentSlideNum');
            const totalSlidesNumDisplay = document.getElementById('totalSlidesNum');

            let currentSlide = 0;
            if (totalSlidesNumDisplay) {
                totalSlidesNumDisplay.textContent = slides.length || '0';
            }

            function showSlide(index) {
                slides.forEach((slide, i) => {
                    slide.classList.remove('active');
                    if (i === index) {
                        slide.style.display = 'flex';
                        setTimeout(() => slide.classList.add('active'), 10);
                    } else {
                        setTimeout(() => {
                            if (!slide.classList.contains('active')) slide.style.display = 'none';
                        }, 400);
                    }
                });
                if (currentSlideNumDisplay) {
                    currentSlideNumDisplay.textContent = index + 1;
                }
                updateNavButtons();
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }

            function updateNavButtons() {
                if (!prevButton || !nextButton) return;
                prevButton.disabled = currentSlide === 0;
                nextButton.disabled = currentSlide === slides.length - 1;
            }

            function copyCode(buttonElement) {
                const codeBlock = buttonElement.closest('.code-block-container').querySelector('pre.code-block');
                if (!codeBlock) return;

                const codeToCopy = codeBlock.innerText;
                const textarea = document.createElement('textarea');
                textarea.value = codeToCopy;
                document.body.appendChild(textarea);
                textarea.select();
                try {
                    document.execCommand('copy');
                    const originalIcon = buttonElement.innerHTML;
                    buttonElement.innerHTML = '<i class="fas fa-check"></i> Copied!';
                    setTimeout(() => {
                        buttonElement.innerHTML = originalIcon;
                    }, 1500);
                } catch (err) {
                    console.error('Could not copy text: ', err);
                }
                document.body.removeChild(textarea);
            }

            function renderHtml(htmlContent, cssContent, outputEl) {
                if (!outputEl) return;

                outputEl.innerHTML = ''; // Clear previous content
                const shadow = outputEl.attachShadow({ mode: 'open' });
                shadow.innerHTML = `<style>${cssContent}</style><div style="font-family: 'Inter', sans-serif;">${htmlContent}</div>`;
            }

            function renderExample(htmlCodeId, cssCodeId, outputId) {
                const htmlBlockEl = document.querySelector(`[data-code-id="${htmlCodeId}"]`);
                const cssBlockEl = document.querySelector(`[data-code-id="${cssCodeId}"]`);
                const outputEl = document.getElementById(outputId);
                if (!htmlBlockEl || !cssBlockEl || !outputEl) return;
                renderHtml(htmlBlockEl.innerText, cssBlockEl.innerText, outputEl);
            }

            // --- RENDER EXAMPLES ---
            try {
                // Nav Bar Example
                renderExample('navHtml', 'navCss', 'navOutput');

                // Card Layout Example
                renderExample('cardHtml', 'cardCss', 'cardOutput');

                // Flex Direction examples
                const flexDirectionBaseHtml = `<div class="container-demo"><div>1</div><div>2</div><div>3</div></div>`;
                const flexDirectionBaseCss = `.container-demo { display: flex; background-color: #e0f2fe; padding: 0.5rem; border-radius: 8px;} .container-demo > div { background-color: #0ea5e9; color: white; margin: 0.5rem; padding: 1rem; border-radius: 6px; }`;

                renderHtml(flexDirectionBaseHtml, `${flexDirectionBaseCss} .container-demo { flex-direction: row; }`, document.getElementById('flexDirectionRowOutput'));
                renderHtml(flexDirectionBaseHtml, `${flexDirectionBaseCss} .container-demo { flex-direction: column; }`, document.getElementById('flexDirectionColumnOutput'));

                // Interactive examples
                const justifyContentSelect = document.getElementById('justifyContentSelect');
                const justifyContentContainer = document.getElementById('justifyContentDemoContainer');
                if (justifyContentSelect && justifyContentContainer) {
                    justifyContentSelect.addEventListener('change', (e) => {
                        justifyContentContainer.style.justifyContent = e.target.value;
                    });
                }

                const alignItemsSelect = document.getElementById('alignItemsSelect');
                const alignItemsContainer = document.getElementById('alignItemsDemoContainer');
                if (alignItemsSelect && alignItemsContainer) {
                    alignItemsSelect.addEventListener('change', (e) => {
                        // Reset height for stretch to work correctly
                        Array.from(alignItemsContainer.children).forEach(child => {
                            child.style.height = (e.target.value === 'stretch') ? '' : 'auto';
                        });
                        alignItemsContainer.style.alignItems = e.target.value;
                    });
                    // Initial state trigger
                    alignItemsSelect.dispatchEvent(new Event('change'));
                }


            } catch (e) {
                console.error("Error rendering examples:", e);
            }
            // --- END RENDERING EXAMPLES ---

            // Assign events to navigation buttons
            if (prevButton && nextButton) {
                prevButton.addEventListener('click', () => {
                    if (currentSlide > 0) {
                        currentSlide--;
                        showSlide(currentSlide);
                    }
                });

                nextButton.addEventListener('click', () => {
                    if (currentSlide < slides.length - 1) {
                        currentSlide++;
                        showSlide(currentSlide);
                    }
                });
            }

            // Assign events to copy buttons
            document.querySelectorAll('.copy-button').forEach(button => {
                button.addEventListener('click', () => copyCode(button));
            });

            // Show the first slide on page load
            if (slides.length > 0) {
                showSlide(currentSlide);
            }
        });
    </script>
</body>

</html>

/* ===== Web Basic English/lesson5_overview.html ===== */
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Session 5: Building UI Components with Hover & Transitions</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            scroll-behavior: smooth;
            background-color: #f3f4f6;
        }

        #navbar {
            position: sticky;
            top: 0;
            z-index: 50;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .slide-container {
            padding-top: 1rem;
        }

        .slide {
            background-color: white;
            padding: 2.5rem;
            border-radius: 0.75rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            margin-bottom: 2rem;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
            min-height: calc(100vh - 120px);
            display: none;
            flex-direction: column;
        }

        .slide.active {
            display: flex;
            opacity: 1;
            transform: translateY(0);
        }

        .slide-content-wrapper {
            flex-grow: 1;
        }

        .code-block-container {
            position: relative;
            background-color: #1e293b;
            border-radius: 0.5rem;
            margin-top: 1rem;
            margin-bottom: 1rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .code-block-header {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            padding: 0.5rem 0.75rem;
            background-color: #334155;
            border-top-left-radius: 0.5rem;
            border-top-right-radius: 0.5rem;
        }

        .copy-button {
            background-color: #4a5568;
            color: #e2e8f0;
            border: none;
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            cursor: pointer;
            font-size: 0.875rem;
            transition: background-color 0.2s;
        }

        .copy-button:hover {
            background-color: #718096;
        }

        .copy-button .fa-copy {
            margin-right: 0.375rem;
        }

        .copy-button .fa-check {
            margin-right: 0.375rem;
            color: #48bb78;
        }

        .code-block {
            background-color: #1e293b;
            color: #e2e8f0;
            padding: 1.5rem;
            border-bottom-left-radius: 0.5rem;
            border-bottom-right-radius: 0.5rem;
            font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
            white-space: pre-wrap;
            word-wrap: break-word;
            font-size: 0.875em;
            line-height: 1.6;
            overflow-x: auto;
        }

        .html-output {
            border: 1px solid #e2e8f0;
            padding: 1.5rem;
            margin-top: 1rem;
            border-radius: 0.5rem;
            background-color: #f7fafc;
            min-height: 100px;
            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);
        }
    </style>
</head>

<body class="text-gray-800">

    <nav id="navbar" class="p-4">
        <div class="container mx-auto flex flex-wrap justify-between items-center">
            <h1 class="text-xl font-bold text-violet-600">Web Development - Session 5</h1>
            <div class="flex items-center mt-2 sm:mt-0">
                <button id="prevSlide"
                    class="bg-violet-500 hover:bg-violet-700 text-white font-bold py-2 px-4 rounded-lg shadow mr-2 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    <i class="fas fa-arrow-left mr-1"></i> Prev Slide
                </button>
                <button id="nextSlide"
                    class="bg-violet-500 hover:bg-violet-700 text-white font-bold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    Next Slide <i class="fas fa-arrow-right ml-1"></i>
                </button>
            </div>
            <div class="text-sm text-gray-600 mt-2 sm:mt-0 ml-0 sm:ml-4">
                Slide <span id="currentSlideNum">1</span> / <span id="totalSlidesNum"></span>
            </div>
        </div>
    </nav>

    <div class="container mx-auto p-4 slide-container">
        <div id="slide-1" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-violet-700 mb-6">Session 5: Building UI Components</h2>
                <p class="text-2xl text-gray-600 mb-12">Adding Life with Hover & Transition Effects</p>
                <img src="https://placehold.co/600x350/8B5CF6/FFFFFF?text=UI+Components" alt=""
                    class="rounded-lg shadow-xl max-w-2xl">
                <p class="mt-10 text-xl text-gray-700">Let's build beautiful and interactive elements!</p>
            </div>
        </div>

        <div id="slide-2" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-violet-600 mb-6">1. Review and Today's Goal</h3>
                <p class="text-lg text-gray-700 mb-4">In the previous sessions, we have learned the fundamentals:</p>
                <ul class="list-disc list-inside pl-4 text-gray-700 space-y-3 text-lg bg-gray-50 p-6 rounded-lg mb-8">
                    <li>Structuring content with <strong>HTML tags</strong>.</li>
                    <li>Managing space and size with the <strong>CSS Box Model</strong>.</li>
                    <li>Creating layouts with <strong>CSS Flexbox</strong>.</li>
                </ul>
                <h4 class="text-3xl font-bold text-gray-800 mb-3 text-center">Today's Goal</h4>
                <p class="text-xl text-gray-700 mb-4 text-center max-w-3xl mx-auto">
                    We will combine these skills to build professional UI components (Buttons, Cards, Alerts). More
                    importantly, we'll learn how to make them <strong>interactive</strong> and <strong>feel
                        alive</strong> using new CSS concepts.
                </p>
                <img src="https://placehold.co/700x250/C4B5FD/4C1D95?text=HTML+%2B+Box+Model+%2B+Flexbox+%2B+Effects+%3D+Awesome+UI"
                    alt="[Diagram of skills leading to UI]" class="mx-auto rounded-md shadow-md mt-6">
            </div>
        </div>

        <div id="slide-3" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-violet-600 mb-6">2. Interaction with `:hover`</h3>
                <p class="text-lg text-gray-700 mb-4">The <code>:hover</code> pseudo-class in CSS is used to apply
                    styles to an element when the user's mouse pointer is over it.</p>
                <p class="text-lg text-gray-700 mb-6">It's one of the simplest ways to create interactivity.</p>

                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="hoverExampleCode"><code>&lt;style&gt;
  .hover-link {
    color: #8b5cf6; /* Initial color */
    font-size: 1.5rem;
    font-weight: bold;
    text-decoration: none;
  }
  
  /* This style applies ONLY when the mouse is over the element */
  .hover-link:hover {
    color: #6d28d9; /* Color changes on hover */
    text-decoration: underline;
  }
&lt;/style&gt;
&lt;a href="#" class="hover-link"&gt;Hover over me!&lt;/a&gt;
</code></pre>
                </div>

                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Live Example:</h4>
                <div class="html-output" id="hoverExampleOutput"></div>
            </div>
        </div>

        <div id="slide-4" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-violet-600 mb-6">3. Smooth Effects with `transition`</h3>
                <p class="text-lg text-gray-700 mb-4">The change with <code>:hover</code> is instant and jarring. The
                    <code>transition</code> property allows you to control the speed of property changes, creating
                    smooth animations.
                </p>

                <p class="text-lg text-gray-700 mb-6"><strong>Key to remember:</strong> Apply the `transition` property
                    to the base selector (e.g., `.my-button`), not the `:hover` selector.</p>

                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="transitionExampleCode"><code>&lt;style&gt;
  .box {
    width: 100px;
    height: 100px;
    background-color: #a78bfa;
    /* Defines the transition:
      - all: apply to all properties that change
      - 0.3s: duration of 0.3 seconds
      - ease: timing function (starts slow, fast, ends slow)
    */
    transition: all 0.3s ease;
  }

  .box:hover {
    background-color: #6d28d9;
    border-radius: 50%; /* Will also be animated */
    transform: scale(1.1); /* Let's add a size change */
  }
&lt;/style&gt;
&lt;div class="box"&gt;&lt;/div&gt;
</code></pre>
                </div>

                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Live Example (Hover over the box):</h4>
                <div class="html-output flex justify-center items-center" id="transitionExampleOutput"></div>
            </div>
        </div>

        <div id="slide-5" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-violet-600 mb-6">4. Practice: Building an Interactive Button
                </h3>
                <p class="text-lg text-gray-700 mb-4">Let's build a common UI element: a button. We will apply base
                    styles, then add hover and transition effects.</p>
                <div class="grid lg:grid-cols-2 gap-6">
                    <div>
                        <div class="code-block-container">
                            <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i>
                                    Copy</button></div>
                            <pre class="code-block" data-code-id="buttonCode"><code>&lt;style&gt;
.my-button {
  /* Basic Styling */
  background-color: #8b5cf6;
  color: white;
  padding: 12px 24px;
  border: none;
  border-radius: 8px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  
  /* Add the transition for smooth effects */
  transition: background-color 0.3s ease, transform 0.2s ease;
}

.my-button:hover {
  /* Styles for when the mouse is over the button */
  background-color: #7c3aed;
  transform: translateY(-3px); /* Moves the button up slightly */
  box-shadow: 0 4px 10px rgba(0,0,0,0.15);
}
&lt;/style&gt;

&lt;button class="my-button"&gt;Click Me!&lt;/button&gt;
</code></pre>
                        </div>
                    </div>
                    <div>
                        <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Result (Hover to see the effect):</h4>
                        <div class="html-output flex justify-center items-center" id="buttonOutput"></div>
                        <h4 class="text-xl font-medium text-gray-700 mb-2 mt-8">Key Steps:</h4>
                        <ol class="list-decimal list-inside pl-4 text-gray-700 space-y-2">
                            <li>Define the base look (padding, color, border-radius).</li>
                            <li>Add `transition` to the base class.</li>
                            <li>Define the `:hover` state (change background, add transform).</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>

        <div id="slide-6" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-violet-600 mb-6">5. Practice: Building an Interactive Card</h3>
                <p class="text-lg text-gray-700 mb-4">Cards are used everywhere to display content like products, blog
                    posts, or profiles. Let's make one that "lifts up" on hover.</p>
                <div class="grid lg:grid-cols-2 gap-6">
                    <div>
                        <div class="code-block-container">
                            <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i>
                                    Copy</button></div>
                            <pre class="code-block" data-code-id="cardCode"><code>&lt;style&gt;
.product-card {
  width: 280px;
  background-color: white;
  border-radius: 12px;
  box-shadow: 0 4px 15px rgba(0,0,0,0.08);
  overflow: hidden; /* Ensures image corners are rounded */
  font-family: 'Inter', sans-serif;
  
  /* Transition for shadow and transform */
  transition: box-shadow 0.3s ease, transform 0.3s ease;
}

.product-card:hover {
  transform: translateY(-8px);
  box-shadow: 0 12px 25px rgba(0,0,0,0.12);
}

.card-image {
  width: 100%;
  height: 180px;
  object-fit: cover;
}

.card-content {
  padding: 1.25rem;
}

.card-title {
  font-size: 1.25rem;
  font-weight: 600;
  color: #1f2937;
  margin-bottom: 0.5rem;
}

.card-text {
  color: #4b5563;
  margin-bottom: 1rem;
}

.card-button {
  display: block;
  width: 100%;
  background-color: #8b5cf6;
  color: white;
  text-align: center;
  padding: 10px 0;
  border-radius: 8px;
  text-decoration: none;
  font-weight: 500;
  transition: background-color 0.2s ease;
}

.card-button:hover {
  background-color: #7c3aed;
}
&lt;/style&gt;

&lt;div class="product-card"&gt;
  &lt;img src="https://placehold.co/280x180/C4B5FD/4C1D95?text=Product" alt="Product Image" class="card-image"&gt;
  &lt;div class="card-content"&gt;
    &lt;h4 class="card-title"&gt;Awesome Gadget&lt;/h4&gt;
    &lt;p class="card-text"&gt;The perfect tool for your everyday needs. High quality and durable.&lt;/p&gt;
    &lt;a href="#" class="card-button"&gt;View Details&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
</code></pre>
                        </div>
                    </div>
                    <div>
                        <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Result (Hover to see the effect):</h4>
                        <div class="html-output flex justify-center items-center py-8" id="cardOutput"></div>
                    </div>
                </div>
            </div>
        </div>

        <div id="slide-7" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-violet-600 mb-6">6. Practice: Building an Alert Component</h3>
                <p class="text-lg text-gray-700 mb-4">Alerts provide contextual feedback messages. Let's create a
                    "success" alert using Flexbox and add a subtle hover effect.</p>
                <div class="grid lg:grid-cols-2 gap-6">
                    <div>
                        <div class="code-block-container">
                            <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i>
                                    Copy</button></div>
                            <pre class="code-block" data-code-id="alertCode"><code>&lt;style&gt;
.alert {
  display: flex; /* Use Flexbox to align icon and text */
  align-items: center;
  padding: 1rem;
  border-radius: 8px;
  border-width: 1px;
  border-style: solid;
  max-width: 500px;
  margin: 0 auto;

  /* Subtle transition */
  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

.alert:hover {
    transform: scale(1.02);
    box-shadow: 0 4px 10px rgba(0,0,0,0.07);
}

.alert-success {
  background-color: #dcfce7;
  border-color: #4ade80;
  color: #15803d;
}

.alert-icon {
  font-size: 1.5rem;
  margin-right: 0.75rem;
  flex-shrink: 0; /* Prevents icon from shrinking */
}

.alert-message {
  font-weight: 500;
}
&lt;/style&gt;

&lt;div class="alert alert-success"&gt;
  &lt;i class="fas fa-check-circle alert-icon"&gt;&lt;/i&gt;
  &lt;span class="alert-message"&gt;Your profile was updated successfully!&lt;/span&gt;
&lt;/div&gt;
</code></pre>
                        </div>
                    </div>
                    <div>
                        <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">Result (Hover to see the effect):</h4>
                        <div class="html-output flex justify-center items-center" id="alertOutput"></div>
                    </div>
                </div>
            </div>
        </div>

        <div id="slide-8" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-violet-700 mb-8">Session 5 Summary</h2>
                <div class="text-xl text-gray-700 space-y-5 max-w-4xl text-left bg-gray-50 p-8 rounded-lg shadow">
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>You can now create interactive effects
                        using the <strong><code>:hover</code></strong> pseudo-class.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>You know how to make these effects smooth
                        and beautiful using the <strong><code>transition</code></strong> property.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>You have combined previous knowledge
                        (Flexbox, Box Model) with new concepts to build real-world UI components like <strong>Buttons,
                            Cards, and Alerts</strong>.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>You understand how subtle animations with
                        <code>transform</code> can greatly improve the user experience.
                    </p>
                </div>
                <div
                    class="mt-12 bg-indigo-100 border-l-4 border-indigo-500 text-indigo-700 p-6 rounded-r-lg shadow-lg w-full max-w-4xl">
                    <h4 class="text-2xl font-bold mb-2">See you in Session 6!</h4>
                    <p class="text-lg">We will explore another powerful layout system: <strong>CSS Grid</strong>! It's
                        perfect for complex, two-dimensional page layouts.</p>
                </div>
            </div>
        </div>

    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const slides = Array.from(document.querySelectorAll('.slide'));
            const prevButton = document.getElementById('prevSlide');
            const nextButton = document.getElementById('nextSlide');
            const currentSlideNumDisplay = document.getElementById('currentSlideNum');
            const totalSlidesNumDisplay = document.getElementById('totalSlidesNum');

            let currentSlide = 0;
            if (totalSlidesNumDisplay) {
                totalSlidesNumDisplay.textContent = slides.length || '0';
            }

            function showSlide(index) {
                slides.forEach((slide, i) => {
                    slide.classList.remove('active');
                    if (i === index) {
                        slide.style.display = 'flex';
                        setTimeout(() => slide.classList.add('active'), 10);
                    } else {
                        setTimeout(() => {
                            if (!slide.classList.contains('active')) slide.style.display = 'none';
                        }, 400);
                    }
                });
                if (currentSlideNumDisplay) {
                    currentSlideNumDisplay.textContent = index + 1;
                }
                updateNavButtons();
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }

            function updateNavButtons() {
                if (!prevButton || !nextButton) return;
                prevButton.disabled = currentSlide === 0;
                nextButton.disabled = currentSlide === slides.length - 1;
            }

            function copyCode(buttonElement) {
                const codeBlock = buttonElement.closest('.code-block-container').querySelector('pre.code-block');
                if (!codeBlock) return;
                const codeToCopy = codeBlock.innerText;
                navigator.clipboard.writeText(codeToCopy).then(() => {
                    const originalIcon = buttonElement.innerHTML;
                    buttonElement.innerHTML = '<i class="fas fa-check"></i> Copied!';
                    setTimeout(() => {
                        buttonElement.innerHTML = originalIcon;
                    }, 1500);
                }).catch(err => {
                    console.error('Could not copy text: ', err);
                });
            }

            function renderHtml(codeString, outputEl) {
                if (!outputEl) return;
                let styleContent = '';
                const styleMatch = codeString.match(/<style>([\s\S]*?)<\/style>/i);
                if (styleMatch) styleContent = styleMatch[1];

                let bodyContent = codeString.replace(/<style>([\s\S]*?)<\/style>/i, '').trim();
                let fontAwesome = bodyContent.includes('fas fa-') ? `<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">` : '';

                outputEl.innerHTML = '';
                const shadow = outputEl.attachShadow({ mode: 'open' });
                shadow.innerHTML = `<style>${styleContent}</style>${fontAwesome}<div style="font-family: 'Inter', sans-serif;">${bodyContent}</div>`;
            }

            function renderExample(codeBlockId, outputId) {
                const codeBlockEl = document.querySelector(`[data-code-id="${codeBlockId}"]`);
                const outputEl = document.getElementById(outputId);
                if (!codeBlockEl || !outputEl) return;
                renderHtml(codeBlockEl.innerText, outputEl);
            }

            // --- RENDER EXAMPLES ---
            try {
                renderExample('hoverExampleCode', 'hoverExampleOutput');
                renderExample('transitionExampleCode', 'transitionExampleOutput');
                renderExample('buttonCode', 'buttonOutput');
                renderExample('cardCode', 'cardOutput');
                renderExample('alertCode', 'alertOutput');
            } catch (e) {
                console.error("Error rendering examples:", e);
            }
            // --- END RENDERING EXAMPLES ---

            if (prevButton && nextButton) {
                prevButton.addEventListener('click', () => {
                    if (currentSlide > 0) {
                        currentSlide--;
                        showSlide(currentSlide);
                    }
                });

                nextButton.addEventListener('click', () => {
                    if (currentSlide < slides.length - 1) {
                        currentSlide++;
                        showSlide(currentSlide);
                    }
                });
            }

            document.querySelectorAll('.copy-button').forEach(button => {
                button.addEventListener('click', () => copyCode(button));
            });

            if (slides.length > 0) {
                showSlide(currentSlide);
            }
        });
    </script>
</body>

</html>

/* ===== Web Basic English/lesson6_midterm.html ===== */
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mid Exam: Build a Profile Website</title>
    <!-- Using Tailwind for utility classes if needed, but primary styling is custom CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@400;500;600;700&family=Fira+Code&display=swap"
        rel="stylesheet">
    <!-- Font Awesome for Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <style>
        /* Modern, Minimalist CSS for the Tutorial Page */
        :root {
            --bg-color: #f8fafc;
            /* Lighter gray background */
            --card-bg: #ffffff;
            --text-primary: #1e293b;
            /* Slate 800 */
            --text-secondary: #64748b;
            /* Slate 500 */
            --accent-color: #4f46e5;
            /* Indigo 600 */
            --accent-dark: #4338ca;
            /* Indigo 700 */
            --accent-light: #eef2ff;
            /* Indigo 50 */
            --border-color: #e2e8f0;
            /* Slate 200 */
            --code-bg: #1e293b;
            /* Slate 800 for code */
            --code-text: #e2e8f0;
            /* Slate 200 for code text */
        }

        html {
            scroll-behavior: smooth;
        }

        body {
            font-family: 'Be Vietnam Pro', sans-serif;
            background-color: var(--bg-color);
            color: var(--text-primary);
        }

        .tutorial-container {
            max-width: 1200px;
            margin: auto;
            padding: 2.5rem 1.5rem;
        }

        /* Main Header */
        .main-header h1 {
            font-size: 2.5rem;
            font-weight: 700;
            color: var(--text-primary);
        }

        .main-header p {
            font-size: 1.125rem;
            color: var(--text-secondary);
            max-width: 600px;
            margin: 0.5rem auto 0 auto;
        }

        /* Step Card Styling */
        .step {
            background: var(--card-bg);
            border: 1px solid var(--border-color);
            border-radius: 12px;
            margin-bottom: 3rem;
            box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.05), 0 2px 4px -2px rgb(0 0 0 / 0.05);
            overflow: hidden;
            transition: box-shadow 0.3s ease;
        }

        .step:hover {
            box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.07), 0 4px 6px -4px rgb(0 0 0 / 0.07);
        }

        .step-header {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1.25rem 1.5rem;
            border-bottom: 1px solid var(--border-color);
        }

        .step-header .step-number {
            background-color: var(--accent-light);
            color: var(--accent-color);
            font-weight: 700;
            font-size: 1rem;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-shrink: 0;
        }

        .step-header h2 {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--text-primary);
            margin: 0;
        }

        .step-header h2 span {
            display: block;
            font-size: 0.9rem;
            font-weight: 400;
            color: var(--text-secondary);
            margin-top: 0.25rem;
        }

        .step-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            padding: 1.5rem;
        }

        @media (max-width: 1024px) {
            .step-content {
                grid-template-columns: 1fr;
            }
        }

        /* Explanation Column */
        .explanation h3 {
            font-size: 1.25rem;
            font-weight: 600;
            margin-top: 0;
            margin-bottom: 1rem;
            color: var(--text-primary);
        }

        .explanation p,
        .explanation li {
            line-height: 1.7;
            color: #374151;
        }

        .explanation ul {
            padding-left: 20px;
            margin-top: 1rem;
        }

        /* Code Block */
        .code-block-container {
            background-color: var(--code-bg);
            border-radius: 10px;
            margin-top: 1.5rem;
            position: relative;
            box-shadow: 0 5px 20px rgba(27, 39, 59, 0.15);
        }

        .code-block-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem 1rem;
            background-color: #374151;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
            border-bottom: 1px solid #4b5563;
        }

        .file-name {
            color: #d1d5db;
            font-size: 0.875rem;
            font-family: 'Fira Code', monospace;
        }

        .copy-button {
            background-color: #4b5563;
            color: #e5e7eb;
            border: none;
            padding: 0.35rem 0.75rem;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.8rem;
            font-family: 'Be Vietnam Pro', sans-serif;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.2s ease;
        }

        .copy-button:hover:not(:disabled) {
            background-color: #6b7280;
            color: white;
        }

        .copy-button:disabled {
            background-color: var(--accent-dark);
            color: white;
            cursor: default;
        }


        .code-block {
            color: var(--code-text);
            padding: 1.25rem;
            font-family: 'Fira Code', monospace;
            font-size: 0.875rem;
            line-height: 1.6;
            white-space: pre-wrap;
            word-wrap: break-word;
            max-height: 400px;
            overflow-y: auto;
        }

        /* Custom scrollbar for code block */
        .code-block::-webkit-scrollbar {
            width: 8px;
        }

        .code-block::-webkit-scrollbar-track {
            background: transparent;
        }

        .code-block::-webkit-scrollbar-thumb {
            background-color: #4b5563;
            border-radius: 20px;
            border: 2px solid var(--code-bg);
        }


        /* Preview Column */
        .preview-area h4 {
            color: var(--text-primary);
            font-weight: 600;
            margin-bottom: 0.75rem;
        }

        .preview-box {
            border: 1px solid var(--border-color);
            border-radius: 8px;
            background-color: #f1f5f9;
            /* Slate 100 */
            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);
            height: 100%;
            min-height: 650px;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }

        .preview-box iframe {
            width: 100%;
            height: 100%;
            border: none;
            border-radius: 6px;
            background-color: white;
            transform: scale(1);
            transition: transform 0.3s ease;
        }

        /* Special styling for intro and Mid challenge */
        #intro-card,
        #Mid-challenge-card {
            grid-template-columns: 1fr;
        }

        #Mid-challenge-card .explanation ul {
            background: var(--accent-light);
            border-left: 4px solid var(--accent-color);
            padding: 1rem 1rem 1rem 2rem;
            list-style-type: 'üèÜ';
            border-radius: 6px;
            margin-left: 0;
            padding-left: 2rem;
        }

        #Mid-challenge-card .explanation li {
            padding-left: 0.75rem;
            margin-bottom: 0.5rem;
            color: var(--accent-dark);
            font-weight: 500;
        }
    </style>
</head>

<body>

    <div class="tutorial-container">
        <!-- Main Page Header -->
        <div class="text-center mb-16 main-header">
            <h1 class="text-4xl font-bold">Mid Exam: Build a Profile Website</h1>
            <p class="mt-2">A detailed guide to creating a personal profile page from A-Z with HTML & CSS.</p>
        </div>

        <!-- Step 0: Introduction -->
        <div class="step">
            <div class="step-header">
                <div class="step-number">0</div>
                <h2>Introduction & Grading Criteria</h2>
            </div>
            <div class="step-content" id="intro-card">
                <div class="explanation" id="Mid-challenge-card">
                    <h3>Goal of the Exam</h3>
                    <p>In this exam, we will apply all the knowledge we've learned to build a real product: a personal
                        profile website (Portfolio). This is your "business card" in the digital world, so let's make it
                        great!</p>

                    <h3>Grading Criteria</h3>
                    <ul>
                        <li><b>Completing Basic Requirements (7 points):</b> Build the website following the tutorial
                            steps, ensuring all basic components and functionalities are included.</li>
                        <li><b>Creativity (3+ points):</b> This is your chance to show your personality. Bonus points
                            will be awarded for changing the layout, colors, fonts, adding effects, including new
                            components, or designing a completely new layout.</li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Step 1: HTML Structure -->
        <div class="step" id="step1">
            <div class="step-header">
                <div class="step-number">1</div>
                <h2>Building the "Skeleton"<span>HTML Structure</span></h2>
            </div>
            <div class="step-content">
                <div>
                    <div class="explanation">
                        <h3>Initialize the Project</h3>
                        <p>First, create a folder for the project. Inside, create two files: <code>index.html</code> and
                            <code>style.css</code>.
                        </p>
                        <h3>Write the HTML Structure</h3>
                        <p>Open the <code>index.html</code> file and copy the code below. This is the basic structure
                            for our profile page, using semantic HTML tags.
                        </p>
                        <p>Don't forget to replace the sample information with your own personal details!</p>
                    </div>
                    <div class="code-block-container">
                        <div class="code-block-header">
                            <span class="file-name">index.html</span>
                            <button class="copy-button" data-target="code-step1">
                                <span>Copy</span> <i class="fa-regular fa-copy"></i>
                            </button>
                        </div>
                        <pre class="code-block"><code id="code-step1">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;title&gt;[Your Name]'s Profile Page&lt;/title&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class="profile-card"&gt;
        &lt;div class="info-section"&gt;
            &lt;img class="profile-pic" src="https://placehold.co/150x150/4f46e5/FFFFFF?text=Avatar" alt="Avatar"&gt;
            &lt;h1 class="name"&gt;John Doe&lt;/h1&gt;
            &lt;p class="title"&gt;Web Developer&lt;/p&gt;
            &lt;p class="bio"&gt;I am passionate about technology and programming, always eager to learn new things.&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class="social-links"&gt;
            &lt;a href="#"&gt;&lt;i class="fab fa-facebook"&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a href="#"&gt;&lt;i class="fab fa-github"&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a href="#"&gt;&lt;i class="fab fa-linkedin"&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
                    </div>
                </div>
                <div class="preview-area">
                    <h4>Result Preview:</h4>
                    <div class="preview-box">
                        <iframe id="preview-step1" title="Preview for Step 1"></iframe>
                    </div>
                </div>
            </div>
        </div>

        <!-- Step 2: CSS Box Model -->
        <div class="step" id="step2">
            <div class="step-header">
                <div class="step-number">2</div>
                <h2>"Styling" the Card<span>Box Model & Layout</span></h2>
            </div>
            <div class="step-content">
                <div>
                    <div class="explanation">
                        <h3>Style the Page</h3>
                        <p>Open the <code>style.css</code> file. We'll start by styling the <code>&lt;body&gt;</code> to
                            have a nice background and center the content using Flexbox.</p>
                        <h3>Shape the Profile Card</h3>
                        <p>Next, we'll style the <code>.profile-card</code> class. This is where we apply our knowledge
                            of the <b>Box Model</b> (<code>padding</code>, <code>border</code>, <code>box-shadow</code>)
                            to create the main block for the card.</p>
                    </div>
                    <div class="code-block-container">
                        <div class="code-block-header">
                            <span class="file-name">style.css</span>
                            <button class="copy-button" data-target="code-step2">
                                <span>Copy</span> <i class="fa-regular fa-copy"></i>
                            </button>
                        </div>
                        <pre class="code-block"><code id="code-step2">/* Basic reset and font */
body {
    font-family: 'Be Vietnam Pro', sans-serif;
    background-color: #f3f4f6;
    color: #333;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    margin: 0;
    padding: 20px;
}

/* Style for the main card */
.profile-card {
    background-color: white;
    max-width: 450px;
    width: 100%;
    padding: 40px;
    border-radius: 15px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    text-align: center;
    box-sizing: border-box;
}</code></pre>
                    </div>
                </div>
                <div class="preview-area">
                    <h4>Result Preview:</h4>
                    <div class="preview-box">
                        <iframe id="preview-step2" title="Preview for Step 2"></iframe>
                    </div>
                </div>
            </div>
        </div>

        <!-- Step 3: Styling Content -->
        <div class="step" id="step3">
            <div class="step-header">
                <div class="step-number">3</div>
                <h2>Midizing the Interface<span>Styling Content</span></h2>
            </div>
            <div class="step-content">
                <div>
                    <div class="explanation">
                        <h3>Style the Image and Text</h3>
                        <p>Now we will dive into the details inside the card, styling the avatar, name, title, and bio.
                        </p>
                        <h3>Style the Social Media Icons</h3>
                        <p>Midly, we will style the social media icons, making them larger, changing their color, and
                            removing the default underline from the <code>&lt;a&gt;</code> tag.</p>
                    </div>
                    <div class="code-block-container">
                        <div class="code-block-header">
                            <span class="file-name">style.css (continued)</span>
                            <button class="copy-button" data-target="code-step3">
                                <span>Copy</span> <i class="fa-regular fa-copy"></i>
                            </button>
                        </div>
                        <pre class="code-block"><code id="code-step3">/* Avatar style */
.profile-pic {
    width: 150px;
    height: 150px;
    border-radius: 50%;
    border: 5px solid #4f46e5;
    object-fit: cover;
    margin-bottom: 20px;
}
/* Text styles */
.name {
    margin: 0;
    font-size: 2.25rem;
    font-weight: 700;
}
.title {
    margin: 5px 0 15px 0;
    font-size: 1.1rem;
    color: #6b7280;
    font-weight: 500;
}
.bio {
    font-size: 1rem;
    line-height: 1.6;
    color: #4b5563;
    margin-bottom: 30px;
}
/* Social media link styles */
.social-links a {
    color: #4f46e5;
    font-size: 1.75rem;
    margin: 0 15px;
    text-decoration: none;
}</code></pre>
                    </div>
                </div>
                <div class="preview-area">
                    <h4>Result Preview:</h4>
                    <div class="preview-box">
                        <iframe id="preview-step3" title="Preview for Step 3"></iframe>
                    </div>
                </div>
            </div>
        </div>

        <!-- Step 4: Interactivity -->
        <div class="step" id="step4">
            <div class="step-header">
                <div class="step-number">4</div>
                <h2>Adding "Life"<span>Hover & Transition Effects</span></h2>
            </div>
            <div class="step-content">
                <div>
                    <div class="explanation">
                        <h3>Create Smooth Effects</h3>
                        <p>A static website is quite boring. We will add "life" by using <code>transition</code> to
                            create smooth animation effects when the user interacts (<code>:hover</code>) with elements.
                        </p>
                    </div>
                    <div class="code-block-container">
                        <div class="code-block-header">
                            <span class="file-name">style.css (continued)</span>
                            <button class="copy-button" data-target="code-step4">
                                <span>Copy</span> <i class="fa-regular fa-copy"></i>
                            </button>
                        </div>
                        <pre class="code-block"><code id="code-step4">/* Apply transition to the card in its original state */
.profile-card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}
/* Style WHEN hovering over the card */
.profile-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
}
/* Apply transition to the icons */
.social-links a {
    transition: transform 0.2s ease, color 0.2s ease;
}
/* Style WHEN hovering over the icons */
.social-links a:hover {
    transform: scale(1.2);
    color: #3730a3;
}</code></pre>
                    </div>
                </div>
                <div class="preview-area">
                    <h4>Result Preview (Hover over the card and icons):</h4>
                    <div class="preview-box">
                        <iframe id="preview-step4" title="Preview for Step 4"></iframe>
                    </div>
                </div>
            </div>
        </div>

        <!-- Step 5: Creative Challenge -->
        <div class="step" id="step5">
            <div class="step-header">
                <div class="step-number">5</div>
                <h2>Creative Challenge<span>Show Your Personality</span></h2>
            </div>
            <div class="step-content">
                <div>
                    <div class="explanation">
                        <h3>Add a "Skills" Section</h3>
                        <p>This is the most important part to earn bonus points! Try adding a section to display your
                            skills (e.g., HTML, CSS, JavaScript) using Flexbox to arrange them.</p>
                    </div>
                    <div class="code-block-container">
                        <div class="code-block-header">
                            <span class="file-name">index.html (add to)</span>
                            <button class="copy-button" data-target="code-step5-html">
                                <span>Copy</span> <i class="fa-regular fa-copy"></i>
                            </button>
                        </div>
                        <pre class="code-block"><code id="code-step5-html">&lt;!-- Place this code below the div.social-links --&gt;
&lt;div class="skills-section"&gt;
    &lt;h3 class="skills-title"&gt;My Skills&lt;/h3&gt;
    &lt;div class="skills-list"&gt;
        &lt;div class="skill-item"&gt;HTML5&lt;/div&gt;
        &lt;div class="skill-item"&gt;CSS3&lt;/div&gt;
        &lt;div class="skill-item"&gt;Flexbox&lt;/div&gt;
        &lt;div class="skill-item"&gt;JavaScript&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;</code></pre>
                    </div>
                    <div class="code-block-container">
                        <div class="code-block-header">
                            <span class="file-name">style.css (continued)</span>
                            <button class="copy-button" data-target="code-step5-css">
                                <span>Copy</span> <i class="fa-regular fa-copy"></i>
                            </button>
                        </div>
                        <pre class="code-block"><code id="code-step5-css">.skills-section {
    margin-top: 30px;
    padding-top: 30px;
    border-top: 1px solid #e5e7eb;
}
.skills-title {
    margin-top: 0;
    margin-bottom: 20px;
    font-size: 1.5rem;
    color: #374151;
}
.skills-list {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 10px;
}
.skill-item {
    background-color: #eef2ff;
    color: #4338ca;
    padding: 8px 15px;
    border-radius: 20px;
    font-weight: 600;
    font-size: 0.9rem;
    transition: transform 0.2s ease, background-color 0.2s ease;
}
.skill-item:hover {
    background-color: #c7d2fe;
    transform: scale(1.05);
}</code></pre>
                    </div>
                </div>
                <div class="preview-area">
                    <h4>Mid Result Preview:</h4>
                    <div class="preview-box">
                        <iframe id="preview-step5" title="Preview for Step 5"></iframe>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // --- DATA STORE ---
            // Isolate all code snippets here to prevent DOM-related bugs.
            // This is the single source of truth for the preview iframes.
            const allCodeSnippets = {
                html: {
                    step1: document.getElementById('code-step1').innerHTML,
                    step5: document.getElementById('code-step5-html').innerHTML,
                },
                css: {
                    step2: document.getElementById('code-step2').textContent,
                    step3: document.getElementById('code-step3').textContent,
                    step4: document.getElementById('code-step4').textContent,
                    step5: document.getElementById('code-step5-css').textContent,
                }
            };

            // --- RENDER LOGIC ---
            function renderPreview(frameId, htmlContent, cssContent) {
                const previewFrame = document.getElementById(frameId);
                if (!previewFrame) {
                    console.error(`Preview frame with id ${frameId} not found.`);
                    return;
                }

                // Decode HTML entities for iframe
                const tempDiv = document.createElement('div');
                tempDiv.innerHTML = htmlContent;
                const decodedHtml = tempDiv.textContent || tempDiv.innerText || "";


                const fullHtml = `
                    <!DOCTYPE html>
                    <html lang="en">
                    <head>
                        <meta charset="UTF-8">
                        <meta name="viewport" content="width=device-width, initial-scale=1.0">
                        <link rel="preconnect" href="https://fonts.googleapis.com">
                        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
                        <link href="https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@400;500;600;700&display=swap" rel="stylesheet">
                        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
                        <style>
                            ${cssContent}
                        </style>
                    </head>
                    ${decodedHtml.substring(decodedHtml.indexOf('<body>'))}
                    </html>
                `;
                previewFrame.srcdoc = fullHtml;
            }

            // --- INITIALIZATION ---
            function initializePreviews() {
                const baseHtml = allCodeSnippets.html.step1;
                const cssStep2 = allCodeSnippets.css.step2;
                const cssStep3 = cssStep2 + allCodeSnippets.css.step3;
                const cssStep4 = cssStep3 + allCodeSnippets.css.step4;

                const htmlStep5 = baseHtml.replace(
                    '&lt;/div&gt;\n&lt;/body&gt;',
                    allCodeSnippets.html.step5 + '\n        &lt;/div&gt;\n&lt;/body&gt;'
                );
                const cssStep5 = cssStep4 + allCodeSnippets.css.step5;

                renderPreview('preview-step1', baseHtml, '');
                renderPreview('preview-step2', baseHtml, cssStep2);
                renderPreview('preview-step3', baseHtml, cssStep3);
                renderPreview('preview-step4', baseHtml, cssStep4);
                renderPreview('preview-step5', htmlStep5, cssStep5);
            }

            function initializeCopyButtons() {
                document.querySelectorAll('.copy-button').forEach(button => {
                    button.addEventListener('click', (e) => {
                        const buttonEl = e.currentTarget;
                        const targetId = buttonEl.dataset.target;
                        const codeElement = document.getElementById(targetId);

                        if (codeElement) {
                            // Use a temporary textarea to preserve formatting and decode entities
                            const textArea = document.createElement('textarea');
                            textArea.innerHTML = codeElement.innerHTML;
                            const codeText = textArea.value;

                            navigator.clipboard.writeText(codeText).then(() => {
                                const originalContent = buttonEl.innerHTML;
                                buttonEl.innerHTML = `Copied! <i class="fa-solid fa-check"></i>`;
                                buttonEl.disabled = true;

                                setTimeout(() => {
                                    buttonEl.innerHTML = originalContent;
                                    buttonEl.disabled = false;
                                }, 2000);

                            }).catch(err => {
                                console.error('Copy error: ', err);
                                // Fallback for older browsers
                                textArea.style.position = 'fixed';
                                textArea.style.top = '-9999px';
                                document.body.appendChild(textArea);
                                textArea.select();
                                document.execCommand('copy');
                                document.body.removeChild(textArea);
                            });
                        }
                    });
                });
            }

            initializePreviews();
            initializeCopyButtons();
        });
    </script>
</body>

</html>

/* ===== Web Basic/lesson1.html ===== */
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Session 1: L·∫≠p tr√¨nh Web c∆° b·∫£n - HTML & CSS</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            scroll-behavior: smooth;
            background-color: #f3f4f6;
        }

        #navbar {
            position: sticky;
            top: 0;
            z-index: 50;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .slide-container {
            padding-top: 1rem;
        }

        .slide {
            background-color: white;
            padding: 2.5rem;
            border-radius: 0.75rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            margin-bottom: 2rem;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
            min-height: calc(100vh - 120px);
            display: none;
            flex-direction: column;
            justify-content: center;
        }

        .slide.active {
            display: flex;
            opacity: 1;
            transform: translateY(0);
        }

        .slide-content-wrapper {
            flex-grow: 1;
            width: 100%;
            max-width: 1024px;
            margin: 0 auto;
        }

        .code-block-container {
            position: relative;
            background-color: #1e293b;
            border-radius: 0.5rem;
            margin-top: 1rem;
            margin-bottom: 1rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .code-block-header {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            padding: 0.5rem 0.75rem;
            background-color: #334155;
            border-top-left-radius: 0.5rem;
            border-top-right-radius: 0.5rem;
        }

        .copy-button {
            background-color: #4a5568;
            color: #e2e8f0;
            border: none;
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            cursor: pointer;
            font-size: 0.875rem;
            transition: background-color 0.2s;
        }

        .copy-button:hover {
            background-color: #718096;
        }

        .copy-button .fa-copy {
            margin-right: 0.375rem;
        }

        .copy-button .fa-check {
            margin-right: 0.375rem;
            color: #48bb78;
        }

        .copy-button:focus {
            outline: none;
            box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.5);
        }

        .code-block {
            background-color: #1e293b;
            color: #e2e8f0;
            padding: 1.5rem;
            border-bottom-left-radius: 0.5rem;
            border-bottom-right-radius: 0.5rem;
            font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
            white-space: pre-wrap;
            word-wrap: break-word;
            font-size: 0.875em;
            line-height: 1.6;
            overflow-x: auto;
        }

        .code-block .comment {
            color: #6a9955;
        }

        .code-block .keyword {
            color: #569cd6;
        }

        .code-block .tag {
            color: #569cd6;
        }

        .code-block .attr-name {
            color: #9cdcfe;
        }

        .code-block .attr-value {
            color: #ce9178;
        }

        .html-output {
            border: 1px solid #e2e8f0;
            padding: 1.5rem;
            margin-top: 1rem;
            border-radius: 0.5rem;
            background-color: #f7fafc;
            min-height: 100px;
            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);
        }

        img {
            max-width: 100%;
            height: auto;
            border-radius: 0.375rem;
        }
    </style>
</head>

<body class="text-gray-800">

    <nav id="navbar" class="p-4">
        <div class="container mx-auto flex flex-wrap justify-between items-center">
            <h1 class="text-xl font-bold text-blue-600">Web c∆° b·∫£n - Bu·ªïi 1</h1>
            <div class="flex items-center mt-2 sm:mt-0">
                <button id="prevSlide"
                    class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg shadow mr-2 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    <i class="fas fa-arrow-left mr-1"></i> Tr∆∞·ªõc
                </button>
                <button id="nextSlide"
                    class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    Sau <i class="fas fa-arrow-right ml-1"></i>
                </button>
            </div>
            <div class="text-sm text-gray-600 mt-2 sm:mt-0 ml-0 sm:ml-4">
                Slide <span id="currentSlideNum">1</span> / <span id="totalSlidesNum"></span>
            </div>
        </div>
    </nav>

    <div class="container mx-auto p-4 slide-container">
        <!-- Slide 1: Welcome -->
        <div id="slide-1" class="slide">
            <div class="slide-content-wrapper text-center">
                <h2 class="text-5xl font-bold text-blue-700 mb-6">Bu·ªïi 1: Gi·ªõi thi·ªáu v·ªÅ L·∫≠p tr√¨nh Web</h2>
                <p class="text-3xl text-gray-600 mb-12">HTML & CSS c∆° b·∫£n - N·ªÅn t·∫£ng c·ªßa m·ªçi trang Web!</p>
                <img src="https://placehold.co/500x300/007BFF/FFFFFF?text=HTML+%26+CSS+Foundation"
                    alt="[H√¨nh ·∫£nh c·ªßa Web Programming HTML CSS]" class="rounded-lg shadow-xl mx-auto">
                <p class="mt-10 text-xl text-gray-700">Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi bu·ªïi h·ªçc ƒë·∫ßu ti√™n v·ªÅ L·∫≠p tr√¨nh Web!</p>
            </div>
        </div>

        <!-- Slide 2: Intro HTML/CSS -->
        <div id="slide-2" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6 text-center">1. Gi·ªõi thi·ªáu v·ªÅ HTML v√† CSS</h3>
                <div class="grid md:grid-cols-2 gap-8">
                    <div class="bg-blue-50 p-6 rounded-lg shadow-md">
                        <h4 class="text-2xl font-bold text-blue-700 mb-3">HTML l√† g√¨?</h4>
                        <p class="mb-3 text-lg text-gray-700"><strong>HTML</strong> (HyperText Markup Language) l√† ng√¥n
                            ng·ªØ ti√™u chu·∫©n ƒë·ªÉ t·∫°o ra c√°c trang web.</p>
                        <ul class="list-disc list-inside pl-4 text-gray-700 space-y-1">
                            <li><strong>Vai tr√≤:</strong> X√¢y d·ª±ng c·∫•u tr√∫c cho n·ªôi dung trang web.</li>
                            <li><strong>V√≠ d·ª•:</strong> Gi·ªëng nh∆∞ b·ªô x∆∞∆°ng c·ªßa c∆° th·ªÉ ng∆∞·ªùi.</li>
                        </ul>
                    </div>
                    <div class="bg-green-50 p-6 rounded-lg shadow-md">
                        <h4 class="text-2xl font-bold text-green-700 mb-3">CSS l√† g√¨?</h4>
                        <p class="mb-3 text-lg text-gray-700"><strong>CSS</strong> (Cascading Style Sheets) l√† ng√¥n ng·ªØ
                            d√πng ƒë·ªÉ t·∫°o ki·ªÉu d√°ng cho trang web.</p>
                        <ul class="list-disc list-inside pl-4 text-gray-700 space-y-1">
                            <li><strong>Vai tr√≤:</strong> Th√™m m√†u s·∫Øc, b·ªë c·ª•c, font ch·ªØ...</li>
                            <li><strong>V√≠ d·ª•:</strong> Gi·ªëng nh∆∞ qu·∫ßn √°o, m√†u da, l√†m cho trang web ƒë·∫πp h∆°n.</li>
                        </ul>
                    </div>
                </div>
                <div class="mt-8 text-center">
                    <img src="https://placehold.co/450x200/7E3AF2/FFFFFF?text=HTML+(C·∫•u+tr√∫c)+%2B+CSS+(Tr√¨nh+b√†y)+%3D+Trang+Web"
                        alt="[S∆° ƒë·ªì c·ªßa HTML + CSS = Web Page]" class="rounded-lg shadow-lg mx-auto">
                </div>
            </div>
        </div>

        <!-- Slide 3: HTML Syntax -->
        <div id="slide-3" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">2. C·∫•u tr√∫c file HTML c∆° b·∫£n</h3>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Sao
                            ch√©p</button></div>
                    <pre class="code-block" data-code-id="htmlStructure"><code><span class="keyword">&lt;!DOCTYPE html&gt;</span>
&lt;<span class="tag">html</span> <span class="attr-name">lang</span>=<span class="attr-value">"vi"</span>&gt;
&lt;<span class="tag">head</span>&gt;
    &lt;<span class="tag">meta</span> <span class="attr-name">charset</span>=<span class="attr-value">"UTF-8"</span>&gt;
    &lt;<span class="tag">title</span>&gt;Ti√™u ƒë·ªÅ trang&lt;/<span class="tag">title</span>&gt;
&lt;/<span class="tag">head</span>&gt;
&lt;<span class="tag">body</span>&gt;
    N·ªôi dung ch√≠nh c·ªßa trang web n·∫±m ·ªü ƒë√¢y
&lt;/<span class="tag">body</span>&gt;
&lt;/<span class="tag">html</span>&gt;</code></pre>
                </div>
                <ul class="list-disc list-inside mt-6 pl-4 text-gray-700 space-y-2 text-lg">
                    <li><code>&lt;!DOCTYPE html&gt;</code>: Khai b√°o ƒë√¢y l√† t√†i li·ªáu HTML5.</li>
                    <li><code>&lt;html&gt;</code>: Th·∫ª g·ªëc c·ªßa m·ªôt trang HTML.</li>
                    <li><code>&lt;head&gt;</code>: Ch·ª©a th√¥ng tin meta v·ªÅ trang (ti√™u ƒë·ªÅ, styles, scripts...).</li>
                    <li><code>&lt;body&gt;</code>: Ch·ª©a n·ªôi dung hi·ªÉn th·ªã c·ªßa trang web.</li>
                </ul>
            </div>
        </div>

        <!-- Slide 4: Heading Tags -->
        <div id="slide-4" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">3. Th·∫ª c∆° b·∫£n: Ti√™u ƒë·ªÅ <code>&lt;h1&gt;</code> -
                    <code>&lt;h6&gt;</code>
                </h3>
                <p class="mb-4 text-lg text-gray-700">D√πng ƒë·ªÉ ƒë·ªãnh nghƒ©a c√°c c·∫•p b·∫≠c ti√™u ƒë·ªÅ. <code>&lt;h1&gt;</code> l√†
                    quan tr·ªçng nh·∫•t.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Sao
                            ch√©p</button></div>
                    <pre class="code-block" data-code-id="headingsExample"><code>&lt;<span class="tag">h1</span>&gt;ƒê√¢y l√† ti√™u ƒë·ªÅ H1&lt;/<span class="tag">h1</span>&gt;
&lt;<span class="tag">h2</span>&gt;ƒê√¢y l√† ti√™u ƒë·ªÅ H2&lt;/<span class="tag">h2</span>&gt;
&lt;<span class="tag">h3</span>&gt;ƒê√¢y l√† ti√™u ƒë·ªÅ H3&lt;/<span class="tag">h3</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£ hi·ªÉn th·ªã:</h4>
                <div class="html-output" id="headingsOutput"></div>
            </div>
        </div>

        <!-- Slide 5: Paragraph Tag -->
        <div id="slide-5" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">3. Th·∫ª c∆° b·∫£n: ƒêo·∫°n vƒÉn <code>&lt;p&gt;</code>
                </h3>
                <p class="mb-4 text-lg text-gray-700">Th·∫ª <code>&lt;p&gt;</code> (paragraph) d√πng ƒë·ªÉ ƒë·ªãnh nghƒ©a m·ªôt ƒëo·∫°n
                    vƒÉn b·∫£n.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Sao
                            ch√©p</button></div>
                    <pre class="code-block" data-code-id="paragraphExample"><code>&lt;<span class="tag">p</span>&gt;ƒê√¢y l√† ƒëo·∫°n vƒÉn ƒë·∫ßu ti√™n. HTML r·∫•t th√∫ v·ªã.&lt;/<span class="tag">p</span>&gt;
&lt;<span class="tag">p</span>&gt;ƒê√¢y l√† ƒëo·∫°n vƒÉn th·ª© hai.&lt;/<span class="tag">p</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£ hi·ªÉn th·ªã:</h4>
                <div class="html-output" id="paragraphOutput"></div>
            </div>
        </div>

        <!-- Slide 6: Link Tag -->
        <div id="slide-6" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">3. Th·∫ª c∆° b·∫£n: Li√™n k·∫øt <code>&lt;a&gt;</code>
                </h3>
                <p class="mb-4 text-lg text-gray-700">Th·∫ª <code>&lt;a&gt;</code> (anchor) d√πng ƒë·ªÉ t·∫°o m·ªôt si√™u li√™n k·∫øt
                    ƒë·∫øn trang kh√°c ho·∫∑c m·ªôt v·ªã tr√≠ kh√°c tr√™n c√πng trang. Thu·ªôc t√≠nh quan tr·ªçng nh·∫•t l√† <code>href</code>
                    (hypertext reference), ch·ªâ ƒë·ªãnh URL c·ªßa ƒë√≠ch ƒë·∫øn.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Sao
                            ch√©p</button></div>
                    <pre class="code-block"
                        data-code-id="linkExample"><code>&lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"https://www.google.com"</span>&gt;ƒêi ƒë·∫øn Google&lt;/<span class="tag">a</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£ hi·ªÉn th·ªã:</h4>
                <div class="html-output" id="linkOutput"></div>
            </div>
        </div>

        <!-- Slide 7: Image Tag -->
        <div id="slide-7" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">3. Th·∫ª c∆° b·∫£n: H√¨nh ·∫£nh <code>&lt;img&gt;</code>
                </h3>
                <p class="mb-4 text-lg text-gray-700">Th·∫ª <code>&lt;img&gt;</code> d√πng ƒë·ªÉ nh√∫ng m·ªôt h√¨nh ·∫£nh v√†o trang.
                    ƒê√¢y l√† th·∫ª t·ª± ƒë√≥ng, kh√¥ng c√≥ th·∫ª <code>&lt;/img&gt;</code>. C√°c thu·ªôc t√≠nh quan tr·ªçng l√†
                    <code>src</code> (source) v√† <code>alt</code> (alternative text).
                </p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Sao
                            ch√©p</button></div>
                    <pre class="code-block"
                        data-code-id="imageExample"><code>&lt;<span class="tag">img</span> <span class="attr-name">src</span>=<span class="attr-value">"https://placehold.co/400x200/007BFF/FFFFFF?text=H√¨nh+·∫£nh+minh+h·ªça"</span> <span class="attr-name">alt</span>=<span class="attr-value">"M·ªôt h√¨nh ·∫£nh minh h·ªça ƒë·∫πp"</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£ hi·ªÉn th·ªã:</h4>
                <div class="html-output" id="imageOutput"></div>
            </div>
        </div>

        <!-- Slide 8: Button Tag -->
        <div id="slide-8" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">3. Th·∫ª c∆° b·∫£n: N√∫t b·∫•m <code>&lt;button&gt;</code>
                </h3>
                <p class="mb-4 text-lg text-gray-700">Th·∫ª <code>&lt;button&gt;</code> ƒë·ªãnh nghƒ©a m·ªôt n√∫t c√≥ th·ªÉ b·∫•m
                    ƒë∆∞·ª£c.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Sao
                            ch√©p</button></div>
                    <pre class="code-block"
                        data-code-id="buttonExample"><code>&lt;<span class="tag">button</span>&gt;B·∫•m v√†o t√¥i&lt;/<span class="tag">button</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£ hi·ªÉn th·ªã:</h4>
                <div class="html-output" id="buttonOutput"></div>
            </div>
        </div>

        <!-- Slide 9: HTML Example -->
        <div id="slide-9" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">4. V√≠ d·ª•: T·∫°o trang gi·ªõi thi·ªáu b·∫£n th√¢n (HTML)
                </h3>
                <p class="mb-4 text-lg text-gray-700">√Åp d·ª•ng c√°c th·∫ª ƒë√£ h·ªçc ƒë·ªÉ t·∫°o m·ªôt trang gi·ªõi thi·ªáu b·∫£n th√¢n ƒë∆°n
                    gi·∫£n.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Sao
                            ch√©p</button></div>
                    <pre class="code-block" data-code-id="personalPageHtmlCode"><code>&lt;<span class="tag">h1</span>&gt;Xin ch√†o, t√¥i l√† John Doe&lt;/<span class="tag">h1</span>&gt;
&lt;<span class="tag">img</span> <span class="attr-name">src</span>=<span class="attr-value">"https://placehold.co/150/007BFF/FFFFFF?text=Profile+Pic"</span> <span class="attr-name">alt</span>=<span class="attr-value">"·∫¢nh ƒë·∫°i di·ªán c·ªßa t√¥i"</span>&gt;
&lt;<span class="tag">p</span>&gt;T√¥i l√† m·ªôt sinh vi√™n ƒëam m√™ l·∫≠p tr√¨nh web. S·ªü th√≠ch c·ªßa t√¥i bao g·ªìm ƒë·ªçc s√°ch v√† ch∆°i game.&lt;/<span class="tag">p</span>&gt;
&lt;<span class="tag">h2</span>&gt;Li√™n h·ªá v·ªõi t√¥i:&lt;/<span class="tag">h2</span>&gt;
&lt;<span class="tag">p</span>&gt;
    B·∫°n c√≥ th·ªÉ k·∫øt n·ªëi v·ªõi t√¥i qua &lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span>&gt;Facebook&lt;/<span class="tag">a</span>&gt;.
&lt;/<span class="tag">p</span>&gt;
&lt;<span class="tag">button</span>&gt;Nh·∫•n ƒë·ªÉ nh·∫≠n l·ªùi ch√†o!&lt;/<span class="tag">button</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£ hi·ªÉn th·ªã:</h4>
                <div class="html-output" id="personalPageHtmlOutput"></div>
            </div>
        </div>

        <!-- Slide 10: CSS Example -->
        <div id="slide-10" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">5. V√≠ d·ª•: √Åp d·ª•ng CSS (Inline)</h3>
                <p class="mb-4 text-lg text-gray-700">Th√™m m·ªôt ch√∫t "inline CSS" v√†o trang gi·ªõi thi·ªáu c√° nh√¢n ƒë·ªÉ l√†m n√≥
                    h·∫•p d·∫´n h∆°n.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Sao
                            ch√©p</button></div>
                    <pre class="code-block" data-code-id="personalPageCssCode"><code>&lt;<span class="tag">body</span> <span class="attr-name">style</span>=<span class="attr-value">"font-family: sans-serif; background-color: #e9ecef; color: #343a40;"</span>&gt;
    &lt;<span class="tag">h1</span> <span class="attr-name">style</span>=<span class="attr-value">"color: #007bff; text-align: center;"</span>&gt;Xin ch√†o, t√¥i l√† John Doe&lt;/<span class="tag">h1</span>&gt;
    &lt;<span class="tag">div</span> <span class="attr-name">style</span>=<span class="attr-value">"text-align: center; margin-bottom: 20px;"</span>&gt;
        &lt;<span class="tag">img</span> <span class="attr-name">src</span>=<span class="attr-value">"https://placehold.co/150/007BFF/FFFFFF?text=Profile+Pic"</span> <span class="attr-name">alt</span>=<span class="attr-value">"·∫¢nh ƒë·∫°i di·ªán"</span> <span class="attr-name">style</span>=<span class="attr-value">"border-radius: 50%; border: 4px solid #007bff;"</span>&gt;
    &lt;/<span class="tag">div</span>&gt;
    &lt;<span class="tag">p</span> <span class="attr-name">style</span>=<span class="attr-value">"font-size: 1.1em; line-height: 1.7;"</span>&gt;T√¥i l√† m·ªôt sinh vi√™n ƒëam m√™ l·∫≠p tr√¨nh web. S·ªü th√≠ch c·ªßa t√¥i bao g·ªìm ƒë·ªçc s√°ch v√† ch∆°i game.&lt;/<span class="tag">p</span>&gt;
    &lt;<span class="tag">h2</span> <span class="attr-name">style</span>=<span class="attr-value">"color: #28a745;"</span>&gt;Li√™n h·ªá v·ªõi t√¥i:&lt;/<span class="tag">h2</span>&gt;
    &lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span> <span class="attr-name">style</span>=<span class="attr-value">"color: #007bff; text-decoration: none;"</span>&gt;Facebook&lt;/<span class="tag">a</span>&gt;
&lt;/<span class="tag">body</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£ hi·ªÉn th·ªã:</h4>
                <div class="html-output" id="personalPageCssOutput"></div>
            </div>
        </div>

        <!-- Slide 11: Summary -->
        <div id="slide-11" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-blue-700 mb-8">T·ªïng k·∫øt Bu·ªïi 1</h2>
                <div class="text-xl text-gray-700 space-y-5 max-w-3xl text-left bg-gray-50 p-8 rounded-lg shadow">
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>B·∫°n ƒë√£ h·ªçc v·ªÅ <strong>HTML</strong> (c·∫•u
                        tr√∫c) v√† <strong>CSS</strong> (phong c√°ch).</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>B·∫°n ƒë√£ bi·∫øt c√°c th·∫ª c∆° b·∫£n:
                        <code>&lt;h1&gt;</code>, <code>&lt;p&gt;</code>, <code>&lt;a&gt;</code>,
                        <code>&lt;img&gt;</code>, <code>&lt;button&gt;</code>.
                    </p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>B·∫°n ƒë√£ th·ª≠ √°p d·ª•ng <strong>inline
                            CSS</strong> ƒë·ªÉ thay ƒë·ªïi giao di·ªán c·ªßa trang web.</p>
                </div>
                <div
                    class="mt-12 bg-green-100 border-l-4 border-green-500 text-green-700 p-6 rounded-r-lg shadow-lg w-full max-w-3xl">
                    <h4 class="text-2xl font-bold mb-2">H·∫πn g·∫∑p l·∫°i ·ªü Bu·ªïi 2!</h4>
                    <p class="text-lg">Ch√∫ng ta s·∫Ω t√¨m hi·ªÉu v·ªÅ c√°c kh√°i ni·ªám quan tr·ªçng h∆°n trong CSS!</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const slides = Array.from(document.querySelectorAll('.slide'));
            const prevButton = document.getElementById('prevSlide');
            const nextButton = document.getElementById('nextSlide');
            const currentSlideNumDisplay = document.getElementById('currentSlideNum');
            const totalSlidesNumDisplay = document.getElementById('totalSlidesNum');

            let currentSlide = 0;

            if (slides.length > 0) {
                totalSlidesNumDisplay.textContent = slides.length;
            } else {
                if (currentSlideNumDisplay) currentSlideNumDisplay.textContent = '0';
                if (totalSlidesNumDisplay) totalSlidesNumDisplay.textContent = '0';
            }

            function showSlide(index) {
                slides.forEach((slide, i) => {
                    if (i === index) {
                        slide.style.display = 'flex';
                        setTimeout(() => slide.classList.add('active'), 10);
                    } else {
                        slide.classList.remove('active');
                        setTimeout(() => {
                            if (!slide.classList.contains('active')) {
                                slide.style.display = 'none';
                            }
                        }, 400); // Ph·∫£i kh·ªõp v·ªõi th·ªùi gian chuy·ªÉn ƒë·ªïi trong CSS
                    }
                });
                if (currentSlideNumDisplay) {
                    currentSlideNumDisplay.textContent = index + 1;
                }
                updateNavButtons();
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }

            function updateNavButtons() {
                if (!prevButton || !nextButton) return;
                prevButton.disabled = currentSlide === 0;
                nextButton.disabled = currentSlide === slides.length - 1;
            }

            function copyCode(buttonElement) {
                const codeBlockContainer = buttonElement.closest('.code-block-container');
                const codeElement = codeBlockContainer.querySelector('pre.code-block');
                if (!codeElement) return;

                const codeToCopy = codeElement.innerText;
                const textarea = document.createElement('textarea');
                textarea.value = codeToCopy;
                document.body.appendChild(textarea);
                textarea.select();
                try {
                    document.execCommand('copy');
                    const originalContent = buttonElement.innerHTML;
                    buttonElement.innerHTML = '<i class="fas fa-check"></i> ƒê√£ ch√©p!';
                    setTimeout(() => {
                        buttonElement.innerHTML = originalContent;
                    }, 1500);
                } catch (err) {
                    console.error('Kh√¥ng th·ªÉ sao ch√©p code:', err);
                }
                document.body.removeChild(textarea);
            }

            function renderExample(codeBlockId, outputId) {
                const codeBlockEl = document.querySelector(`[data-code-id="${codeBlockId}"]`);
                const outputEl = document.getElementById(outputId);
                if (!codeBlockEl || !outputEl) return;

                const codeString = codeBlockEl.innerText;

                // S·ª≠ d·ª•ng Shadow DOM ƒë·ªÉ hi·ªÉn th·ªã code, tr√°nh xung ƒë·ªôt style
                outputEl.innerHTML = ''; // X√≥a n·ªôi dung c≈©
                const shadow = outputEl.attachShadow({ mode: 'open' });
                shadow.innerHTML = codeString;
            }

            // Thi·∫øt l·∫≠p ƒëi·ªÅu h∆∞·ªõng
            if (prevButton && nextButton) {
                prevButton.addEventListener('click', () => {
                    if (currentSlide > 0) {
                        currentSlide--;
                        showSlide(currentSlide);
                    }
                });

                nextButton.addEventListener('click', () => {
                    if (currentSlide < slides.length - 1) {
                        currentSlide++;
                        showSlide(currentSlide);
                    }
                });
            }

            // Thi·∫øt l·∫≠p n√∫t sao ch√©p
            document.querySelectorAll('.copy-button').forEach(button => {
                button.addEventListener('click', () => copyCode(button));
            });

            // Hi·ªÉn th·ªã t·∫•t c·∫£ c√°c v√≠ d·ª•
            renderExample('headingsExample', 'headingsOutput');
            renderExample('paragraphExample', 'paragraphOutput');
            renderExample('linkExample', 'linkOutput');
            renderExample('imageExample', 'imageOutput');
            renderExample('buttonExample', 'buttonOutput');
            renderExample('personalPageHtmlCode', 'personalPageHtmlOutput');
            renderExample('personalPageCssCode', 'personalPageCssOutput');


            // Thi·∫øt l·∫≠p ban ƒë·∫ßu
            if (slides.length > 0) {
                showSlide(currentSlide);
            }
        });
    </script>
</body>

</html>

/* ===== Web Basic/lesson2.html ===== */
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bu·ªïi 2: C·∫•u tr√∫c HTML & C√°c b·ªô ch·ªçn CSS</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            scroll-behavior: smooth;
            background-color: #f3f4f6;
        }

        #navbar {
            position: sticky;
            top: 0;
            z-index: 50;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .slide-container {
            padding-top: 1rem;
        }

        .slide {
            background-color: white;
            padding: 2.5rem;
            border-radius: 0.75rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            margin-bottom: 2rem;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
            min-height: calc(100vh - 120px);
            display: none;
            flex-direction: column;
        }

        .slide.active {
            display: flex;
            opacity: 1;
            transform: translateY(0);
        }

        .slide-content-wrapper {
            flex-grow: 1;
        }

        .code-block-container {
            position: relative;
            background-color: #1e293b;
            border-radius: 0.5rem;
            margin-top: 1rem;
            margin-bottom: 1rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .code-block-header {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            padding: 0.5rem 0.75rem;
            background-color: #334155;
            border-top-left-radius: 0.5rem;
            border-top-right-radius: 0.5rem;
        }

        .copy-button {
            background-color: #4a5568;
            color: #e2e8f0;
            border: none;
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            cursor: pointer;
            font-size: 0.875rem;
            transition: background-color 0.2s;
        }

        .copy-button:hover {
            background-color: #718096;
        }

        .copy-button .fa-copy {
            margin-right: 0.375rem;
        }

        .copy-button .fa-check {
            margin-right: 0.375rem;
            color: #48bb78;
        }

        .copy-button:focus {
            outline: none;
            box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.5);
        }

        .code-block {
            background-color: #1e293b;
            color: #e2e8f0;
            padding: 1.5rem;
            border-bottom-left-radius: 0.5rem;
            border-bottom-right-radius: 0.5rem;
            font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
            white-space: pre-wrap;
            word-wrap: break-word;
            font-size: 0.875em;
            line-height: 1.6;
            overflow-x: auto;
        }

        .code-block .comment {
            color: #6a9955;
        }

        .code-block .keyword {
            color: #569cd6;
        }

        .code-block .tag {
            color: #569cd6;
        }

        .code-block .attr-name {
            color: #9cdcfe;
        }

        .code-block .attr-value {
            color: #ce9178;
        }

        .code-block .string {
            color: #ce9178;
        }

        .code-block .property {
            color: #9cdcfe;
        }

        .code-block .css-value {
            color: #ce9178;
        }

        .code-block .selector {
            color: #d7ba7d;
        }

        ::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #4a5568;
        }

        ::-webkit-scrollbar-thumb {
            background: #718096;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #a0aec0;
        }

        .html-output {
            border: 1px solid #e2e8f0;
            padding: 1.5rem;
            margin-top: 1rem;
            border-radius: 0.5rem;
            background-color: #f7fafc;
            min-height: 100px;
            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);
        }

        img {
            max-width: 100%;
            height: auto;
            border-radius: 0.375rem;
        }
    </style>
</head>

<body class="text-gray-800">

    <nav id="navbar" class="p-4">
        <div class="container mx-auto flex flex-wrap justify-between items-center">
            <h1 class="text-xl font-bold text-blue-600">Web c∆° b·∫£n - Bu·ªïi 2</h1>
            <div class="flex items-center mt-2 sm:mt-0">
                <button id="prevSlide"
                    class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg shadow mr-2 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    <i class="fas fa-arrow-left mr-1"></i> Tr∆∞·ªõc
                </button>
                <button id="nextSlide"
                    class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    Ti·∫øp <i class="fas fa-arrow-right ml-1"></i>
                </button>
            </div>
            <div class="text-sm text-gray-600 mt-2 sm:mt-0 ml-0 sm:ml-4">
                Slide <span id="currentSlideNum">1</span> / <span id="totalSlidesNum"></span>
            </div>
        </div>
    </nav>

    <div class="container mx-auto p-4 slide-container">
        <div id="slide-1" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-blue-700 mb-6">Bu·ªïi 2: X√¢y d·ª±ng c·∫•u tr√∫c v·ªõi &lt;div&gt; & C√°c b·ªô
                    ch·ªçn CSS
                </h2>
                <p class="text-2xl text-gray-600 mb-12">L√†m ch·ªß b·ªë c·ª•c v√† l·ª±a ch·ªçn ph·∫ßn t·ª≠</p>
                <img src="https://placehold.co/600x350/3498DB/FFFFFF?text=Structure+and+Selectors"
                    alt="[H√¨nh ·∫£nh v·ªÅ c·∫•u tr√∫c v√† c√°c b·ªô ch·ªçn]" class="rounded-lg shadow-xl max-w-2xl">
                <p class="mt-10 text-xl text-gray-700">H√£y c√πng x√¢y d·ª±ng c√°c b·ªë c·ª•c web ph·ª©c t·∫°p h∆°n!</p>
            </div>
        </div>

        <div id="slide-2" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">1. Th·∫ª &lt;div&gt;: Ng∆∞·ªùi h√πng th·∫ßm l·∫∑ng c·ªßa b·ªë
                    c·ª•c
                </h3>
                <p class="text-lg text-gray-700 mb-4">Th·∫ª <code>&lt;div&gt;</code> (vi·∫øt t·∫Øt c·ªßa division - s·ª± ph√¢n
                    chia)
                    l√† m·ªôt "th√πng ch·ª©a" chung. N√≥ kh√¥ng c√≥ √Ω nghƒ©a v·ªÅ m·∫∑t ng·ªØ nghƒ©a; vai tr√≤ ch√≠nh c·ªßa n√≥ l√†
                    <strong>nh√≥m c√°c ph·∫ßn t·ª≠ kh√°c l·∫°i v·ªõi nhau</strong> ƒë·ªÉ ƒë·ªãnh d·∫°ng (CSS) ho·∫∑c x·ª≠ l√Ω (JavaScript).
                </p>
                <div class="grid md:grid-cols-2 gap-8 mt-6">
                    <div class="bg-blue-50 p-6 rounded-lg shadow">
                        <h4 class="text-2xl font-bold text-blue-700 mb-3">C√¥ng d·ª•ng ch√≠nh:</h4>
                        <ul class="list-disc list-inside pl-4 text-gray-700 space-y-2">
                            <li>T·∫°o c√°c kh·ªëi b·ªë c·ª•c l·ªõn (header, main content, footer, sidebar).</li>
                            <li>Nh√≥m c√°c n·ªôi dung li√™n quan ƒë·ªÉ √°p d·ª•ng m·ªôt ki·ªÉu chung.</li>
                            <li>Chia m·ªôt trang web th√†nh c√°c ph·∫ßn ri√™ng bi·ªát, d·ªÖ qu·∫£n l√Ω.</li>
                        </ul>
                    </div>
                    <div class="bg-yellow-50 p-6 rounded-lg shadow">
                        <h4 class="text-2xl font-bold text-yellow-800 mb-3">Ph√©p v√≠ von:</h4>
                        <p class="text-gray-700">H√£y t∆∞·ªüng t∆∞·ª£ng th·∫ª <code>&lt;div&gt;</code> gi·ªëng nh∆∞ nh·ªØng chi·∫øc h·ªôp
                            carton. B·∫£n th√¢n ch√∫ng kh√¥ng c√≥ g√¨ ƒë·∫∑c bi·ªát, nh∆∞ng b·∫°n d√πng ch√∫ng ƒë·ªÉ s·∫Øp x·∫øp ƒë·ªì ƒë·∫°c (n·ªôi
                            dung web) th√†nh c√°c nh√≥m g·ªçn g√†ng, gi√∫p ng√¥i nh√† (trang web) c·ªßa b·∫°n ngƒÉn n·∫Øp v√† c√≥ c·∫•u
                            tr√∫c.</p>
                    </div>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mt-8 mb-2">V√≠ d·ª• v·ªÅ b·ªë c·ª•c trang web s·ª≠ d·ª•ng
                    <code>&lt;div&gt;</code>:
                </h4>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i>
                            Sao ch√©p</button>
                    </div>
                    <pre class="code-block" data-code-id="divLayoutCode"><code><span class="comment">&lt;!-- To√†n b·ªô trang web ƒë∆∞·ª£c b·ªçc trong m·ªôt div container --&gt;</span>
&lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"container"</span>&gt;
  <span class="comment">&lt;!-- Ph·∫ßn ƒë·∫ßu trang (header) --&gt;</span>
  &lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"header"</span>&gt; ...N·ªôi dung header... &lt;/<span class="tag">div</span>&gt;
  
  <span class="comment">&lt;!-- Ph·∫ßn n·ªôi dung ch√≠nh c·ªßa trang --&gt;</span>
  &lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"main-content"</span>&gt;
    <span class="comment">&lt;!-- N·ªôi dung ch√≠nh --&gt;</span>
    &lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"article"</span>&gt; ...N·ªôi dung b√†i vi·∫øt... &lt;/<span class="tag">div</span>&gt;
    <span class="comment">&lt;!-- Thanh b√™n (sidebar) --&gt;</span>
    &lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"sidebar"</span>&gt; ...N·ªôi dung sidebar... &lt;/<span class="tag">div</span>&gt;
  &lt;/<span class="tag">div</span>&gt;
  
  <span class="comment">&lt;!-- Ph·∫ßn ch√¢n trang (footer) --&gt;</span>
  &lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"footer"</span>&gt; ...N·ªôi dung footer... &lt;/<span class="tag">div</span>&gt;
&lt;/<span class="tag">div</span>&gt;</code></pre>
                </div>
            </div>
        </div>

        <div id="slide-3" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">2. Block v√† Inline: Hi·ªÉu c√°ch c√°c ph·∫ßn t·ª≠ hi·ªÉn th·ªã
                </h3>
                <p class="text-lg text-gray-700 mb-6">M·ªói ph·∫ßn t·ª≠ HTML ƒë·ªÅu c√≥ m·ªôt ki·ªÉu hi·ªÉn th·ªã m·∫∑c ƒë·ªãnh. Hai lo·∫°i ph·ªï
                    bi·∫øn nh·∫•t l√† <strong>block</strong> v√† <strong>inline</strong>.</p>
                <div class="grid md:grid-cols-2 gap-8">
                    <div class="bg-red-50 p-6 rounded-lg shadow">
                        <h4 class="text-2xl font-bold text-red-700 mb-3">Ph·∫ßn t·ª≠ Block</h4>
                        <ul class="list-disc list-inside pl-4 text-gray-700 space-y-2">
                            <li>Lu√¥n <strong>b·∫Øt ƒë·∫ßu tr√™n m·ªôt d√≤ng m·ªõi</strong>.</li>
                            <li>Chi·∫øm <strong>to√†n b·ªô chi·ªÅu r·ªông</strong> c·ªßa ph·∫ßn t·ª≠ cha.</li>
                            <li>V√≠ d·ª•: <code>&lt;div&gt;</code>, <code>&lt;h1&gt;</code>-<code>&lt;h6&gt;</code>,
                                <code>&lt;p&gt;</code>, <code>&lt;ul&gt;</code>, <code>&lt;li&gt;</code>.
                            </li>
                        </ul>
                    </div>
                    <div class="bg-indigo-50 p-6 rounded-lg shadow">
                        <h4 class="text-2xl font-bold text-indigo-700 mb-3">Ph·∫ßn t·ª≠ Inline</h4>
                        <ul class="list-disc list-inside pl-4 text-gray-700 space-y-2">
                            <li><strong>Kh√¥ng</strong> b·∫Øt ƒë·∫ßu tr√™n m·ªôt d√≤ng m·ªõi.</li>
                            <li>Ch·ªâ chi·∫øm <strong>v·ª´a ƒë·ªß chi·ªÅu r·ªông c·∫ßn thi·∫øt</strong> cho n·ªôi dung c·ªßa n√≥.</li>
                            <li>V√≠ d·ª•: <code>&lt;span&gt;</code>, <code>&lt;a&gt;</code>, <code>&lt;img&gt;</code>,
                                <code>&lt;strong&gt;</code>, <code>&lt;button&gt;</code>.
                            </li>
                        </ul>
                    </div>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mt-8 mb-2">V√≠ d·ª• th·ª±c t·∫ø:</h4>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i>
                            Sao ch√©p</button>
                    </div>
                    <pre class="code-block" data-code-id="blockInlineCode"><code><span class="comment">&lt;!-- div v√† p l√† c√°c ph·∫ßn t·ª≠ block, ch√∫ng s·∫Ω n·∫±m tr√™n c√°c d√≤ng ri√™ng bi·ªát --&gt;</span>
&lt;<span class="tag">div</span> <span class="attr-name">style</span>=<span class="attr-value">"background-color: #f8d7da; padding: 10px; margin-bottom: 5px;"</span>&gt;ƒê√¢y l√† m·ªôt th·∫ª div (block).&lt;/<span class="tag">div</span>&gt;
&lt;<span class="tag">p</span> <span class="attr-name">style</span>=<span class="attr-value">"background-color: #d1ecf1; padding: 10px;"</span>&gt;ƒê√¢y l√† m·ªôt ƒëo·∫°n vƒÉn (block).&lt;/<span class="tag">p</span>&gt;

<span class="comment">&lt;!-- span v√† a l√† c√°c ph·∫ßn t·ª≠ inline, ch√∫ng s·∫Ω n·∫±m tr√™n c√πng m·ªôt d√≤ng --&gt;</span>
&lt;<span class="tag">p</span> <span class="attr-name">style</span>=<span class="attr-value">"background-color: #e2e3e5; padding: 10px; margin-top: 10px;"</span>&gt;
  ƒê√¢y l√† m·ªôt
  &lt;<span class="tag">span</span> <span class="attr-name">style</span>=<span class="attr-value">"background-color: #fff3cd; font-weight: bold; padding: 5px; border-radius: 3px;"</span>&gt;span (inline)&lt;/<span class="tag">span</span>&gt;
  v√† ƒë√¢y l√† m·ªôt
  &lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span> <span class="attr-name">style</span>=<span class="attr-value">"background-color: #d4edda; padding: 5px; border-radius: 3px;"</span>&gt;li√™n k·∫øt (inline)&lt;/<span class="tag">a</span>&gt;.
&lt;/<span class="tag">p</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£ hi·ªÉn th·ªã:</h4>
                <div class="html-output" id="blockInlineOutput"></div>
            </div>
        </div>

        <div id="slide-4" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">3. T·∫≠p trung CSS v·ªõi th·∫ª &lt;style&gt;
                </h3>
                <p class="text-lg text-gray-700 mb-4"><strong>CSS n·ªôi b·ªô (Internal CSS)</strong>: ƒê·∫∑t c√°c quy t·∫Øc CSS
                    b√™n trong m·ªôt th·∫ª
                    <code>&lt;style&gt;</code>, th∆∞·ªùng ƒë∆∞·ª£c ƒë·∫∑t trong ph·∫ßn <code>&lt;head&gt;</code>. ƒê√¢y l√† c√°ch ti·∫øp
                    c·∫≠n t·ªët h∆°n so v·ªõi CSS Inline t·ª´ Bu·ªïi 1.
                </p>
                <h4 class="text-2xl font-bold text-green-700 my-4">L·ª£i √≠ch:</h4>
                <ul class="list-disc list-inside pl-4 text-gray-700 space-y-2 text-lg">
                    <li><strong>T√°ch bi·ªát n·ªôi dung (HTML) v√† tr√¨nh b√†y (CSS)</strong>.</li>
                    <li><strong>D·ªÖ d√†ng qu·∫£n l√Ω</strong> v√† ch·ªânh s·ª≠a t·∫•t c·∫£ c√°c ki·ªÉu ·ªü m·ªôt n∆°i.</li>
                    <li>Cho ph√©p b·∫°n <strong>t√°i s·ª≠ d·ª•ng</strong> m·ªôt ki·ªÉu ƒë·ªãnh d·∫°ng cho nhi·ªÅu ph·∫ßn t·ª≠.</li>
                </ul>
                <h4 class="text-xl font-medium text-gray-700 mt-8 mb-2">V√≠ d·ª•: Chuy·ªÉn ƒë·ªïi t·ª´ CSS Inline sang CSS
                    Internal
                </h4>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i>
                            Sao ch√©p</button>
                    </div>
                    <pre class="code-block" data-code-id="internalCssCode"><code>&lt;<span class="tag">!DOCTYPE html</span>&gt;
&lt;<span class="tag">html</span>&gt;
&lt;<span class="tag">head</span>&gt;
  &lt;<span class="tag">title</span>&gt;Internal CSS&lt;/<span class="tag">title</span>&gt;
  &lt;<span class="tag">style</span>&gt;
    <span class="selector">h1</span> {
      <span class="property">color</span>: <span class="css-value">navy</span>;
      <span class="property">text-align</span>: <span class="css-value">center</span>;
    }
    <span class="selector">p</span> {
      <span class="property">font-family</span>: <span class="css-value">Verdana</span>;
      <span class="property">font-size</span>: <span class="css-value">16px</span>;
    }
    <span class="selector">button</span> {
      <span class="property">background-color</span>: <span class="css-value">green</span>;
      <span class="property">color</span>: <span class="css-value">white</span>;
      <span class="property">padding</span>: <span class="css-value">10px</span>;
      <span class="property">border</span>: <span class="css-value">none</span>;
      <span class="property">border-radius</span>: <span class="css-value">5px</span>;
    }
  &lt;/<span class="tag">style</span>&gt;
&lt;/<span class="tag">head</span>&gt;
&lt;<span class="tag">body</span>&gt;
  <span class="comment">&lt;!-- M√£ HTML gi·ªù ƒë√¢y ƒë√£ g·ªçn g√†ng h∆°n nhi·ªÅu! --&gt;</span>
  &lt;<span class="tag">h1</span>&gt;ƒê√¢y l√† m·ªôt ti√™u ƒë·ªÅ&lt;/<span class="tag">h1</span>&gt;
  &lt;<span class="tag">p</span>&gt;ƒê√¢y l√† m·ªôt ƒëo·∫°n vƒÉn.&lt;/<span class="tag">p</span>&gt;
  &lt;<span class="tag">button</span>&gt;Nh·∫•n v√†o t√¥i&lt;/<span class="tag">button</span>&gt;
&lt;/<span class="tag">body</span>&gt;
&lt;/<span class="tag">html</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£ hi·ªÉn th·ªã (n·ªôi dung ph·∫ßn body):</h4>
                <div class="html-output" id="internalCssOutput"></div>
            </div>
        </div>

        <div id="slide-5" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">4. B·ªô ch·ªçn CSS: Ch·ªçn h√†ng lo·∫°t v·ªõi Class</h3>
                <p class="text-lg text-gray-700 mb-4">Khi b·∫°n mu·ªën √°p d·ª•ng <strong>c√πng m·ªôt ki·ªÉu ƒë·ªãnh d·∫°ng cho nhi·ªÅu
                        ph·∫ßn t·ª≠ kh√°c nhau</strong>, h√£y s·ª≠ d·ª•ng thu·ªôc t√≠nh <code>class</code>.</p>
                <div class="grid md:grid-cols-2 gap-8 text-lg items-center">
                    <div>
                        <h4 class="text-2xl font-bold text-gray-800 mb-3">C√°ch ho·∫°t ƒë·ªông:</h4>
                        <ol class="list-decimal list-inside space-y-2">
                            <li>Trong CSS, t·∫°o m·ªôt class v·ªõi t√™n b·∫Øt ƒë·∫ßu b·∫±ng d·∫•u ch·∫•m (<code>.</code>).</li>
                            <li>Trong HTML, th√™m thu·ªôc t√≠nh <code>class="ten-class"</code> v√†o c√°c ph·∫ßn t·ª≠.</li>
                            <li>M·ªôt ph·∫ßn t·ª≠ c√≥ th·ªÉ c√≥ nhi·ªÅu class, c√°ch nhau b·ªüi d·∫•u c√°ch.</li>
                        </ol>
                    </div>
                    <img src="https://placehold.co/400x200/2ECC71/FFFFFF?text=One+Style,+Many+Elements"
                        class="rounded-lg shadow-md">
                </div>
                <h4 class="text-xl font-medium text-gray-700 mt-8 mb-2">V√≠ d·ª•: T·∫°o c√°c n√∫t b·∫•m (Button) v√† th√¥ng b√°o
                    (Alert)</h4>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i>
                            Sao ch√©p</button>
                    </div>
                    <pre class="code-block" data-code-id="classSelectorCode"><code>&lt;<span class="tag">style</span>&gt;
  <span class="selector">.btn</span> {
    <span class="property">padding</span>: <span class="css-value">10px 15px</span>;
    <span class="property">border</span>: <span class="css-value">none</span>;
    <span class="property">border-radius</span>: <span class="css-value">5px</span>;
    <span class="property">font-weight</span>: <span class="css-value">bold</span>;
    <span class="property">cursor</span>: <span class="css-value">pointer</span>;
  }
  <span class="selector">.btn-primary</span> {
    <span class="property">background-color</span>: <span class="css-value">#007bff</span>;
    <span class="property">color</span>: <span class="css-value">white</span>;
  }
  <span class="selector">.alert-danger</span> {
    <span class="property">background-color</span>: <span class="css-value">#f8d7da</span>;
    <span class="property">color</span>: <span class="css-value">#721c24</span>;
    <span class="property">padding</span>: <span class="css-value">1rem</span>;
    <span class="property">border</span>: <span class="css-value">1px solid #f5c6cb</span>;
    <span class="property">border-radius</span>: <span class="css-value">.25rem</span>;
    <span class="property">margin-top</span>: <span class="css-value">15px</span>;
  }
&lt;/<span class="tag">style</span>&gt;
<span class="comment">&lt;!-- HTML --&gt;</span>
&lt;<span class="tag">button</span> <span class="attr-name">class</span>=<span class="attr-value">"btn btn-primary"</span>&gt;L∆∞u thay ƒë·ªïi&lt;/<span class="tag">button</span>&gt;
&lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"alert-danger"</span>&gt;
    &lt;<span class="tag">strong</span>&gt;L·ªói!&lt;/<span class="tag">strong</span>&gt; Vui l√≤ng ki·ªÉm tra l·∫°i th√¥ng tin.
&lt;/<span class="tag">div</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£ hi·ªÉn th·ªã:</h4>
                <div class="html-output" id="classSelectorOutput"></div>
            </div>
        </div>

        <div id="slide-6" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">5. B·ªô ch·ªçn CSS: Ch·ªçn duy nh·∫•t v·ªõi ID</h3>
                <p class="text-lg text-gray-700 mb-4">Khi b·∫°n mu·ªën √°p d·ª•ng m·ªôt ki·ªÉu cho <strong>m·ªôt v√† ch·ªâ m·ªôt ph·∫ßn t·ª≠
                        duy nh·∫•t</strong> tr√™n trang, h√£y s·ª≠ d·ª•ng thu·ªôc t√≠nh <code>id</code>.</p>
                <div class="grid md:grid-cols-2 gap-8 text-lg items-center">
                    <div>
                        <h4 class="text-2xl font-bold text-gray-800 mb-3">C√°ch ho·∫°t ƒë·ªông:</h4>
                        <ol class="list-decimal list-inside space-y-2">
                            <li>Trong HTML, th√™m thu·ªôc t√≠nh <code>id="ten-id-duy-nhat"</code>. <strong>ID ph·∫£i l√† duy
                                    nh·∫•t</strong> tr√™n trang.</li>
                            <li>Trong CSS, ch·ªçn ph·∫ßn t·ª≠ b·∫±ng c√°ch s·ª≠ d·ª•ng k√Ω hi·ªáu thƒÉng (<code>#</code>) theo sau l√† t√™n
                                ID.
                            </li>
                        </ol>
                    </div>
                    <img src="https://placehold.co/400x200/E74C3C/FFFFFF?text=One+Unique+Element"
                        class="rounded-lg shadow-md">
                </div>
                <h4 class="text-xl font-medium text-gray-700 mt-8 mb-2">V√≠ d·ª•: ƒê·ªãnh d·∫°ng cho ph·∫ßn Header</h4>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i>
                            Sao ch√©p</button>
                    </div>
                    <pre class="code-block" data-code-id="idSelectorCode"><code>&lt;<span class="tag">style</span>&gt;
  <span class="selector">#main-header</span> {
    <span class="property">background-color</span>: <span class="css-value">#343a40</span>;
    <span class="property">color</span>: <span class="css-value">white</span>;
    <span class="property">padding</span>: <span class="css-value">20px</span>;
    <span class="property">text-align</span>: <span class="css-value">center</span>;
    <span class="property">border-radius</span>: <span class="css-value">8px</span>;
  }
&lt;/<span class="tag">style</span>&gt;
<span class="comment">&lt;!-- HTML --&gt;</span>
&lt;<span class="tag">div</span> <span class="attr-name">id</span>=<span class="attr-value">"main-header"</span>&gt;
  &lt;<span class="tag">h1</span>&gt;Trang web c·ªßa t√¥i&lt;/<span class="tag">h1</span>&gt;
&lt;/<span class="tag">div</span>&gt;</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£ hi·ªÉn th·ªã:</h4>
                <div class="html-output" id="idSelectorOutput"></div>
            </div>
        </div>

        <div id="slide-7" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-blue-600 mb-6">6. B√†i t·∫≠p: X√¢y d·ª±ng b·ªë c·ª•c b√†i ƒëƒÉng Blog</h3>
                <p class="text-lg text-gray-700 mb-4">√Åp d·ª•ng nh·ªØng g√¨ b·∫°n ƒë√£ h·ªçc: <code>&lt;div&gt;</code>,
                    <code>class</code>, v√† <code>id</code> ƒë·ªÉ t·∫°o m·ªôt b·ªë c·ª•c b√†i ƒëƒÉng blog ƒë∆°n gi·∫£n.
                </p>
                <div class="grid lg:grid-cols-2 gap-8">
                    <div class="code-block-container">
                        <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i>
                                Sao ch√©p</button></div>
                        <pre class="code-block" data-code-id="blogLayoutCode"><code>&lt;<span class="tag">!DOCTYPE html</span>&gt;
&lt;<span class="tag">html</span>&gt;
&lt;<span class="tag">head</span>&gt;
&lt;<span class="tag">style</span>&gt;
  <span class="selector">body</span> { <span class="property">background-color</span>: <span class="css-value">#f4f4f4</span>; <span class="property">color</span>: <span class="css-value">#333</span>; <span class="property">font-family</span>: <span class="css-value">sans-serif</span>; }
  <span class="selector">#blog-container</span> {
    <span class="comment">/* ƒê√£ ƒëi·ªÅu ch·ªânh cho khu v·ª±c hi·ªÉn th·ªã */</span>
    <span class="property">margin</span>: <span class="css-value">auto</span>;
    <span class="property">background-color</span>: <span class="css-value">white</span>;
    <span class="property">padding</span>: <span class="css-value">20px</span>;
    <span class="property">box-shadow</span>: <span class="css-value">0 0 10px rgba(0,0,0,0.1)</span>;
    <span class="property">border-radius</span>: <span class="css-value">8px</span>;
  }
  <span class="selector">.post-header</span> { <span class="property">border-bottom</span>: <span class="css-value">2px solid #eee</span>; <span class="property">padding-bottom</span>: <span class="css-value">10px</span>; <span class="property">margin-bottom</span>: <span class="css-value">20px</span>; }
  <span class="selector">.post-title</span> { <span class="property">color</span>: <span class="css-value">#0056b3</span>; <span class="property">margin</span>: <span class="css-value">0</span>; }
  <span class="selector">.post-meta</span> { <span class="property">font-size</span>: <span class="css-value">0.9em</span>; <span class="property">color</span>: <span class="css-value">#888</span>; <span class="property">margin-top</span>: <span class="css-value">5px</span>; }
  <span class="selector">.post-content p</span> { <span class="property">line-height</span>: <span class="css-value">1.6</span>; }
  <span class="selector">.author-box</span> { <span class="property">background-color</span>: <span class="css-value">#e9ecef</span>; <span class="property">border</span>: <span class="css-value">1px solid #dee2e6</span>; <span class="property">padding</span>: <span class="css-value">15px</span>; <span class="property">margin-top</span>: <span class="css-value">25px</span>; <span class="property">border-radius</span>: <span class="css-value">5px</span>; }
&lt;/<span class="tag">style</span>&gt;
&lt;/<span class="tag">head</span>&gt;
&lt;<span class="tag">body</span>&gt;
  &lt;<span class="tag">div</span> <span class="attr-name">id</span>=<span class="attr-value">"blog-container"</span>&gt;
    &lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"post-header"</span>&gt;
      &lt;<span class="tag">h1</span> <span class="attr-name">class</span>=<span class="attr-value">"post-title"</span>&gt;H√†nh tr√¨nh ph√°t tri·ªÉn Web c·ªßa t√¥i&lt;/<span class="tag">h1</span>&gt;
      &lt;<span class="tag">p</span> <span class="attr-name">class</span>=<span class="attr-value">"post-meta"</span>&gt;ƒêƒÉng b·ªüi John Doe v√†o ng√†y 22 th√°ng 6, 2025&lt;/<span class="tag">p</span>&gt;
    &lt;/<span class="tag">div</span>&gt;
    &lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"post-content"</span>&gt;
      &lt;<span class="tag">p</span>&gt;ƒê√¢y l√† ƒëo·∫°n ƒë·∫ßu ti√™n c·ªßa b√†i vi·∫øt. Ch√∫ng t√¥i ƒëang √°p d·ª•ng c√°c class ƒë·ªÉ ƒë·ªãnh d·∫°ng.&lt;/<span class="tag">p</span>&gt;
      &lt;<span class="tag">p</span>&gt;Th·∫ª div gi√∫p ch√∫ng ta nh√≥m c√°c ph·∫ßn t·ª≠ l·∫°i v·ªõi nhau.&lt;/<span class="tag">p</span>&gt;
    &lt;/<span class="tag">div</span>&gt;
    &lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"author-box"</span>&gt;
      &lt;<span class="tag">h4</span>&gt;V·ªÅ t√°c gi·∫£&lt;/<span class="tag">h4</span>&gt;
      &lt;<span class="tag">p</span>&gt;John Doe l√† m·ªôt nh√† ph√°t tri·ªÉn web ƒë·∫ßy nhi·ªát huy·∫øt.&lt;/<span class="tag">p</span>&gt;
    &lt;/<span class="tag">div</span>&gt;
  &lt;/<span class="tag">div</span>&gt;
&lt;/<span class="tag">body</span>&gt;
&lt;/<span class="tag">html</span>&gt;</code></pre>
                    </div>
                    <div>
                        <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£ hi·ªÉn th·ªã:</h4>
                        <div class="html-output h-full" id="blogLayoutOutput"></div>
                    </div>
                </div>
            </div>
        </div>

        <div id="slide-8" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-blue-700 mb-8">T·ªïng k·∫øt Bu·ªïi 2</h2>
                <div class="text-xl text-gray-700 space-y-5 max-w-3xl text-left bg-gray-50 p-8 rounded-lg shadow">
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>Th·∫ª <strong><code>&lt;div&gt;</code>
                        </strong> l√† c√¥ng c·ª• ƒë·ªÉ nh√≥m c√°c ph·∫ßn t·ª≠ v√† x√¢y d·ª±ng b·ªë c·ª•c.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>Hi·ªÉu r√µ <strong>Block</strong>
                        (chi·∫øm to√†n b·ªô d√≤ng) v√† <strong>Inline</strong> (n·∫±m tr√™n c√πng d√≤ng) l√† ch√¨a kh√≥a ƒë·ªÉ ki·ªÉm
                        so√°t b·ªë c·ª•c.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>S·ª≠ d·ª•ng
                        <strong><code>&lt;style&gt;</code></strong> gi·ªØ cho HTML g·ªçn g√†ng h∆°n v√† gi√∫p qu·∫£n l√Ω CSS
                        d·ªÖ d√†ng h∆°n.
                    </p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i><strong>Class
                            (<code>.ten-class</code>)</strong> ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ √°p d·ª•ng m·ªôt ki·ªÉu cho NHI·ªÄU ph·∫ßn t·ª≠.
                    </p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i><strong>ID
                            (<code>#ten-id</code>)</strong> ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ x√°c ƒë·ªãnh v√† ƒë·ªãnh d·∫°ng cho M·ªòT ph·∫ßn t·ª≠
                        DUY NH·∫§T.</p>
                </div>
                <div
                    class="mt-12 bg-green-100 border-l-4 border-green-500 text-green-700 p-6 rounded-r-lg shadow-lg w-full max-w-3xl">
                    <h4 class="text-2xl font-bold mb-2">H·∫πn g·∫∑p l·∫°i ·ªü Bu·ªïi 3!</h4>
                    <p class="text-lg">Ch√∫ng ta s·∫Ω kh√°m ph√° m·ªôt trong nh·ªØng kh√°i ni·ªám quan tr·ªçng nh·∫•t c·ªßa CSS:
                        <strong>M√¥ h√¨nh h·ªôp (Box Model)</strong>!
                    </p>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const slides = Array.from(document.querySelectorAll('.slide'));
            const prevButton = document.getElementById('prevSlide');
            const nextButton = document.getElementById('nextSlide');
            const currentSlideNumDisplay = document.getElementById('currentSlideNum');
            const totalSlidesNumDisplay = document.getElementById('totalSlidesNum');

            let currentSlide = 0;

            if (slides.length > 0) {
                totalSlidesNumDisplay.textContent = slides.length;
            } else {
                if (currentSlideNumDisplay) currentSlideNumDisplay.textContent = '0';
                if (totalSlidesNumDisplay) totalSlidesNumDisplay.textContent = '0';
            }

            function showSlide(index) {
                slides.forEach((slide, i) => {
                    if (i === index) {
                        slide.style.display = 'flex';
                        setTimeout(() => slide.classList.add('active'), 10);
                    } else {
                        slide.classList.remove('active');
                        setTimeout(() => {
                            if (!slide.classList.contains('active')) {
                                slide.style.display = 'none';
                            }
                        }, 400); // Kh·ªõp v·ªõi th·ªùi gian chuy·ªÉn ƒë·ªïi c·ªßa CSS
                    }
                });
                if (currentSlideNumDisplay) {
                    currentSlideNumDisplay.textContent = index + 1;
                }
                updateNavButtons();
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }

            function updateNavButtons() {
                if (!prevButton || !nextButton) return;
                prevButton.disabled = currentSlide === 0;
                nextButton.disabled = currentSlide === slides.length - 1;
            }

            function copyCode(buttonElement) {
                const codeBlock = buttonElement.closest('.code-block-container').querySelector('pre.code-block code');
                if (!codeBlock) return;

                const codeToCopy = codeBlock.innerText;
                const textarea = document.createElement('textarea');
                textarea.value = codeToCopy;
                document.body.appendChild(textarea);
                textarea.select();
                try {
                    document.execCommand('copy');
                    const originalIcon = buttonElement.innerHTML;
                    buttonElement.innerHTML = '<i class="fas fa-check"></i> ƒê√£ sao ch√©p!';
                    setTimeout(() => {
                        buttonElement.innerHTML = originalIcon;
                    }, 1500);
                } catch (err) {
                    console.error('Could not copy code:', err);
                    alert('Sao ch√©p th·∫•t b·∫°i!');
                }
                document.body.removeChild(textarea);
            }

            function renderExample(codeBlockEl, outputEl) {
                if (!codeBlockEl || !outputEl) return;

                const codeString = codeBlockEl.querySelector('code').innerText;

                let styleContent = '';
                const styleMatch = codeString.match(/<style>([\s\S]*?)<\/style>/i);
                if (styleMatch) {
                    styleContent = styleMatch[1];
                }

                let bodyContent = '';
                const bodyMatch = codeString.match(/<body>([\s\S]*?)<\/body>/i);
                if (bodyMatch) {
                    bodyContent = bodyMatch[1];
                } else {
                    bodyContent = codeString.replace(/<style>[\s\S]*?<\/style>/i, '').trim();
                }

                outputEl.innerHTML = ''; // Clear previous content
                const shadow = outputEl.attachShadow({ mode: 'open' });
                shadow.innerHTML = `<style>${styleContent}</style>${bodyContent}`;
            }

            // Thi·∫øt l·∫≠p ƒëi·ªÅu h∆∞·ªõng
            if (prevButton && nextButton) {
                prevButton.addEventListener('click', () => {
                    if (currentSlide > 0) {
                        currentSlide--;
                        showSlide(currentSlide);
                    }
                });

                nextButton.addEventListener('click', () => {
                    if (currentSlide < slides.length - 1) {
                        currentSlide++;
                        showSlide(currentSlide);
                    }
                });
            }

            // Thi·∫øt l·∫≠p c√°c n√∫t sao ch√©p
            document.querySelectorAll('.copy-button').forEach(button => {
                button.addEventListener('click', () => copyCode(button));
            });

            // Hi·ªÉn th·ªã t·∫•t c·∫£ c√°c v√≠ d·ª• tr·ª±c ti·∫øp
            renderExample(document.querySelector('[data-code-id="blockInlineCode"]'), document.getElementById('blockInlineOutput'));
            renderExample(document.querySelector('[data-code-id="internalCssCode"]'), document.getElementById('internalCssOutput'));
            renderExample(document.querySelector('[data-code-id="classSelectorCode"]'), document.getElementById('classSelectorOutput'));
            renderExample(document.querySelector('[data-code-id="idSelectorCode"]'), document.getElementById('idSelectorOutput'));
            renderExample(document.querySelector('[data-code-id="blogLayoutCode"]'), document.getElementById('blogLayoutOutput'));

            // Thi·∫øt l·∫≠p ban ƒë·∫ßu
            if (slides.length > 0) {
                showSlide(currentSlide);
            }
        });
    </script>
</body>

</html>

/* ===== Web Basic/lesson3.html ===== */
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Session 3: CSS Box Model & Layouts (Chi ti·∫øt)</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            scroll-behavior: smooth;
            background-color: #f3f4f6;
        }

        #navbar {
            position: sticky;
            top: 0;
            z-index: 50;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .slide-container {
            padding-top: 1rem;
        }

        .slide {
            background-color: white;
            padding: 2.5rem;
            border-radius: 0.75rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            margin-bottom: 2rem;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
            min-height: calc(100vh - 120px);
            display: none;
            flex-direction: column;
        }

        .slide.active {
            display: flex;
            opacity: 1;
            transform: translateY(0);
        }

        .slide-content-wrapper {
            flex-grow: 1;
        }

        .code-block-container {
            position: relative;
            background-color: #1e293b;
            border-radius: 0.5rem;
            margin-top: 1rem;
            margin-bottom: 1rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .code-block-header {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            padding: 0.5rem 0.75rem;
            background-color: #334155;
            border-top-left-radius: 0.5rem;
            border-top-right-radius: 0.5rem;
        }

        .copy-button {
            background-color: #4a5568;
            color: #e2e8f0;
            border: none;
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            cursor: pointer;
            font-size: 0.875rem;
            transition: background-color 0.2s;
        }

        .copy-button:hover {
            background-color: #718096;
        }

        .copy-button .fa-copy {
            margin-right: 0.375rem;
        }

        .copy-button .fa-check {
            margin-right: 0.375rem;
            color: #48bb78;
        }

        .copy-button:focus {
            outline: none;
            box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.5);
        }

        .code-block {
            background-color: #1e293b;
            color: #e2e8f0;
            padding: 1.5rem;
            border-bottom-left-radius: 0.5rem;
            border-bottom-right-radius: 0.5rem;
            font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
            white-space: pre-wrap;
            word-wrap: break-word;
            font-size: 0.875em;
            line-height: 1.6;
            overflow-x: auto;
        }

        .code-block .comment {
            color: #6a9955;
        }

        .code-block .tag {
            color: #569cd6;
        }

        .code-block .attr-name {
            color: #9cdcfe;
        }

        .code-block .attr-value {
            color: #ce9178;
        }

        .code-block .property {
            color: #9cdcfe;
        }

        .code-block .css-value {
            color: #ce9178;
        }

        .code-block .selector {
            color: #d7ba7d;
        }

        .html-output {
            border: 1px solid #e2e8f0;
            padding: 1.5rem;
            margin-top: 1rem;
            border-radius: 0.5rem;
            background-color: #f7fafc;
            min-height: 100px;
            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);
        }

        .box-model-diagram {
            background-color: #f0f9ff;
            border: 2px dashed #0ea5e9;
            padding: 20px;
            text-align: center;
            font-size: 1.1rem;
            font-weight: 600;
            color: #0369a1;
            margin: 20px auto;
            max-width: 500px;
        }

        .box-model-diagram .border-box {
            background-color: #ecfdf5;
            border: 2px solid #22c55e;
            padding: 20px;
            color: #15803d;
        }

        .box-model-diagram .padding-box {
            background-color: #fefce8;
            border: 2px dotted #eab308;
            padding: 20px;
            color: #a16207;
        }

        .box-model-diagram .content-box {
            background-color: #fff;
            padding: 20px;
            border: 2px solid #ccc;
            color: #333;
        }
    </style>
</head>

<body class="text-gray-800">

    <nav id="navbar" class="p-4">
        <div class="container mx-auto flex flex-wrap justify-between items-center">
            <h1 class="text-xl font-bold text-teal-600">Web Basics - Session 3</h1>
            <div class="flex items-center mt-2 sm:mt-0">
                <button id="prevSlide"
                    class="bg-teal-500 hover:bg-teal-700 text-white font-bold py-2 px-4 rounded-lg shadow mr-2 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    <i class="fas fa-arrow-left mr-1"></i> Prev
                </button>
                <button id="nextSlide"
                    class="bg-teal-500 hover:bg-teal-700 text-white font-bold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    Next <i class="fas fa-arrow-right ml-1"></i>
                </button>
            </div>
            <div class="text-sm text-gray-600 mt-2 sm:mt-0 ml-0 sm:ml-4">
                Slide <span id="currentSlideNum">1</span> / <span id="totalSlidesNum"></span>
            </div>
        </div>
    </nav>

    <div class="container mx-auto p-4 slide-container">
        <!-- Slide 1: Title -->
        <div id="slide-1" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-teal-700 mb-6">Session 3: CSS Box Model & Layout</h2>
                <p class="text-2xl text-gray-600 mb-12">N·ªÅn t·∫£ng ƒë·ªÉ x√¢y d·ª±ng m·ªçi giao di·ªán Web</p>
                <img src="https://placehold.co/600x350/14B8A6/FFFFFF?text=CSS+Box+Model"
                    alt="[Image of S∆° ƒë·ªì CSS Box Model]" class="rounded-lg shadow-xl max-w-2xl">
                <p class="mt-10 text-xl text-gray-700">H√£y c√πng t√¨m hi·ªÉu c√°ch c√°c ph·∫ßn t·ª≠ chi·∫øm kh√¥ng gian tr√™n trang
                    web!</p>
            </div>
        </div>

        <!-- Slide 2: What is Box Model? -->
        <div id="slide-2" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-teal-600 mb-6">1. CSS Box Model l√† g√¨?</h3>
                <p class="text-lg text-gray-700 mb-4">Trong CSS, m·ªçi ph·∫ßn t·ª≠ HTML ƒë·ªÅu c√≥ th·ªÉ ƒë∆∞·ª£c coi l√† m·ªôt chi·∫øc h·ªôp
                    (box). <strong>Box Model</strong> l√† m·ªôt kh√°i ni·ªám m√¥ t·∫£ c√°ch c√°c h·ªôp n√†y ƒë∆∞·ª£c hi·ªÉn th·ªã v√† chi·∫øm
                    kh√¥ng gian tr√™n trang.</p>
                <p class="text-lg text-gray-700 mb-6">M·ªói h·ªôp bao g·ªìm 4 v√πng, t·ª´ ngo√†i v√†o trong:</p>
                <div class="box-model-diagram">
                    Margin (V√πng l·ªÅ ngo√†i)
                    <div class="border-box">
                        Border (ƒê∆∞·ªùng vi·ªÅn)
                        <div class="padding-box">
                            Padding (V√πng ƒë·ªám trong)
                            <div class="content-box">
                                Content (N·ªôi dung)
                            </div>
                        </div>
                    </div>
                </div>
                <ul class="list-disc list-inside mt-6 pl-4 text-gray-700 space-y-3 text-lg">
                    <li><strong>Content:</strong> V√πng ch·ª©a n·ªôi dung th·ª±c t·∫ø (vƒÉn b·∫£n, h√¨nh ·∫£nh, ...).</li>
                    <li><strong>Padding:</strong> V√πng ƒë·ªám trong su·ªët xung quanh n·ªôi dung, n·∫±m <strong>b√™n
                            trong</strong> ƒë∆∞·ªùng vi·ªÅn.</li>
                    <li><strong>Border:</strong> M·ªôt ƒë∆∞·ªùng vi·ªÅn bao quanh padding v√† content.</li>
                    <li><strong>Margin:</strong> V√πng l·ªÅ trong su·ªët n·∫±m <strong>b√™n ngo√†i</strong> ƒë∆∞·ªùng vi·ªÅn, t·∫°o
                        kho·∫£ng c√°ch v·ªõi c√°c ph·∫ßn t·ª≠ kh√°c.</li>
                </ul>
            </div>
        </div>

        <!-- Slide 3: Margin -->
        <div id="slide-3" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-teal-600 mb-6">2. Margin - L·ªÅ Ngo√†i</h3>
                <p class="text-lg text-gray-700 mb-4"><code>margin</code> d√πng ƒë·ªÉ t·∫°o kho·∫£ng tr·ªëng <strong>b√™n
                        ngo√†i</strong> ƒë∆∞·ªùng vi·ªÅn c·ªßa m·ªôt ph·∫ßn t·ª≠, ƒë·∫©y c√°c ph·∫ßn t·ª≠ kh√°c ra xa.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="marginCode"><code>&lt;<span class="tag">style</span>&gt;
.box1 {
    background-color: #fecaca;
    border: 2px solid #b91c1c;
    width: 200px;
    padding: 10px;
    /* ƒê·∫©y box th·ª© 2 c√°ch xa 50px v·ªÅ ph√≠a d∆∞·ªõi */
    margin-bottom: 50px;
}
.box2 {
    background-color: #dbeafe;
    border: 2px solid #1d4ed8;
    width: 200px;
    padding: 10px;
    /* T·ª± ƒë·ªông cƒÉn gi·ªØa box theo chi·ªÅu ngang */
    margin-left: auto;
    margin-right: auto;
}
&lt;/<span class="tag">style</span>&gt;
&lt;<span class="tag">div</span> class="box1"&gt;Box 1&lt;/<span class="tag">div</span>&gt;
&lt;<span class="tag">div</span> class="box2"&gt;Box 2 (ƒë∆∞·ª£c cƒÉn gi·ªØa)&lt;/<span class="tag">div</span>&gt;
</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£:</h4>
                <div class="html-output" id="marginOutput"></div>
            </div>
        </div>

        <!-- Slide 4: Padding -->
        <div id="slide-4" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-teal-600 mb-6">3. Padding - ƒê·ªám Trong</h3>
                <p class="text-lg text-gray-700 mb-4"><code>padding</code> d√πng ƒë·ªÉ t·∫°o kho·∫£ng tr·ªëng <strong>b√™n
                        trong</strong> ƒë∆∞·ªùng vi·ªÅn, gi·ªØa vi·ªÅn v√† n·ªôi dung.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="paddingCode"><code>&lt;<span class="tag">style</span>&gt;
.button-no-padding {
    background-color: #6ee7b7;
    border: 2px solid #047857;
}
.button-with-padding {
    background-color: #6ee7b7;
    border: 2px solid #047857;
    /* Th√™m kho·∫£ng ƒë·ªám 15px xung quanh ch·ªØ */
    padding: 15px;
}
&lt;/<span class="tag">style</span>&gt;
&lt;<span class="tag">button</span> class="button-no-padding"&gt;N√∫t kh√¥ng Padding&lt;/<span class="tag">button</span>&gt;
&lt;<span class="tag">br</span>&gt;&lt;<span class="tag">br</span>&gt;
&lt;<span class="tag">button</span> class="button-with-padding"&gt;N√∫t c√≥ Padding&lt;/<span class="tag">button</span>&gt;
</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£:</h4>
                <div class="html-output" id="paddingOutput"></div>
            </div>
        </div>

        <!-- Slide 5: Margin/Padding Shorthand -->
        <div id="slide-5" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-teal-600 mb-6">4. C√°ch vi·∫øt t·∫Øt cho Margin & Padding</h3>
                <p class="text-lg text-gray-700 mb-4">B·∫°n c√≥ th·ªÉ thi·∫øt l·∫≠p gi√° tr·ªã cho c·∫£ 4 ph√≠a c√πng l√∫c ƒë·ªÉ code ng·∫Øn
                    g·ªçn h∆°n.</p>
                <ul class="list-disc list-inside pl-4 text-gray-700 space-y-4 text-lg bg-gray-50 p-6 rounded-lg">
                    <li><strong>4 gi√° tr·ªã:</strong> <code>margin: 10px 20px 30px 40px;</code> (tr√™n, ph·∫£i, d∆∞·ªõi, tr√°i)
                    </li>
                    <li><strong>3 gi√° tr·ªã:</strong> <code>margin: 10px 20px 30px;</code> (tr√™n, tr√°i/ph·∫£i, d∆∞·ªõi)</li>
                    <li><strong>2 gi√° tr·ªã:</strong> <code>margin: 10px 20px;</code> (tr√™n/d∆∞·ªõi, tr√°i/ph·∫£i)</li>
                    <li><strong>1 gi√° tr·ªã:</strong> <code>margin: 10px;</code> (t·∫•t c·∫£ 4 ph√≠a)</li>
                </ul>
                <p class="text-lg text-gray-700 mt-4"><em>Quy t·∫Øc t∆∞∆°ng t·ª± √°p d·ª•ng cho <code>padding</code>.</em></p>
                <div class="code-block-container mt-6">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="shorthandCode"><code>&lt;<span class="tag">style</span>&gt;
.shorthand-box {
    background-color: #f5d0fe;
    border: 2px solid #86198f;
    /* tr√™n/d∆∞·ªõi: 20px, tr√°i/ph·∫£i: 40px */
    padding: 20px 40px;
}
&lt;/<span class="tag">style</span>&gt;
&lt;<span class="tag">div</span> class="shorthand-box"&gt;Box n√†y d√πng padding shorthand.&lt;/<span class="tag">div</span>&gt;
</code></pre>
                </div>
                <div class="html-output" id="shorthandOutput"></div>
            </div>
        </div>

        <!-- Slide 6: Border -->
        <div id="slide-6" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-teal-600 mb-6">5. ƒê∆∞·ªùng vi·ªÅn: Border</h3>
                <p class="text-lg text-gray-700 mb-4">Thu·ªôc t√≠nh <code>border</code> cho ph√©p b·∫°n ch·ªâ ƒë·ªãnh ki·ªÉu, ƒë·ªô d√†y
                    v√† m√†u s·∫Øc c·ªßa ƒë∆∞·ªùng vi·ªÅn.</p>
                <h4 class="text-2xl font-bold text-gray-800 my-4">C√°ch vi·∫øt t·∫Øt (shorthand):</h4>
                <p class="text-lg text-gray-700 mb-4"><code>border: [ƒë·ªô d√†y] [ki·ªÉu] [m√†u];</code></p>
                <ul class="list-disc list-inside mt-6 pl-4 text-gray-700 space-y-2 text-lg">
                    <li><code>border-style</code>: Ki·ªÉu vi·ªÅn (<code>solid</code>, <code>dashed</code>,
                        <code>dotted</code>, <code>double</code>, <code>groove</code>, ...).
                    </li>
                    <li><code>border-radius</code>: D√πng ƒë·ªÉ bo tr√≤n c√°c g√≥c c·ªßa ph·∫ßn t·ª≠.</li>
                </ul>
                <div class="code-block-container mt-4">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="borderCode"><code>&lt;<span class="tag">style</span>&gt;
  .box-border { padding: 20px; margin-bottom: 15px; background-color: #f1f5f9; }
  .solid-border { border: 2px solid #2563eb; }
  .dashed-border { border: 3px dashed #dc2626; }
  .rounded-border { border: 2px solid #16a34a; border-radius: 15px; }
&lt;/<span class="tag">style</span>&gt;
&lt;<span class="tag">div</span> class="box-border solid-border"&gt;Vi·ªÅn li·ªÅn (solid).&lt;/<span class="tag">div</span>&gt;
&lt;<span class="tag">div</span> class="box-border dashed-border"&gt;Vi·ªÅn ƒë·ª©t n√©t (dashed).&lt;/<span class="tag">div</span>&gt;
&lt;<span class="tag">div</span> class="box-border rounded-border"&gt;Vi·ªÅn ƒë∆∞·ª£c bo tr√≤n (border-radius).&lt;/<span class="tag">div</span>&gt;
</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£:</h4>
                <div class="html-output" id="borderOutput"></div>
            </div>
        </div>

        <!-- Slide 7: Width, Height, box-sizing -->
        <div id="slide-7" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-teal-600 mb-6">6. K√≠ch th∆∞·ªõc & Box-sizing</h3>
                <p class="text-lg text-gray-700 mb-4"><code>width</code> v√† <code>height</code> thi·∫øt l·∫≠p k√≠ch th∆∞·ªõc cho
                    v√πng <strong>content</strong>.</p>
                <p class="text-lg text-gray-700 mb-4">ƒêi·ªÅu n√†y c√≥ th·ªÉ g√¢y ra v·∫•n ƒë·ªÅ: <code>width: 100px</code> +
                    <code>padding: 20px</code> => chi·ªÅu r·ªông th·ª±c t·∫ø l√† 140px!
                </p>
                <h4 class="text-2xl font-bold text-red-700 my-4">Gi·∫£i ph√°p: `box-sizing: border-box;`</h4>
                <p class="text-lg text-gray-700 mb-6">Khi d√πng thu·ªôc t√≠nh n√†y, <code>padding</code> v√†
                    <code>border</code> s·∫Ω ƒë∆∞·ª£c t√≠nh <strong>b√™n trong</strong> <code>width</code> v√†
                    <code>height</code> ƒë√£ cho, ch·ª© kh√¥ng c·ªông th√™m v√†o.
                </p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="boxSizingCode"><code>&lt;<span class="tag">style</span>&gt;
  .box-sizing {
    width: 200px;
    padding: 20px;
    border: 10px solid #fb923c;
    margin-bottom: 10px;
    color: white;
  }
  .content-box {
    background-color: #1e40af;
    /* Chi·ªÅu r·ªông th·ª±c: 200 + 20*2 + 10*2 = 260px */
    box-sizing: content-box; /* M·∫∑c ƒë·ªãnh */
  }
  .border-box {
    background-color: #b91c1c;
    /* Chi·ªÅu r·ªông th·ª±c: 200px */
    box-sizing: border-box;
  }
&lt;/<span class="tag">style</span>&gt;
&lt;<span class="tag">div</span> class="box-sizing content-box"&gt;content-box (260px)&lt;/<span class="tag">div</span>&gt;
&lt;<span class="tag">div</span> class="box-sizing border-box"&gt;border-box (200px)&lt;/<span class="tag">div</span>&gt;
</code></pre>
                </div>
                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£:</h4>
                <div class="html-output" id="boxSizingOutput"></div>
            </div>
        </div>

        <!-- Slide 8: max-width -->
        <div id="slide-8" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-teal-600 mb-6">7. `max-width` cho Responsive Design</h3>
                <p class="text-lg text-gray-700 mb-6"><code>max-width</code> l√† m·ªôt thu·ªôc t√≠nh c·ª±c k·ª≥ quan tr·ªçng ƒë·ªÉ x√¢y
                    d·ª±ng layout ƒë√°p ·ª©ng (responsive).</p>
                <ul class="list-disc list-inside pl-4 text-gray-700 space-y-3 text-lg">
                    <li>N√≥ ƒë·∫£m b·∫£o ph·∫ßn t·ª≠ kh√¥ng bao gi·ªù r·ªông h∆°n gi√° tr·ªã ƒë√£ cho.</li>
                    <li>Nh∆∞ng n√≥ s·∫Ω t·ª± ƒë·ªông co l·∫°i tr√™n c√°c m√†n h√¨nh nh·ªè h∆°n.</li>
                    <li>K·∫øt h·ª£p <code>max-width</code> v·ªõi <code>margin: auto</code> l√† c√°ch ph·ªï bi·∫øn ƒë·ªÉ t·∫°o v√† cƒÉn gi·ªØa
                        c√°c container ch√≠nh c·ªßa trang web.</li>
                </ul>
                <div class="code-block-container mt-6">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="maxWidthCode"><code>&lt;<span class="tag">style</span>&gt;
.container {
    max-width: 600px; /* R·ªông t·ªëi ƒëa 600px */
    margin: 20px auto; /* CƒÉn gi·ªØa container */
    padding: 20px;
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 8px;
}
&lt;/<span class="tag">style</span>&gt;
&lt;<span class="tag">div</span> class="container"&gt;
  &lt;h3&gt;Container Responsive&lt;/<span class="tag">h3</span>&gt;
  &lt;p&gt;H√£y th·ª≠ thay ƒë·ªïi k√≠ch th∆∞·ªõc c·ª≠a s·ªï tr√¨nh duy·ªát. N·ªôi dung n√†y s·∫Ω kh√¥ng bao gi·ªù r·ªông h∆°n 600px, nh∆∞ng n√≥ s·∫Ω co l·∫°i n·∫øu c·ª≠a s·ªï nh·ªè h∆°n.&lt;/<span class="tag">p</span>&gt;
&lt;/<span class="tag">div</span>&gt;
</code></pre>
                </div>
                <div class="html-output" id="maxWidthOutput"></div>
            </div>
        </div>

        <!-- Slide 9: Exercise Intro -->
        <div id="slide-9" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-teal-600 mb-6">8. B√†i t·∫≠p: N√¢ng c·∫•p trang Profile</h3>
                <p class="text-lg text-gray-700 mb-4">B√¢y gi·ªù, ch√∫ng ta s·∫Ω √°p d·ª•ng c√°c ki·∫øn th·ª©c v·ª´a h·ªçc ƒë·ªÉ "l·ªôt x√°c"
                    cho trang Profile ƒë√£ t·∫°o ·ªü bu·ªïi 1.</p>
                <div class="grid lg:grid-cols-2 gap-8 items-center">
                    <div>
                        <h4 class="text-2xl font-medium text-gray-700 mb-2">HTML g·ªëc t·ª´ Bu·ªïi 1:</h4>
                        <div class="code-block-container">
                            <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i>
                                    Copy</button></div>
                            <pre class="code-block" data-code-id="profileOriginalHtml"><code><span class="comment">&lt;!-- Ch√∫ng ta s·∫Ω b·∫Øt ƒë·∫ßu v·ªõi ƒëo·∫°n code n√†y --&gt;</span>
&lt;<span class="tag">h1</span>&gt;Hello, I'm John Doe&lt;/<span class="tag">h1</span>&gt;
&lt;<span class="tag">img</span> <span class="attr-name">src</span>=<span class="attr-value">"https://placehold.co/150"</span> <span class="attr-name">alt</span>=<span class="attr-value">"My profile picture"</span>&gt;
&lt;<span class="tag">p</span>&gt;I am a student passionate about web development. My hobbies include reading and playing games.&lt;/<span class="tag">p</span>&gt;
&lt;<span class="tag">h2</span>&gt;Contact Me:&lt;/<span class="tag">h2</span>&gt;
&lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span>&gt;Facebook&lt;/<span class="tag">a</span>&gt;
</code></pre>
                        </div>
                    </div>
                    <div>
                        <h4 class="text-2xl font-medium text-gray-700 mb-2">Th√†nh qu·∫£ mong mu·ªën:</h4>
                        <div class="html-output" id="profileFinalPreview"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 10: Exercise Step 1 -->
        <div id="slide-10" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-teal-600 mb-4">B√†i t·∫≠p - B∆∞·ªõc 1: T·∫°o Container</h3>
                <p class="text-lg text-gray-700 mb-4">ƒê·∫ßu ti√™n, b·ªçc to√†n b·ªô code HTML trong m·ªôt th·∫ª
                    <code>&lt;div&gt;</code> v·ªõi class <code>profile-container</code>. Sau ƒë√≥, d√πng CSS ƒë·ªÉ t·∫°o m·ªôt "t·∫•m
                    th·∫ª" v√† cƒÉn n√≥ ra gi·ªØa m√†n h√¨nh.
                </p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="profileStep1"><code><span class="comment">&lt;!-- CSS --&gt;</span>
&lt;<span class="tag">style</span>&gt;
  <span class="selector">body</span> {
    <span class="property">background-color</span>: <span class="css-value">#f3f4f6</span>; <span class="comment">/* Th√™m m√†u n·ªÅn cho ƒë·∫πp */</span>
    <span class="property">font-family</span>: <span class="css-value">'Inter', sans-serif</span>;
  }
  <span class="selector">.profile-container</span> {
    <span class="property">max-width</span>: <span class="css-value">600px</span>;
    <span class="property">margin</span>: <span class="css-value">40px auto</span>; <span class="comment">/* 40px tr√™n d∆∞·ªõi, auto tr√°i ph·∫£i ƒë·ªÉ cƒÉn gi·ªØa */</span>
    <span class="property">background-color</span>: <span class="css-value">white</span>;
    <span class="property">border-radius</span>: <span class="css-value">15px</span>;
    <span class="property">box-shadow</span>: <span class="css-value">0 5px 15px rgba(0,0,0,0.05)</span>;
  }
&lt;/<span class="tag">style</span>&gt;

<span class="comment">&lt;!-- HTML --&gt;</span>
&lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-container"</span>&gt;
    &lt;<span class="tag">h1</span>&gt;Hello, I'm John Doe&lt;/<span class="tag">h1</span>&gt;
    &lt;<span class="tag">img</span> <span class="attr-name">src</span>=<span class="attr-value">"https://placehold.co/150"</span> <span class="attr-name">alt</span>=<span class="attr-value">"My profile picture"</span>&gt;
    &lt;<span class="tag">p</span>&gt;I am a student passionate about web development...&lt;/<span class="tag">p</span>&gt;
    &lt;<span class="tag">h2</span>&gt;Contact Me:&lt;/<span class="tag">h2</span>&gt;
    &lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span>&gt;Facebook&lt;/<span class="tag">a</span>&gt;
&lt;/<span class="tag">div</span>&gt;
</code></pre>
                </div>
                <div class="html-output" id="profileStep1Output"></div>
            </div>
        </div>

        <!-- Slide 11: Exercise Step 2 -->
        <div id="slide-11" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-teal-600 mb-4">B√†i t·∫≠p - B∆∞·ªõc 2: Th√™m Padding & CƒÉn ch·ªânh n·ªôi
                    dung</h3>
                <p class="text-lg text-gray-700 mb-4">N·ªôi dung ƒëang d√≠nh s√°t v√†o m√©p th·∫ª. H√£y th√™m <code>padding</code>
                    cho container. ƒê·ªìng th·ªùi, cƒÉn gi·ªØa to√†n b·ªô n·ªôi dung b·∫±ng <code>text-align: center</code>.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="profileStep2"><code><span class="comment">&lt;!-- To√†n b·ªô code cho B∆∞·ªõc 2 --&gt;</span>
&lt;<span class="tag">style</span>&gt;
  <span class="selector">body</span> { 
    <span class="property">background-color</span>: <span class="css-value">#f3f4f6</span>; 
    <span class="property">font-family</span>: <span class="css-value">'Inter'</span>, <span class="css-value">sans-serif</span>; 
  }
  <span class="selector">.profile-container</span> {
    <span class="property">max-width</span>: <span class="css-value">600px</span>;
    <span class="property">margin</span>: <span class="css-value">40px auto</span>;
    <span class="property">background-color</span>: <span class="css-value">white</span>;
    <span class="property">border-radius</span>: <span class="css-value">15px</span>;
    <span class="property">box-shadow</span>: <span class="css-value">0 5px 15px rgba(0,0,0,0.05)</span>;
    <span class="comment">/* -- TH√äM M·ªöI -- */</span>
    <span class="property">padding</span>: <span class="css-value">40px</span>;
    <span class="property">text-align</span>: <span class="css-value">center</span>;
    <span class="property">box-sizing</span>: <span class="css-value">border-box</span>; <span class="comment">/* ƒê·∫£m b·∫£o padding kh√¥ng l√†m tƒÉng width */</span>
  }
&lt;/<span class="tag">style</span>&gt;

<span class="comment">&lt;!-- HTML --&gt;</span>
&lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-container"</span>&gt;
    &lt;<span class="tag">h1</span>&gt;Hello, I'm John Doe&lt;/<span class="tag">h1</span>&gt;
    &lt;<span class="tag">img</span> <span class="attr-name">src</span>=<span class="attr-value">"https://placehold.co/150"</span> <span class="attr-name">alt</span>=<span class="attr-value">"My profile picture"</span>&gt;
    &lt;<span class="tag">p</span>&gt;I am a student passionate about web development. My hobbies include reading and playing games.&lt;/<span class="tag">p</span>&gt;
    &lt;<span class="tag">h2</span>&gt;Contact Me:&lt;/<span class="tag">h2</span>&gt;
    &lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span>&gt;Facebook&lt;/<span class="tag">a</span>&gt;
&lt;/<span class="tag">div</span>&gt;
</code></pre>
                </div>
                <div class="html-output" id="profileStep2Output"></div>
            </div>
        </div>

        <!-- Slide 12: Exercise Step 3 -->
        <div id="slide-12" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-teal-600 mb-4">B√†i t·∫≠p - B∆∞·ªõc 3: Ho√†n thi·ªán ·∫¢nh & Ch·ªØ</h3>
                <p class="text-lg text-gray-700 mb-4">B√¢y gi·ªù, h√£y style ri√™ng cho t·ª´ng ph·∫ßn t·ª≠ b√™n trong: bi·∫øn ·∫£nh ƒë·∫°i
                    di·ªán th√†nh h√¨nh tr√≤n v√† t·∫°o kho·∫£ng c√°ch h·ª£p l√Ω cho c√°c ƒëo·∫°n vƒÉn b·∫£n.</p>
                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="profileStep3"><code><span class="comment">&lt;!-- To√†n b·ªô code cho B∆∞·ªõc 3 --&gt;</span>
&lt;<span class="tag">style</span>&gt;
  <span class="selector">body</span> { <span class="property">background-color</span>:<span class="css-value">#f3f4f6</span>; <span class="property">font-family</span>:<span class="css-value">'Inter', sans-serif</span>; }
  <span class="selector">.profile-container</span> {
    <span class="property">max-width</span>: <span class="css-value">600px</span>; <span class="property">margin</span>:<span class="css-value">40px auto</span>;
    <span class="property">background</span>:<span class="css-value">white</span>; <span class="property">border-radius</span>:<span class="css-value">15px</span>;
    <span class="property">box-shadow</span>:<span class="css-value">0 5px 15px rgba(0,0,0,0.05)</span>;
    <span class="property">padding</span>:<span class="css-value">40px</span>; <span class="property">text-align</span>:<span class="css-value">center</span>;
    <span class="property">box-sizing</span>:<span class="css-value">border-box</span>;
  }
  <span class="comment">/* -- TH√äM M·ªöI -- */</span>
  <span class="selector">.profile-picture</span> {
    <span class="property">width</span>: <span class="css-value">150px</span>; <span class="property">height</span>:<span class="css-value">150px</span>;
    <span class="property">border-radius</span>: <span class="css-value">50%</span>; <span class="comment">/* ƒê√¢y l√† ch√¨a kh√≥a ƒë·ªÉ t·∫°o ·∫£nh tr√≤n */</span>
    <span class="property">border</span>: <span class="css-value">5px solid #4f46e5</span>;
    <span class="property">object-fit</span>: <span class="css-value">cover</span>; <span class="property">margin-bottom</span>:<span class="css-value">20px</span>;
  }
  <span class="selector">.profile-name</span> {
    <span class="property">font-size</span>: <span class="css-value">2rem</span>; <span class="property">margin</span>:<span class="css-value">0 0 10px 0</span>;
  }
  <span class="selector">.profile-bio</span> {
    <span class="property">color</span>: <span class="css-value">#4b5563</span>; <span class="property">margin-bottom</span>:<span class="css-value">25px</span>;
  }
&lt;/<span class="tag">style</span>&gt;

<span class="comment">&lt;!-- HTML v·ªõi c√°c class ƒë√£ ƒë∆∞·ª£c th√™m --&gt;</span>
&lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-container"</span>&gt;
  &lt;<span class="tag">img</span> <span class="attr-name">src</span>=<span class="attr-value">"https://placehold.co/150"</span> <span class="attr-name">alt</span>=<span class="attr-value">"Profile"</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-picture"</span>&gt;
  &lt;<span class="tag">h1</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-name"</span>&gt;Hello, I'm John Doe&lt;/<span class="tag">h1</span>&gt;
  &lt;<span class="tag">p</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-bio"</span>&gt;I am a student passionate about web development. My hobbies include reading and playing games.&lt;/<span class="tag">p</span>&gt;
  &lt;<span class="tag">h2</span>&gt;Contact Me:&lt;/<span class="tag">h2</span>&gt;
  &lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span>&gt;Facebook&lt;/<span class="tag">a</span>&gt;
&lt;/<span class="tag">div</span>&gt;
</code></pre>
                </div>
                <div class="html-output" id="profileStep3Output"></div>
            </div>
        </div>

        <!-- Slide 13: Final Exercise & Code -->
        <div id="slide-13" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-3xl font-semibold text-teal-600 mb-4">B√†i t·∫≠p - B∆∞·ªõc 4: Ho√†n Thi·ªán (Code ƒë·∫ßy ƒë·ªß)</h3>
                <p class="text-lg text-gray-700 mb-4">Cu·ªëi c√πng, thay th·∫ø c√°c li√™n k·∫øt vƒÉn b·∫£n b·∫±ng c√°c icon m·∫°ng x√£ h·ªôi
                    t·ª´ Font Awesome ƒë·ªÉ trang profile tr√¥ng chuy√™n nghi·ªáp h∆°n.</p>
                <div class="grid lg:grid-cols-2 gap-8">
                    <div class="code-block-container">
                        <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i>
                                Copy</button></div>
                        <pre class="code-block" data-code-id="profileFinalCode"><code>&lt;<span class="tag">style</span>&gt;
  <span class="selector">body</span> { <span class="property">background</span>:<span class="css-value">#f3f4f6</span>; <span class="property">font-family</span>:<span class="css-value">'Inter'</span>; }
  <span class="selector">.profile-container</span> {
    <span class="property">max-width</span>: <span class="css-value">600px</span>; <span class="property">margin</span>: <span class="css-value">40px auto</span>;
    <span class="property">background</span>: <span class="css-value">white</span>; <span class="property">border-radius</span>: <span class="css-value">15px</span>;
    <span class="property">box-shadow</span>: <span class="css-value">0 5px 15px rgba(0,0,0,0.05)</span>;
    <span class="property">padding</span>: <span class="css-value">40px</span>; <span class="property">text-align</span>: <span class="css-value">center</span>;
    <span class="property">box-sizing</span>: <span class="css-value">border-box</span>;
  }
  <span class="selector">.profile-picture</span> {
    <span class="property">width</span>: <span class="css-value">150px</span>; <span class="property">height</span>: <span class="css-value">150px</span>;
    <span class="property">border-radius</span>: <span class="css-value">50%</span>; <span class="property">border</span>: <span class="css-value">5px solid #4f46e5</span>;
    <span class="property">object-fit</span>: <span class="css-value">cover</span>; <span class="property">margin-bottom</span>: <span class="css-value">20px</span>;
  }
  <span class="selector">.profile-name</span> { <span class="property">font-size</span>: <span class="css-value">2rem</span>; <span class="property">margin</span>: <span class="css-value">0 0 10px</span>; }
  <span class="selector">.profile-bio</span> { <span class="property">color</span>: <span class="css-value">#4b5563</span>; <span class="property">margin-bottom</span>: <span class="css-value">25px</span>; }
  <span class="selector">.social-links a</span> {
    <span class="property">color</span>: <span class="css-value">#4f46e5</span>; <span class="property">text-decoration</span>: <span class="css-value">none</span>;
    <span class="property">margin</span>: <span class="css-value">0 15px</span>; <span class="property">font-size</span>: <span class="css-value">1.5rem</span>;
  }
&lt;/<span class="tag">style</span>&gt;

&lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-container"</span>&gt;
  &lt;<span class="tag">img</span> <span class="attr-name">src</span>=<span class="attr-value">"https://placehold.co/150"</span> <span class="attr-name">alt</span>=<span class="attr-value">"Profile"</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-picture"</span>&gt;
  &lt;<span class="tag">h1</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-name"</span>&gt;Nguy·ªÖn VƒÉn A&lt;/<span class="tag">h1</span>&gt;
  &lt;<span class="tag">p</span> <span class="attr-name">class</span>=<span class="attr-value">"profile-bio"</span>&gt;Web Developer ƒëam m√™ h·ªçc h·ªèi c√¥ng ngh·ªá m·ªõi v√† x√¢y d·ª±ng c√°c ·ª©ng d·ª•ng web h·ªØu √≠ch.&lt;/<span class="tag">p</span>&gt;
  &lt;<span class="tag">div</span> <span class="attr-name">class</span>=<span class="attr-value">"social-links"</span>&gt;
    &lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span>&gt;&lt;<span class="tag">i</span> <span class="attr-name">class</span>=<span class="attr-value">"fab fa-github"</span>&gt;&lt;/<span class="tag">i</span>&gt;&lt;/<span class="tag">a</span>&gt;
    &lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span>&gt;&lt;<span class="tag">i</span> <span class="attr-name">class</span>=<span class="attr-value">"fab fa-linkedin"</span>&gt;&lt;/<span class="tag">i</span>&gt;&lt;/<span class="tag">a</span>&gt;
    &lt;<span class="tag">a</span> <span class="attr-name">href</span>=<span class="attr-value">"#"</span>&gt;&lt;<span class="tag">i</span> <span class="attr-name">class</span>=<span class="attr-value">"fab fa-facebook"</span>&gt;&lt;/<span class="tag">i</span>&gt;&lt;/<span class="tag">a</span>&gt;
  &lt;/<span class="tag">div</span>&gt;
&lt;/<span class="tag">div</span>&gt;
</code></pre>
                    </div>
                    <div>
                        <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£ cu·ªëi c√πng:</h4>
                        <div class="html-output" id="profileFinalOutput"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 14: Summary -->
        <div id="slide-14" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-teal-700 mb-8">T·ªïng k·∫øt Session 3</h2>
                <div class="text-xl text-gray-700 space-y-5 max-w-4xl text-left bg-gray-50 p-8 rounded-lg shadow">
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>B·∫°n ƒë√£ hi·ªÉu r√µ v·ªÅ <strong>CSS Box
                            Model</strong> (Content, Padding, Border, Margin).</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>Bi·∫øt c√°ch d√πng v√† c√°c c√∫ ph√°p vi·∫øt t·∫Øt c·ªßa
                        <code>padding</code> v√† <code>margin</code>.
                    </p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>Hi·ªÉu ƒë∆∞·ª£c t·∫ßm quan tr·ªçng c·ªßa
                        <strong>`box-sizing: border-box;`</strong> trong vi·ªác t√≠nh to√°n k√≠ch th∆∞·ªõc.
                    </p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>Bi·∫øt c√°ch d√πng <code>max-width</code> ƒë·ªÉ
                        t·∫°o container responsive.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>√Åp d·ª•ng t·∫•t c·∫£ ki·∫øn th·ª©c tr√™n ƒë·ªÉ x√¢y d·ª±ng
                        c√°c th√†nh ph·∫ßn UI th·ª±c t·∫ø.</p>
                </div>
                <div
                    class="mt-12 bg-green-100 border-l-4 border-green-500 text-green-700 p-6 rounded-r-lg shadow-lg w-full max-w-4xl">
                    <h4 class="text-2xl font-bold mb-2">H·∫πn g·∫∑p l·∫°i ·ªü Session 4!</h4>
                    <p class="text-lg">Ch√∫ng ta s·∫Ω kh√°m ph√° c√°c k·ªπ thu·∫≠t layout hi·ªán ƒë·∫°i v√† m·∫°nh m·∫Ω h∆°n v·ªõi
                        <strong>Flexbox</strong>!
                    </p>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Khai b√°o c√°c bi·∫øn DOM
            const slides = Array.from(document.querySelectorAll('.slide'));
            const prevButton = document.getElementById('prevSlide');
            const nextButton = document.getElementById('nextSlide');
            const currentSlideNumDisplay = document.getElementById('currentSlideNum');
            const totalSlidesNumDisplay = document.getElementById('totalSlidesNum');

            let currentSlide = 0;
            if (totalSlidesNumDisplay) {
                totalSlidesNumDisplay.textContent = slides.length || '0';
            }

            // H√†m hi·ªÉn th·ªã slide hi·ªán t·∫°i v√† ·∫©n c√°c slide kh√°c
            function showSlide(index) {
                slides.forEach((slide, i) => {
                    slide.classList.remove('active');
                    if (i === index) {
                        slide.style.display = 'flex';
                        // Th√™m m·ªôt ch√∫t delay ƒë·ªÉ hi·ªáu ·ª©ng transition ho·∫°t ƒë·ªông
                        setTimeout(() => slide.classList.add('active'), 10);
                    } else {
                        // Delay vi·ªác ·∫©n slide ƒë·ªÉ hi·ªáu ·ª©ng fade-out k·ªãp th·ª±c hi·ªán
                        setTimeout(() => {
                            if (!slide.classList.contains('active')) slide.style.display = 'none';
                        }, 400);
                    }
                });
                if (currentSlideNumDisplay) {
                    currentSlideNumDisplay.textContent = index + 1;
                }
                updateNavButtons();
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }

            // H√†m c·∫≠p nh·∫≠t tr·∫°ng th√°i c·ªßa n√∫t ƒëi·ªÅu h∆∞·ªõng
            function updateNavButtons() {
                if (!prevButton || !nextButton) return;
                prevButton.disabled = currentSlide === 0;
                nextButton.disabled = currentSlide === slides.length - 1;
            }

            // H√†m sao ch√©p code, s·ª≠ d·ª•ng ph∆∞∆°ng th·ª©c c≈© ƒë·ªÉ t∆∞∆°ng th√≠ch t·ªët h∆°n
            function copyCode(buttonElement) {
                const codeBlock = buttonElement.closest('.code-block-container').querySelector('pre.code-block');
                if (!codeBlock) return;

                const codeToCopy = codeBlock.innerText;
                const textarea = document.createElement('textarea');
                textarea.value = codeToCopy;
                document.body.appendChild(textarea);
                textarea.select();
                try {
                    document.execCommand('copy');
                    const originalIcon = buttonElement.innerHTML;
                    buttonElement.innerHTML = '<i class="fas fa-check"></i> Copied!';
                    setTimeout(() => {
                        buttonElement.innerHTML = originalIcon;
                    }, 1500);
                } catch (err) {
                    console.error('Could not copy text: ', err);
                }
                document.body.removeChild(textarea);
            }

            // H√†m hi·ªÉn th·ªã code v√≠ d·ª• ra v√πng output
            function renderHtml(codeString, outputEl) {
                if (!outputEl) return;
                let styleContent = '';
                const styleMatch = codeString.match(/<style>([\s\S]*?)<\/style>/i);
                if (styleMatch) styleContent = styleMatch[1];

                let bodyContent = codeString.replace(/<style>([\s\S]*?)<\/style>/i, '').trim();
                let fontAwesome = bodyContent.includes('fab fa-') ? `<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">` : '';

                outputEl.innerHTML = '';
                const shadow = outputEl.attachShadow({ mode: 'open' });
                shadow.innerHTML = `<style>${styleContent}</style>${fontAwesome}<div style="font-family: 'Inter', sans-serif;">${bodyContent}</div>`;
            }

            // H√†m helper ƒë·ªÉ render v√≠ d·ª• t·ª´ m·ªôt code block
            function renderExample(codeBlockId, outputId) {
                const codeBlockEl = document.querySelector(`[data-code-id="${codeBlockId}"]`);
                const outputEl = document.getElementById(outputId);
                if (!codeBlockEl || !outputEl) return;

                renderHtml(codeBlockEl.innerText, outputEl);
            }

            // --- B·∫ÆT ƒê·∫¶U HI·ªÇN TH·ªä V√ç D·ª§ ---
            // ƒê·∫∑t t·∫•t c·∫£ c√°c l·ªánh render trong try...catch ƒë·ªÉ ƒë·∫£m b·∫£o n·∫øu c√≥ l·ªói,
            // c√°c n√∫t ƒëi·ªÅu h∆∞·ªõng v·∫´n ho·∫°t ƒë·ªông.
            try {
                // Render c√°c v√≠ d·ª• c∆° b·∫£n
                renderExample('marginCode', 'marginOutput');
                renderExample('paddingCode', 'paddingOutput');
                renderExample('shorthandCode', 'shorthandOutput');
                renderExample('borderCode', 'borderOutput');
                renderExample('boxSizingCode', 'boxSizingOutput');
                renderExample('maxWidthCode', 'maxWidthOutput');

                // Render c√°c b∆∞·ªõc c·ªßa b√†i t·∫≠p Profile
                renderExample('profileFinalCode', 'profileFinalPreview');
                renderExample('profileStep1', 'profileStep1Output');
                renderExample('profileStep2', 'profileStep2Output');
                renderExample('profileStep3', 'profileStep3Output');
                renderExample('profileFinalCode', 'profileFinalOutput');
            } catch (e) {
                console.error("L·ªói nghi√™m tr·ªçng khi hi·ªÉn th·ªã v√≠ d·ª•, c√°c n√∫t ƒëi·ªÅu h∆∞·ªõng c√≥ th·ªÉ b·ªã ·∫£nh h∆∞·ªüng:", e);
            }
            // --- K·∫æT TH√öC HI·ªÇN TH·ªä V√ç D·ª§ ---


            // G√°n s·ª± ki·ªán cho c√°c n√∫t ƒëi·ªÅu h∆∞·ªõng
            if (prevButton && nextButton) {
                prevButton.addEventListener('click', () => {
                    if (currentSlide > 0) {
                        currentSlide--;
                        showSlide(currentSlide);
                    }
                });

                nextButton.addEventListener('click', () => {
                    if (currentSlide < slides.length - 1) {
                        currentSlide++;
                        showSlide(currentSlide);
                    }
                });
            }

            // G√°n s·ª± ki·ªán cho c√°c n√∫t sao ch√©p
            document.querySelectorAll('.copy-button').forEach(button => {
                button.addEventListener('click', () => copyCode(button));
            });

            // Hi·ªÉn th·ªã slide ƒë·∫ßu ti√™n khi t·∫£i trang
            if (slides.length > 0) {
                showSlide(currentSlide);
            }
        });
    </script>
</body>

</html>

/* ===== Web Basic/lesson4.html ===== */
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bu·ªïi 4: CSS Flexbox</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            scroll-behavior: smooth;
            background-color: #f3f4f6;
        }

        #navbar {
            position: sticky;
            top: 0;
            z-index: 50;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .slide-container {
            padding-top: 1rem;
        }

        .slide {
            background-color: white;
            padding: 2.5rem;
            border-radius: 0.75rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            margin-bottom: 2rem;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
            min-height: calc(100vh - 120px);
            display: none;
            flex-direction: column;
        }

        .slide.active {
            display: flex;
            opacity: 1;
            transform: translateY(0);
        }

        .slide-content-wrapper {
            flex-grow: 1;
        }

        .code-block-container {
            position: relative;
            background-color: #1e293b;
            border-radius: 0.5rem;
            margin-top: 1rem;
            margin-bottom: 1rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .code-block-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.5rem 0.75rem;
            background-color: #334155;
            border-top-left-radius: 0.5rem;
            border-top-right-radius: 0.5rem;
        }

        .file-name {
            color: #e2e8f0;
            font-size: 0.875rem;
            font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
        }

        .copy-button {
            background-color: #4a5568;
            color: #e2e8f0;
            border: none;
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            cursor: pointer;
            font-size: 0.875rem;
            transition: background-color 0.2s;
        }

        .copy-button:hover {
            background-color: #718096;
        }

        .copy-button .fa-copy {
            margin-right: 0.375rem;
        }

        .copy-button .fa-check {
            margin-right: 0.375rem;
            color: #48bb78;
        }


        .code-block {
            background-color: #1e293b;
            color: #e2e8f0;
            padding: 1.5rem;
            border-bottom-left-radius: 0.5rem;
            border-bottom-right-radius: 0.5rem;
            font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
            white-space: pre-wrap;
            word-wrap: break-word;
            font-size: 0.875em;
            line-height: 1.6;
            overflow-x: auto;
        }

        .html-output {
            border: 1px solid #e2e8f0;
            padding: 1.5rem;
            margin-top: 1rem;
            border-radius: 0.5rem;
            background-color: #f7fafc;
            min-height: 100px;
            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);
        }

        .flex-demo-container {
            display: flex;
            background-color: #f0f9ff;
            border-radius: 8px;
            padding: 1rem;
            min-height: 150px;
            border: 2px dashed #0ea5e9;
        }

        .flex-demo-container>div {
            background-color: #0ea5e9;
            color: white;
            padding: 1rem;
            margin: 0.5rem;
            border-radius: 6px;
            text-align: center;
            font-weight: bold;
            flex-grow: 0;
            flex-shrink: 0;
        }
    </style>
</head>

<body class="text-gray-800">

    <nav id="navbar" class="p-4">
        <div class="container mx-auto flex flex-wrap justify-between items-center">
            <h1 class="text-xl font-bold text-indigo-600">L·∫≠p Tr√¨nh Web - Bu·ªïi 4</h1>
            <div class="flex items-center mt-2 sm:mt-0">
                <button id="prevSlide"
                    class="bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-lg shadow mr-2 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    <i class="fas fa-arrow-left mr-1"></i> Slide Tr∆∞·ªõc
                </button>
                <button id="nextSlide"
                    class="bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    Slide K·∫ø <i class="fas fa-arrow-right ml-1"></i>
                </button>
            </div>
            <div class="text-sm text-gray-600 mt-2 sm:mt-0 ml-0 sm:ml-4">
                Slide <span id="currentSlideNum">1</span> / <span id="totalSlidesNum"></span>
            </div>
        </div>
    </nav>

    <div class="container mx-auto p-4 slide-container">
        <!-- Slide 1: Title -->
        <div id="slide-1" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-indigo-700 mb-6">Bu·ªïi 4: CSS Flexbox</h2>
                <p class="text-2xl text-gray-600 mb-12">L√†m ch·ªß k·ªπ thu·∫≠t s·∫Øp x·∫øp layout hi·ªán ƒë·∫°i</p>
                <img src="https://placehold.co/600x350/6366F1/FFFFFF?text=Flexbox" alt="[H√¨nh ·∫£nh v·ªÅ CSS Flexbox]"
                    class="rounded-lg shadow-xl max-w-2xl">
                <p class="mt-10 text-xl text-gray-700">H√£y c√πng t√¨m hi·ªÉu c√°ch ph√¢n chia b·ªë c·ª•c trang web m·ªôt c√°ch linh
                    ho·∫°t!</p>
            </div>
        </div>

        <!-- Slide 2: External CSS -->
        <div id="slide-2" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6">1. External CSS - S·ª≠ d·ª•ng file CSS ri√™ng</h3>
                <p class="text-lg text-gray-700 mb-4">Thay v√¨ vi·∫øt CSS tr·ª±c ti·∫øp trong th·∫ª <code>&lt;style&gt;</code>,
                    ch√∫ng ta n√™n t·∫°o m·ªôt file CSS ri√™ng (v√≠ d·ª•: <code>styles.css</code>) v√† li√™n k·∫øt n√≥ v·ªõi file HTML.
                </p>
                <h4 class="text-2xl font-medium text-gray-800 mb-3 mt-5">L·ª£i √≠ch:</h4>
                <ul class="list-disc list-inside pl-4 text-gray-700 space-y-3 text-lg">
                    <li><strong>D·ªÖ b·∫£o tr√¨:</strong> Qu·∫£n l√Ω code CSS t·∫≠p trung t·∫°i m·ªôt n∆°i.</li>
                    <li><strong>T√°i s·ª≠ d·ª•ng:</strong> M·ªôt file CSS c√≥ th·ªÉ ƒë∆∞·ª£c d√πng cho nhi·ªÅu trang HTML.</li>
                    <li><strong>TƒÉng t·ªëc ƒë·ªô t·∫£i trang:</strong> Tr√¨nh duy·ªát c√≥ th·ªÉ l∆∞u file CSS v√†o b·ªô nh·ªõ ƒë·ªám (cache).
                    </li>
                </ul>
                <h4 class="text-2xl font-medium text-gray-800 mb-3 mt-6">C√°ch th·ª±c hi·ªán:</h4>
                <p class="text-lg text-gray-700 mb-4">Trong file HTML, ƒë·∫∑t th·∫ª <code>&lt;link&gt;</code> b√™n trong th·∫ª
                    <code>&lt;head&gt;</code>.
                </p>
                <div class="code-block-container">
                    <div class="code-block-header"><span class="file-name">index.html</span><button
                            class="copy-button"><i class="far fa-copy"></i> Copy</button></div>
                    <pre class="code-block" data-code-id="externalCssHtml"><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;Trang c·ªßa t√¥i&lt;/title&gt;
  &lt;link rel="stylesheet" href="styles.css"&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Xin ch√†o th·∫ø gi·ªõi!&lt;/h1&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
                </div>
                <div class="code-block-container">
                    <div class="code-block-header"><span class="file-name">styles.css</span><button
                            class="copy-button"><i class="far fa-copy"></i> Copy</button></div>
                    <pre class="code-block" data-code-id="externalCssCss"><code>body {
  background-color: #f0f4f8;
  font-family: sans-serif;
}

h1 {
  color: #3b82f6;
  text-align: center;
}</code></pre>
                </div>
            </div>
        </div>

        <!-- Slide 3: Intro to Flexbox -->
        <div id="slide-3" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6">2. Gi·ªõi thi·ªáu v·ªÅ Flexbox</h3>
                <p class="text-lg text-gray-700 mb-4">Flexbox (Flexible Box Layout) l√† m·ªôt m√¥ h√¨nh layout trong CSS cho
                    ph√©p c√°c item trong m·ªôt container ƒë∆∞·ª£c s·∫Øp x·∫øp v√† ph√¢n ph·ªëi kh√¥ng gian m·ªôt c√°ch linh ho·∫°t, ngay c·∫£
                    khi k√≠ch th∆∞·ªõc c·ªßa ch√∫ng kh√¥ng x√°c ƒë·ªãnh ho·∫∑c thay ƒë·ªïi.</p>
                <p class="text-lg text-gray-700 mb-6">Flexbox ho·∫°t ƒë·ªông d·ª±a tr√™n hai th√†nh ph·∫ßn ch√≠nh:</p>
                <div class="grid md:grid-cols-2 gap-8 text-lg">
                    <div class="bg-blue-50 p-6 rounded-lg border border-blue-200">
                        <h4 class="text-2xl font-bold text-blue-800 mb-2">Flex Container</h4>
                        <p>L√† ph·∫ßn t·ª≠ "cha" bao b·ªçc c√°c item. B·∫°n k√≠ch ho·∫°t Flexbox b·∫±ng c√°ch ƒë·∫∑t thu·ªôc t√≠nh
                            <code>display: flex;</code> cho container n√†y.
                        </p>
                    </div>
                    <div class="bg-purple-50 p-6 rounded-lg border border-purple-200">
                        <h4 class="text-2xl font-bold text-purple-800 mb-2">Flex Items</h4>
                        <p>L√† c√°c ph·∫ßn t·ª≠ "con" n·∫±m tr·ª±c ti·∫øp b√™n trong flex container. Ch√∫ng s·∫Ω ƒë∆∞·ª£c s·∫Øp x·∫øp theo c√°c
                            quy t·∫Øc c·ªßa Flexbox.</p>
                    </div>
                </div>
                <div class="mt-8 p-4 bg-gray-100 rounded-lg text-center">
                    <img src="https://placehold.co/700x250/E0E7FF/4F46E5?text=Flex+Container+%26+Items"
                        alt="[S∆° ƒë·ªì Flex Container v√† Flex Items]" class="mx-auto rounded-md shadow-md">
                </div>
            </div>
        </div>

        <!-- Slide 4: Flex Container - display & flex-direction -->
        <div id="slide-4" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6">3. Thu·ªôc t√≠nh c·ªßa Flex Container</h3>
                <h4 class="text-2xl font-medium text-gray-800 mb-3">display: flex</h4>
                <p class="text-lg text-gray-700 mb-6">ƒê√¢y l√† thu·ªôc t√≠nh quan tr·ªçng nh·∫•t ƒë·ªÉ b·∫Øt ƒë·∫ßu. N√≥ bi·∫øn m·ªôt ph·∫ßn t·ª≠
                    th√†nh flex container.</p>

                <h4 class="text-2xl font-medium text-gray-800 mb-3">flex-direction: X√°c ƒë·ªãnh h∆∞·ªõng s·∫Øp x·∫øp</h4>
                <p class="text-lg text-gray-700 mb-4">Thu·ªôc t√≠nh n√†y thi·∫øt l·∫≠p tr·ª•c ch√≠nh (main axis), x√°c ƒë·ªãnh h∆∞·ªõng
                    c√°c flex item ƒë∆∞·ª£c x·∫øp v√†o trong flex container.</p>

                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="flexDirectionCode"><code>.container {
  display: flex;
  /* C√°c gi√° tr·ªã c√≥ th·ªÉ c√≥: */
  flex-direction: row; /* (m·∫∑c ƒë·ªãnh) S·∫Øp x·∫øp t·ª´ tr√°i sang ph·∫£i */
  /* flex-direction: row-reverse; */ /* T·ª´ ph·∫£i sang tr√°i */
  /* flex-direction: column; */      /* T·ª´ tr√™n xu·ªëng d∆∞·ªõi */
  /* flex-direction: column-reverse; */ /* T·ª´ d∆∞·ªõi l√™n tr√™n */
}</code></pre>
                </div>

                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">V√≠ d·ª•: <code>flex-direction: row;</code> (m·∫∑c
                    ƒë·ªãnh)</h4>
                <div class="html-output" id="flexDirectionRowOutput"></div>

                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">V√≠ d·ª•: <code>flex-direction: column;</code></h4>
                <div class="html-output" id="flexDirectionColumnOutput"></div>
            </div>
        </div>

        <!-- Slide 5: justify-content -->
        <div id="slide-5" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6">4. `justify-content`: CƒÉn ch·ªânh theo tr·ª•c ch√≠nh
                </h3>
                <p class="text-lg text-gray-700 mb-6">Thu·ªôc t√≠nh n√†y d√πng ƒë·ªÉ cƒÉn ch·ªânh c√°c flex item d·ªçc theo
                    <strong>tr·ª•c ch√≠nh</strong> (main axis) c·ªßa flex container. Tr·ª•c ch√≠nh ƒë∆∞·ª£c x√°c ƒë·ªãnh b·ªüi
                    <code>flex-direction</code>.
                </p>

                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="justifyContentCode"><code>.container {
  display: flex;
  /* flex-direction: row; (m·∫∑c ƒë·ªãnh) */

  /* CƒÉn l·ªÅ c√°c item */
  justify-content: flex-start; /* (m·∫∑c ƒë·ªãnh) D·ªìn v·ªÅ ƒë·∫ßu */
  /* justify-content: flex-end; */   /* D·ªìn v·ªÅ cu·ªëi */
  /* justify-content: center; */    /* CƒÉn gi·ªØa */
  /* justify-content: space-between; */ /* CƒÉn ƒë·ªÅu 2 b√™n, item ƒë·∫ßu v√† cu·ªëi s√°t l·ªÅ */
  /* justify-content: space-around; */  /* CƒÉn ƒë·ªÅu, kho·∫£ng c√°ch 2 b√™n m·ªói item b·∫±ng nhau */
  /* justify-content: space-evenly; */  /* CƒÉn ƒë·ªÅu, t·∫•t c·∫£ kho·∫£ng c√°ch b·∫±ng nhau */
}</code></pre>
                </div>

                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">V√≠ d·ª• t∆∞∆°ng t√°c:</h4>
                <div class="flex items-center space-x-2 mb-4">
                    <label for="justifyContentSelect">Ch·ªçn gi√° tr·ªã <code>justify-content</code>:</label>
                    <select id="justifyContentSelect" class="p-2 border rounded-md bg-white">
                        <option value="flex-start">flex-start</option>
                        <option value="flex-end">flex-end</option>
                        <option value="center">center</option>
                        <option value="space-between">space-between</option>
                        <option value="space-around">space-around</option>
                        <option value="space-evenly">space-evenly</option>
                    </select>
                </div>
                <div id="justifyContentDemoContainer" class="flex-demo-container" style="transition: all 0.3s ease;">
                    <div>1</div>
                    <div>2</div>
                    <div>3</div>
                </div>
            </div>
        </div>

        <!-- Slide 6: align-items -->
        <div id="slide-6" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6">5. `align-items`: CƒÉn ch·ªânh theo tr·ª•c ph·ª•</h3>
                <p class="text-lg text-gray-700 mb-6">Thu·ªôc t√≠nh n√†y d√πng ƒë·ªÉ cƒÉn ch·ªânh c√°c flex item d·ªçc theo
                    <strong>tr·ª•c ph·ª•</strong> (cross axis), l√† tr·ª•c vu√¥ng g√≥c v·ªõi tr·ª•c ch√≠nh.
                </p>

                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i> Copy</button>
                    </div>
                    <pre class="code-block" data-code-id="alignItemsCode"><code>.container {
  display: flex;
  height: 200px; /* C·∫ßn c√≥ chi·ªÅu cao ƒë·ªÉ th·∫•y hi·ªáu ·ª©ng */

  /* CƒÉn l·ªÅ c√°c item */
  align-items: stretch; /* (m·∫∑c ƒë·ªãnh) K√©o d√†i ƒë·ªÉ l·∫•p ƒë·∫ßy container */
  /* align-items: flex-start; */ /* D·ªìn v·ªÅ ph√≠a tr√™n */
  /* align-items: flex-end; */   /* D·ªìn v·ªÅ ph√≠a d∆∞·ªõi */
  /* align-items: center; */    /* CƒÉn gi·ªØa theo chi·ªÅu d·ªçc */
  /* align-items: baseline; */  /* CƒÉn theo ƒë∆∞·ªùng baseline c·ªßa vƒÉn b·∫£n */
}</code></pre>
                </div>

                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">V√≠ d·ª• t∆∞∆°ng t√°c:</h4>
                <div class="flex items-center space-x-2 mb-4">
                    <label for="alignItemsSelect">Ch·ªçn gi√° tr·ªã <code>align-items</code>:</label>
                    <select id="alignItemsSelect" class="p-2 border rounded-md bg-white">
                        <option value="stretch">stretch</option>
                        <option value="flex-start">flex-start</option>
                        <option value="flex-end">flex-end</option>
                        <option value="center">center</option>
                        <option value="baseline">baseline</option>
                    </select>
                </div>
                <div id="alignItemsDemoContainer" class="flex-demo-container"
                    style="height: 200px; transition: all 0.3s ease;">
                    <div style="padding-top: 1rem; padding-bottom: 1rem;">1</div>
                    <div style="padding-top: 2rem; padding-bottom: 2rem; font-size: 1.5rem;">2</div>
                    <div style="padding-top: 0.5rem; padding-bottom: 0.5rem;">3</div>
                </div>
            </div>
        </div>

        <!-- Slide 7: Example 1 - Navigation Bar -->
        <div id="slide-7" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6">6. V√≠ d·ª• 1: X√¢y d·ª±ng thanh ƒëi·ªÅu h∆∞·ªõng (Navbar)
                </h3>
                <p class="text-lg text-gray-700 mb-4">Flexbox l√† c√¥ng c·ª• ho√†n h·∫£o ƒë·ªÉ t·∫°o m·ªôt thanh ƒëi·ªÅu h∆∞·ªõng ƒë∆°n gi·∫£n,
                    v·ªõi logo b√™n tr√°i v√† c√°c li√™n k·∫øt b√™n ph·∫£i.</p>
                <div class="grid lg:grid-cols-2 gap-6">
                    <div>
                        <div class="code-block-container">
                            <div class="code-block-header"><span class="file-name">HTML</span><button
                                    class="copy-button"><i class="far fa-copy"></i> Copy</button></div>
                            <pre class="code-block" data-code-id="navHtml"><code>&lt;nav class="navbar"&gt;
  &lt;div class="logo"&gt;Logo&lt;/div&gt;
  &lt;ul class="nav-links"&gt;
    &lt;li&gt;&lt;a href="#"&gt;Trang ch·ªß&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="#"&gt;S·∫£n ph·∫©m&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="#"&gt;Li√™n h·ªá&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;</code></pre>
                        </div>
                        <div class="code-block-container">
                            <div class="code-block-header"><span class="file-name">CSS</span><button
                                    class="copy-button"><i class="far fa-copy"></i> Copy</button></div>
                            <pre class="code-block" data-code-id="navCss"><code>.navbar {
  display: flex;
  justify-content: space-between; /* ƒê·∫©y logo v√† nav-links ra 2 ph√≠a */
  align-items: center; /* CƒÉn gi·ªØa theo chi·ªÅu d·ªçc */
  background-color: #4338ca;
  padding: 1rem 2rem;
  border-radius: 8px;
  color: white;
}
.logo { font-size: 1.5rem; font-weight: bold; }
.nav-links {
  display: flex;
  list-style: none; /* B·ªè d·∫•u ch·∫•m c·ªßa li */
  padding: 0;
  margin: 0;
}
.nav-links li { margin-left: 1.5rem; }
.nav-links a { color: white; text-decoration: none; }</code></pre>
                        </div>
                    </div>
                    <div>
                        <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£:</h4>
                        <div class="html-output" id="navOutput"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 8: Example 2 - Card Layout -->
        <div id="slide-8" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-indigo-600 mb-6">7. V√≠ d·ª• 2: D√†n trang c√°c th·∫ª (Card Layout)</h3>
                <p class="text-lg text-gray-700 mb-4">S·ª≠ d·ª•ng <code>flex-wrap: wrap;</code> ƒë·ªÉ c√°c item t·ª± ƒë·ªông xu·ªëng
                    h√†ng khi kh√¥ng ƒë·ªß kh√¥ng gian, t·∫°o ra m·ªôt layout responsive.</p>
                <div class="grid lg:grid-cols-2 gap-6">
                    <div>
                        <div class="code-block-container">
                            <div class="code-block-header"><span class="file-name">HTML</span><button
                                    class="copy-button"><i class="far fa-copy"></i> Copy</button></div>
                            <pre class="code-block" data-code-id="cardHtml"><code>&lt;div class="card-container"&gt;
  &lt;div class="card"&gt;Th·∫ª 1&lt;/div&gt;
  &lt;div class="card"&gt;Th·∫ª 2&lt;/div&gt;
  &lt;div class="card"&gt;Th·∫ª 3&lt;/div&gt;
  &lt;div class="card"&gt;Th·∫ª 4&lt;/div&gt;
&lt;/div&gt;</code></pre>
                        </div>
                        <div class="code-block-container">
                            <div class="code-block-header"><span class="file-name">CSS</span><button
                                    class="copy-button"><i class="far fa-copy"></i> Copy</button></div>
                            <pre class="code-block" data-code-id="cardCss"><code>.card-container {
  display: flex;
  flex-wrap: wrap; /* Cho ph√©p c√°c item xu·ªëng h√†ng */
  gap: 1rem; /* T·∫°o kho·∫£ng c√°ch gi·ªØa c√°c card */
}
.card {
  background-color: #ecfdf5;
  border: 1px solid #10b981;
  border-radius: 8px;
  padding: 2rem;
  text-align: center;
  /* flex: 1 1 200px; */ /* Vi·∫øt t·∫Øt cho flex-grow, flex-shrink, flex-basis */
  flex-grow: 1; /* Cho ph√©p th·∫ª co gi√£n ƒë·ªÉ l·∫•p ƒë·∫ßy kh√¥ng gian */
  min-width: 200px; /* Chi·ªÅu r·ªông t·ªëi thi·ªÉu c·ªßa m·ªói th·∫ª */
}</code></pre>
                        </div>
                    </div>
                    <div>
                        <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£ (th·ª≠ thay ƒë·ªïi k√≠ch th∆∞·ªõc c·ª≠a
                            s·ªï):</h4>
                        <div class="html-output" id="cardOutput"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 9: Flexbox Froggy -->
        <div id="slide-9" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-4xl font-bold text-emerald-600 mb-6">8. Luy·ªán t·∫≠p v·ªõi Flexbox Froggy!</h2>
                <p class="text-2xl text-gray-600 mb-8 max-w-3xl">C√°ch t·ªët nh·∫•t ƒë·ªÉ th√†nh th·∫°o Flexbox l√† th·ª±c h√†nh. H√£y
                    ch∆°i tr√≤ ch∆°i Flexbox Froggy ƒë·ªÉ c·ªßng c·ªë ki·∫øn th·ª©c m·ªôt c√°ch vui nh·ªôn!</p>
                <a href="https://flexboxfroggy.com/" target="_blank" class="mb-8 block">
                    <img src="https://placehold.co/700x400/22C55E/FFFFFF?text=Flexbox+Froggy"
                        alt="[Screenshot c·ªßa tr√≤ ch∆°i Flexbox Froggy]"
                        class="rounded-lg shadow-xl hover:shadow-2xl transition-shadow duration-300">
                </a>
                <a href="https://flexboxfroggy.com/" target="_blank"
                    class="bg-emerald-500 hover:bg-emerald-700 text-white font-bold py-4 px-8 rounded-lg shadow-lg text-2xl transition duration-150 ease-in-out">
                    B·∫Øt ƒë·∫ßu ch∆°i ngay <i class="fas fa-gamepad ml-2"></i>
                </a>
            </div>
        </div>

        <!-- Slide 10: Summary -->
        <div id="slide-10" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-indigo-700 mb-8">T·ªïng k·∫øt Bu·ªïi 4</h2>
                <div class="text-xl text-gray-700 space-y-5 max-w-4xl text-left bg-gray-50 p-8 rounded-lg shadow">
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>B·∫°n ƒë√£ bi·∫øt c√°ch t·ªï ch·ª©c code v·ªõi
                        <strong>file CSS ri√™ng (External CSS)</strong>.
                    </p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>B·∫°n ƒë√£ hi·ªÉu kh√°i ni·ªám c·ªët l√µi c·ªßa Flexbox:
                        <strong>Flex Container</strong> v√† <strong>Flex Items</strong>.
                    </p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>B·∫°n ƒë√£ h·ªçc c√°c thu·ªôc t√≠nh quan tr·ªçng ƒë·ªÉ
                        s·∫Øp x·∫øp layout: <code>display: flex</code>, <code>flex-direction</code>,
                        <code>justify-content</code>, v√† <code>align-items</code>.
                    </p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>B·∫°n bi·∫øt c√°ch d√πng <code>flex-wrap</code>
                        ƒë·ªÉ t·∫°o layout responsive.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>B·∫°n ƒë√£ √°p d·ª•ng ki·∫øn th·ª©c ƒë·ªÉ x√¢y d·ª±ng c√°c
                        th√†nh ph·∫ßn UI th·ª±c t·∫ø.</p>
                </div>
                <div
                    class="mt-12 bg-indigo-100 border-l-4 border-indigo-500 text-indigo-700 p-6 rounded-r-lg shadow-lg w-full max-w-4xl">
                    <h4 class="text-2xl font-bold mb-2">H·∫πn g·∫∑p l·∫°i ·ªü Bu·ªïi 5!</h4>
                    <p class="text-lg">Ch√∫ng ta s·∫Ω kh√°m ph√° m·ªôt c√¥ng c·ª• layout m·∫°nh m·∫Ω kh√°c: <strong>CSS Grid</strong>!
                    </p>
                </div>
            </div>
        </div>

    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const slides = Array.from(document.querySelectorAll('.slide'));
            const prevButton = document.getElementById('prevSlide');
            const nextButton = document.getElementById('nextSlide');
            const currentSlideNumDisplay = document.getElementById('currentSlideNum');
            const totalSlidesNumDisplay = document.getElementById('totalSlidesNum');

            let currentSlide = 0;
            if (totalSlidesNumDisplay) {
                totalSlidesNumDisplay.textContent = slides.length || '0';
            }

            function showSlide(index) {
                slides.forEach((slide, i) => {
                    slide.classList.remove('active');
                    if (i === index) {
                        slide.style.display = 'flex';
                        setTimeout(() => slide.classList.add('active'), 10);
                    } else {
                        setTimeout(() => {
                            if (!slide.classList.contains('active')) slide.style.display = 'none';
                        }, 400);
                    }
                });
                if (currentSlideNumDisplay) {
                    currentSlideNumDisplay.textContent = index + 1;
                }
                updateNavButtons();
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }

            function updateNavButtons() {
                if (!prevButton || !nextButton) return;
                prevButton.disabled = currentSlide === 0;
                nextButton.disabled = currentSlide === slides.length - 1;
            }

            function copyCode(buttonElement) {
                const codeBlock = buttonElement.closest('.code-block-container').querySelector('pre.code-block');
                if (!codeBlock) return;

                const codeToCopy = codeBlock.innerText;
                const textarea = document.createElement('textarea');
                textarea.value = codeToCopy;
                document.body.appendChild(textarea);
                textarea.select();
                try {
                    document.execCommand('copy');
                    const originalIcon = buttonElement.innerHTML;
                    buttonElement.innerHTML = '<i class="fas fa-check"></i> ƒê√£ ch√©p!';
                    setTimeout(() => {
                        buttonElement.innerHTML = originalIcon;
                    }, 1500);
                } catch (err) {
                    console.error('Kh√¥ng th·ªÉ sao ch√©p: ', err);
                }
                document.body.removeChild(textarea);
            }

            function renderHtml(htmlContent, cssContent, outputEl) {
                if (!outputEl) return;

                outputEl.innerHTML = ''; // Clear previous content
                const shadow = outputEl.attachShadow({ mode: 'open' });
                shadow.innerHTML = `<style>${cssContent}</style><div style="font-family: 'Inter', sans-serif;">${htmlContent}</div>`;
            }

            function renderExample(htmlCodeId, cssCodeId, outputId) {
                const htmlBlockEl = document.querySelector(`[data-code-id="${htmlCodeId}"]`);
                const cssBlockEl = document.querySelector(`[data-code-id="${cssCodeId}"]`);
                const outputEl = document.getElementById(outputId);
                if (!htmlBlockEl || !cssBlockEl || !outputEl) return;
                renderHtml(htmlBlockEl.innerText, cssBlockEl.innerText, outputEl);
            }

            // --- RENDER EXAMPLES ---
            try {
                // Nav Bar Example
                renderExample('navHtml', 'navCss', 'navOutput');

                // Card Layout Example
                renderExample('cardHtml', 'cardCss', 'cardOutput');

                // Flex Direction examples
                const flexDirectionBaseHtml = `<div class="container-demo"><div>1</div><div>2</div><div>3</div></div>`;
                const flexDirectionBaseCss = `.container-demo { display: flex; background-color: #e0f2fe; padding: 0.5rem; border-radius: 8px;} .container-demo > div { background-color: #0ea5e9; color: white; margin: 0.5rem; padding: 1rem; border-radius: 6px; }`;

                renderHtml(flexDirectionBaseHtml, `${flexDirectionBaseCss} .container-demo { flex-direction: row; }`, document.getElementById('flexDirectionRowOutput'));
                renderHtml(flexDirectionBaseHtml, `${flexDirectionBaseCss} .container-demo { flex-direction: column; }`, document.getElementById('flexDirectionColumnOutput'));

                // Interactive examples
                const justifyContentSelect = document.getElementById('justifyContentSelect');
                const justifyContentContainer = document.getElementById('justifyContentDemoContainer');
                if (justifyContentSelect && justifyContentContainer) {
                    justifyContentSelect.addEventListener('change', (e) => {
                        justifyContentContainer.style.justifyContent = e.target.value;
                    });
                }

                const alignItemsSelect = document.getElementById('alignItemsSelect');
                const alignItemsContainer = document.getElementById('alignItemsDemoContainer');
                if (alignItemsSelect && alignItemsContainer) {
                    alignItemsSelect.addEventListener('change', (e) => {
                        // Reset height for stretch to work correctly
                        Array.from(alignItemsContainer.children).forEach(child => {
                            child.style.height = (e.target.value === 'stretch') ? '' : 'auto';
                        });
                        alignItemsContainer.style.alignItems = e.target.value;
                    });
                    // Initial state trigger
                    alignItemsSelect.dispatchEvent(new Event('change'));
                }


            } catch (e) {
                console.error("L·ªói khi render v√≠ d·ª•:", e);
            }
            // --- END RENDERING EXAMPLES ---

            // Assign events to navigation buttons
            if (prevButton && nextButton) {
                prevButton.addEventListener('click', () => {
                    if (currentSlide > 0) {
                        currentSlide--;
                        showSlide(currentSlide);
                    }
                });

                nextButton.addEventListener('click', () => {
                    if (currentSlide < slides.length - 1) {
                        currentSlide++;
                        showSlide(currentSlide);
                    }
                });
            }

            // Assign events to copy buttons
            document.querySelectorAll('.copy-button').forEach(button => {
                button.addEventListener('click', () => copyCode(button));
            });

            // Show the first slide on page load
            if (slides.length > 0) {
                showSlide(currentSlide);
            }
        });
    </script>
</body>

</html>

/* ===== Web Basic/lesson5_overview.html ===== */
T·∫•t nhi√™n r·ªìi, t√¥i s·∫Ω ti·∫øp t·ª•c h·ªó tr·ª£ b·∫°n. D∆∞·ªõi ƒë√¢y l√† to√†n b·ªô n·ªôi dung c·ªßa slide "Session 5" ƒë√£ ƒë∆∞·ª£c chuy·ªÉn ng·ªØ sang
ti·∫øng Vi·ªát m·ªôt c√°ch chuy√™n nghi·ªáp, trong khi v·∫´n gi·ªØ nguy√™n c√°c ƒëo·∫°n m√£ ngu·ªìn.

```html
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bu·ªïi 5: X√¢y d·ª±ng Th√†nh ph·∫ßn Giao di·ªán v·ªõi Hover & Transition</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            scroll-behavior: smooth;
            background-color: #f3f4f6;
        }

        #navbar {
            position: sticky;
            top: 0;
            z-index: 50;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .slide-container {
            padding-top: 1rem;
        }

        .slide {
            background-color: white;
            padding: 2.5rem;
            border-radius: 0.75rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            margin-bottom: 2rem;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
            min-height: calc(100vh - 120px);
            display: none;
            flex-direction: column;
        }

        .slide.active {
            display: flex;
            opacity: 1;
            transform: translateY(0);
        }

        .slide-content-wrapper {
            flex-grow: 1;
        }

        .code-block-container {
            position: relative;
            background-color: #1e293b;
            border-radius: 0.5rem;
            margin-top: 1rem;
            margin-bottom: 1rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .code-block-header {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            padding: 0.5rem 0.75rem;
            background-color: #334155;
            border-top-left-radius: 0.5rem;
            border-top-right-radius: 0.5rem;
        }

        .copy-button {
            background-color: #4a5568;
            color: #e2e8f0;
            border: none;
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            cursor: pointer;
            font-size: 0.875rem;
            transition: background-color 0.2s;
        }

        .copy-button:hover {
            background-color: #718096;
        }

        .copy-button .fa-copy {
            margin-right: 0.375rem;
        }

        .copy-button .fa-check {
            margin-right: 0.375rem;
            color: #48bb78;
        }

        .code-block {
            background-color: #1e293b;
            color: #e2e8f0;
            padding: 1.5rem;
            border-bottom-left-radius: 0.5rem;
            border-bottom-right-radius: 0.5rem;
            font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
            white-space: pre-wrap;
            word-wrap: break-word;
            font-size: 0.875em;
            line-height: 1.6;
            overflow-x: auto;
        }

        .html-output {
            border: 1px solid #e2e8f0;
            padding: 1.5rem;
            margin-top: 1rem;
            border-radius: 0.5rem;
            background-color: #f7fafc;
            min-height: 100px;
            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);
        }
    </style>
</head>

<body class="text-gray-800">

    <nav id="navbar" class="p-4">
        <div class="container mx-auto flex flex-wrap justify-between items-center">
            <h1 class="text-xl font-bold text-violet-600">Ph√°t tri·ªÉn Web - Bu·ªïi 5</h1>
            <div class="flex items-center mt-2 sm:mt-0">
                <button id="prevSlide"
                    class="bg-violet-500 hover:bg-violet-700 text-white font-bold py-2 px-4 rounded-lg shadow mr-2 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    <i class="fas fa-arrow-left mr-1"></i> Tr∆∞·ªõc
                </button>
                <button id="nextSlide"
                    class="bg-violet-500 hover:bg-violet-700 text-white font-bold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed">
                    Ti·∫øp <i class="fas fa-arrow-right ml-1"></i>
                </button>
            </div>
            <div class="text-sm text-gray-600 mt-2 sm:mt-0 ml-0 sm:ml-4">
                Slide <span id="currentSlideNum">1</span> / <span id="totalSlidesNum"></span>
            </div>
        </div>
    </nav>

    <div class="container mx-auto p-4 slide-container">
        <div id="slide-1" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-violet-700 mb-6">Bu·ªïi 5: X√¢y d·ª±ng Th√†nh ph·∫ßn Giao di·ªán</h2>
                <p class="text-2xl text-gray-600 mb-12">Th√™m s·ª©c s·ªëng v·ªõi Hi·ªáu ·ª©ng Hover & Transition</p>
                <img src="https://placehold.co/600x350/8B5CF6/FFFFFF?text=UI+Components"
                    alt="Th√†nh ph·∫ßn giao di·ªán ng∆∞·ªùi d√πng" class="rounded-lg shadow-xl max-w-2xl">
                <p class="mt-10 text-xl text-gray-700">H√£y c√πng x√¢y d·ª±ng c√°c ph·∫ßn t·ª≠ ƒë·∫πp m·∫Øt v√† c√≥ t√≠nh t∆∞∆°ng t√°c!</p>
            </div>
        </div>

        <div id="slide-2" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-violet-600 mb-6">1. √în t·∫≠p v√† M·ª•c ti√™u h√¥m nay</h3>
                <p class="text-lg text-gray-700 mb-4">Trong c√°c bu·ªïi tr∆∞·ªõc, ch√∫ng ta ƒë√£ h·ªçc c√°c ki·∫øn th·ª©c n·ªÅn t·∫£ng:</p>
                <ul class="list-disc list-inside pl-4 text-gray-700 space-y-3 text-lg bg-gray-50 p-6 rounded-lg mb-8">
                    <li>X√¢y d·ª±ng c·∫•u tr√∫c n·ªôi dung v·ªõi <strong>th·∫ª HTML</strong>.</li>
                    <li>Qu·∫£n l√Ω kh√¥ng gian v√† k√≠ch th∆∞·ªõc v·ªõi <strong>M√¥ h√¨nh H·ªôp CSS (Box Model)</strong>.</li>
                    <li>T·∫°o b·ªë c·ª•c v·ªõi <strong>CSS Flexbox</strong>.</li>
                </ul>
                <h4 class="text-3xl font-bold text-gray-800 mb-3 text-center">M·ª•c ti√™u h√¥m nay</h4>
                <p class="text-xl text-gray-700 mb-4 text-center max-w-3xl mx-auto">
                    Ch√∫ng ta s·∫Ω k·∫øt h·ª£p nh·ªØng k·ªπ nƒÉng n√†y ƒë·ªÉ x√¢y d·ª±ng c√°c th√†nh ph·∫ßn UI chuy√™n nghi·ªáp (N√∫t, Th·∫ª, Th√¥ng
                    b√°o). Quan tr·ªçng h∆°n, ch√∫ng ta s·∫Ω h·ªçc c√°ch l√†m cho ch√∫ng <strong>t∆∞∆°ng t√°c</strong> v√†
                    <strong>c·∫£m gi√°c s·ªëng ƒë·ªông</strong> b·∫±ng c√°c kh√°i ni·ªám CSS m·ªõi.
                </p>
                <img src="https://placehold.co/700x250/C4B5FD/4C1D95?text=HTML+%2B+Box+Model+%2B+Flexbox+%2B+Effects+%3D+Awesome+UI"
                    alt="[S∆° ƒë·ªì c√°c k·ªπ nƒÉng t·∫°o n√™n UI]" class="mx-auto rounded-md shadow-md mt-6">
            </div>
        </div>

        <div id="slide-3" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-violet-600 mb-6">2. T∆∞∆°ng t√°c v·ªõi `:hover`</h3>
                <p class="text-lg text-gray-700 mb-4">L·ªõp gi·∫£ (pseudo-class) <code>:hover</code> trong CSS ƒë∆∞·ª£c s·ª≠ d·ª•ng
                    ƒë·ªÉ √°p d·ª•ng c√°c ki·ªÉu cho m·ªôt ph·∫ßn t·ª≠ khi con tr·ªè chu·ªôt c·ªßa ng∆∞·ªùi d√πng ·ªü tr√™n n√≥.</p>
                <p class="text-lg text-gray-700 mb-6">ƒê√¢y l√† m·ªôt trong nh·ªØng c√°ch ƒë∆°n gi·∫£n nh·∫•t ƒë·ªÉ t·∫°o ra s·ª± t∆∞∆°ng t√°c.
                </p>

                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i>
                            Sao ch√©p</button>
                    </div>
                    <pre class="code-block" data-code-id="hoverExampleCode"><code>&lt;style&gt;
.hover-link {
  color: #8b5cf6; /* M√†u ban ƒë·∫ßu */
  font-size: 1.5rem;
  font-weight: bold;
  text-decoration: none;
}
 
/* Ki·ªÉu n√†y CH·ªà √°p d·ª•ng khi chu·ªôt di chuy·ªÉn qua ph·∫ßn t·ª≠ */
.hover-link:hover {
  color: #6d28d9; /* M√†u thay ƒë·ªïi khi hover */
  text-decoration: underline;
}
&lt;/style&gt;
&lt;a href="#" class="hover-link"&gt;Di chu·ªôt qua t√¥i!&lt;/a&gt;
</code></pre>
                </div>

                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">V√≠ d·ª• tr·ª±c ti·∫øp:</h4>
                <div class="html-output" id="hoverExampleOutput"></div>
            </div>
        </div>

        <div id="slide-4" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-violet-600 mb-6">3. Hi·ªáu ·ª©ng m∆∞·ª£t m√† v·ªõi `transition`</h3>
                <p class="text-lg text-gray-700 mb-4">S·ª± thay ƒë·ªïi v·ªõi <code>:hover</code> di·ªÖn ra t·ª©c th√¨ v√† ƒë·ªôt ng·ªôt.
                    Thu·ªôc t√≠nh <code>transition</code> cho ph√©p b·∫°n ki·ªÉm so√°t t·ªëc ƒë·ªô thay ƒë·ªïi c·ªßa thu·ªôc t√≠nh, t·∫°o ra
                    c√°c ho·∫°t ·∫£nh m∆∞·ª£t m√†.
                </p>

                <p class="text-lg text-gray-700 mb-6"><strong>ƒêi·ªÅu c·∫ßn nh·ªõ:</strong> √Åp d·ª•ng thu·ªôc t√≠nh `transition`
                    cho b·ªô ch·ªçn c∆° s·ªü (v√≠ d·ª•: `.my-button`), kh√¥ng ph·∫£i b·ªô ch·ªçn `:hover`.</p>

                <div class="code-block-container">
                    <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i>
                            Sao ch√©p</button>
                    </div>
                    <pre class="code-block" data-code-id="transitionExampleCode"><code>&lt;style&gt;
.box {
  width: 100px;
  height: 100px;
  background-color: #a78bfa;
  /* ƒê·ªãnh nghƒ©a transition:
   - all: √°p d·ª•ng cho t·∫•t c·∫£ c√°c thu·ªôc t√≠nh thay ƒë·ªïi
   - 0.3s: th·ªùi gian k√©o d√†i 0.3 gi√¢y
   - ease: h√†m th·ªùi gian (b·∫Øt ƒë·∫ßu ch·∫≠m, nhanh, k·∫øt th√∫c ch·∫≠m)
  */
  transition: all 0.3s ease;
}

.box:hover {
  background-color: #6d28d9;
  border-radius: 50%; /* C≈©ng s·∫Ω ƒë∆∞·ª£c t·∫°o ho·∫°t ·∫£nh */
  transform: scale(1.1); /* Th√™m hi·ªáu ·ª©ng thay ƒë·ªïi k√≠ch th∆∞·ªõc */
}
&lt;/style&gt;
&lt;div class="box"&gt;&lt;/div&gt;
</code></pre>
                </div>

                <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">V√≠ d·ª• tr·ª±c ti·∫øp (Di chu·ªôt qua h·ªôp):</h4>
                <div class="html-output flex justify-center items-center" id="transitionExampleOutput"></div>
            </div>
        </div>

        <div id="slide-5" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-violet-600 mb-6">4. Th·ª±c h√†nh: X√¢y d·ª±ng m·ªôt N√∫t t∆∞∆°ng t√°c
                </h3>
                <p class="text-lg text-gray-700 mb-4">H√£y x√¢y d·ª±ng m·ªôt th√†nh ph·∫ßn UI ph·ªï bi·∫øn: n√∫t b·∫•m. Ch√∫ng ta s·∫Ω √°p
                    d·ª•ng c√°c ki·ªÉu c∆° b·∫£n, sau ƒë√≥ th√™m hi·ªáu ·ª©ng hover v√† transition.</p>
                <div class="grid lg:grid-cols-2 gap-6">
                    <div>
                        <div class="code-block-container">
                            <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i>
                                    Sao ch√©p</button></div>
                            <pre class="code-block" data-code-id="buttonCode"><code>&lt;style&gt;
.my-button {
  /* ƒê·ªãnh d·∫°ng c∆° b·∫£n */
  background-color: #8b5cf6;
  color: white;
  padding: 12px 24px;
  border: none;
  border-radius: 8px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  
  /* Th√™m transition ƒë·ªÉ c√≥ hi·ªáu ·ª©ng m∆∞·ª£t m√† */
  transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.2s ease;
}

.my-button:hover {
  /* C√°c ki·ªÉu khi chu·ªôt ·ªü tr√™n n√∫t */
  background-color: #7c3aed;
  transform: translateY(-3px); /* Di chuy·ªÉn n√∫t l√™n m·ªôt ch√∫t */
  box-shadow: 0 4px 10px rgba(0,0,0,0.15);
}
&lt;/style&gt;

&lt;button class="my-button"&gt;Nh·∫•n v√†o t√¥i!&lt;/button&gt;
</code></pre>
                        </div>
                    </div>
                    <div>
                        <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£ (Di chu·ªôt ƒë·ªÉ xem hi·ªáu ·ª©ng):
                        </h4>
                        <div class="html-output flex justify-center items-center" id="buttonOutput"></div>
                        <h4 class="text-xl font-medium text-gray-700 mb-2 mt-8">C√°c b∆∞·ªõc ch√≠nh:</h4>
                        <ol class="list-decimal list-inside pl-4 text-gray-700 space-y-2">
                            <li>ƒê·ªãnh nghƒ©a giao di·ªán c∆° b·∫£n (padding, color, border-radius).</li>
                            <li>Th√™m `transition` v√†o class c∆° s·ªü.</li>
                            <li>ƒê·ªãnh nghƒ©a tr·∫°ng th√°i `:hover` (thay ƒë·ªïi n·ªÅn, th√™m transform).</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>

        <div id="slide-6" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-violet-600 mb-6">5. Th·ª±c h√†nh: X√¢y d·ª±ng m·ªôt Th·∫ª (Card) t∆∞∆°ng
                    t√°c</h3>
                <p class="text-lg text-gray-700 mb-4">Th·∫ª ƒë∆∞·ª£c s·ª≠ d·ª•ng ·ªü kh·∫Øp m·ªçi n∆°i ƒë·ªÉ hi·ªÉn th·ªã n·ªôi dung nh∆∞ s·∫£n
                    ph·∫©m, b√†i ƒëƒÉng tr√™n blog ho·∫∑c h·ªì s∆°. H√£y t·∫°o m·ªôt th·∫ª c√≥ th·ªÉ "n√¢ng l√™n" khi di chu·ªôt qua.</p>
                <div class="grid lg:grid-cols-2 gap-6">
                    <div>
                        <div class="code-block-container">
                            <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i>
                                    Sao ch√©p</button></div>
                            <pre class="code-block" data-code-id="cardCode"><code>&lt;style&gt;
.product-card {
  width: 280px;
  background-color: white;
  border-radius: 12px;
  box-shadow: 0 4px 15px rgba(0,0,0,0.08);
  overflow: hidden; /* ƒê·∫£m b·∫£o c√°c g√≥c ·∫£nh ƒë∆∞·ª£c bo tr√≤n */
  font-family: 'Inter', sans-serif;
  
  /* Transition cho b√≥ng ƒë·ªï v√† bi·∫øn ƒë·ªïi */
  transition: box-shadow 0.3s ease, transform 0.3s ease;
}

.product-card:hover {
  transform: translateY(-8px);
  box-shadow: 0 12px 25px rgba(0,0,0,0.12);
}

.card-image {
  width: 100%;
  height: 180px;
  object-fit: cover;
}

.card-content {
  padding: 1.25rem;
}

.card-title {
  font-size: 1.25rem;
  font-weight: 600;
  color: #1f2937;
  margin-bottom: 0.5rem;
}

.card-text {
  color: #4b5563;
  margin-bottom: 1rem;
}

.card-button {
  display: block;
  width: 100%;
  background-color: #8b5cf6;
  color: white;
  text-align: center;
  padding: 10px 0;
  border-radius: 8px;
  text-decoration: none;
  font-weight: 500;
  transition: background-color 0.2s ease;
}

.card-button:hover {
  background-color: #7c3aed;
}
&lt;/style&gt;

&lt;div class="product-card"&gt;
  &lt;img src="https://placehold.co/280x180/C4B5FD/4C1D95?text=Product" alt="Product Image" class="card-image"&gt;
  &lt;div class="card-content"&gt;
    &lt;h4 class="card-title"&gt;Ti·ªán √≠ch tuy·ªát v·ªùi&lt;/h4&gt;
    &lt;p class="card-text"&gt;C√¥ng c·ª• ho√†n h·∫£o cho nhu c·∫ßu h√†ng ng√†y c·ªßa b·∫°n. Ch·∫•t l∆∞·ª£ng cao v√† b·ªÅn b·ªâ.&lt;/p&gt;
    &lt;a href="#" class="card-button"&gt;Xem chi ti·∫øt&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
</code></pre>
                        </div>
                    </div>
                    <div>
                        <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£ (Di chu·ªôt ƒë·ªÉ xem hi·ªáu ·ª©ng):
                        </h4>
                        <div class="html-output flex justify-center items-center py-8" id="cardOutput"></div>
                    </div>
                </div>
            </div>
        </div>

        <div id="slide-7" class="slide">
            <div class="slide-content-wrapper">
                <h3 class="text-4xl font-semibold text-violet-600 mb-6">6. Th·ª±c h√†nh: X√¢y d·ª±ng m·ªôt Th√†nh ph·∫ßn Th√¥ng
                    b√°o (Alert)</h3>
                <p class="text-lg text-gray-700 mb-4">Th√¥ng b√°o cung c·∫•p c√°c th√¥ng ƒëi·ªáp ph·∫£n h·ªìi theo ng·ªØ c·∫£nh. H√£y
                    t·∫°o m·ªôt th√¥ng b√°o "th√†nh c√¥ng" b·∫±ng Flexbox v√† th√™m hi·ªáu ·ª©ng hover tinh t·∫ø.</p>
                <div class="grid lg:grid-cols-2 gap-6">
                    <div>
                        <div class="code-block-container">
                            <div class="code-block-header"><button class="copy-button"><i class="far fa-copy"></i>
                                    Sao ch√©p</button></div>
                            <pre class="code-block" data-code-id="alertCode"><code>&lt;style&gt;
.alert {
  display: flex; /* D√πng Flexbox ƒë·ªÉ cƒÉn ch·ªânh icon v√† vƒÉn b·∫£n */
  align-items: center;
  padding: 1rem;
  border-radius: 8px;
  border-width: 1px;
  border-style: solid;
  max-width: 500px;
  margin: 0 auto;

  /* Transition tinh t·∫ø */
  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

.alert:hover {
    transform: scale(1.02);
    box-shadow: 0 4px 10px rgba(0,0,0,0.07);
}

.alert-success {
  background-color: #dcfce7;
  border-color: #4ade80;
  color: #15803d;
}

.alert-icon {
  font-size: 1.5rem;
  margin-right: 0.75rem;
  flex-shrink: 0; /* NgƒÉn kh√¥ng cho icon b·ªã co l·∫°i */
}

.alert-message {
  font-weight: 500;
}
&lt;/style&gt;

&lt;div class="alert alert-success"&gt;
  &lt;i class="fas fa-check-circle alert-icon"&gt;&lt;/i&gt;
  &lt;span class="alert-message"&gt;H·ªì s∆° c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t th√†nh c√¥ng!&lt;/span&gt;
&lt;/div&gt;
</code></pre>
                        </div>
                    </div>
                    <div>
                        <h4 class="text-xl font-medium text-gray-700 mb-2 mt-4">K·∫øt qu·∫£ (Di chu·ªôt ƒë·ªÉ xem hi·ªáu ·ª©ng):
                        </h4>
                        <div class="html-output flex justify-center items-center" id="alertOutput"></div>
                    </div>
                </div>
            </div>
        </div>

        <div id="slide-8" class="slide">
            <div class="slide-content-wrapper flex flex-col justify-center items-center text-center">
                <h2 class="text-5xl font-bold text-violet-700 mb-8">T·ªïng k·∫øt Bu·ªïi 5</h2>
                <div class="text-xl text-gray-700 space-y-5 max-w-4xl text-left bg-gray-50 p-8 rounded-lg shadow">
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>B√¢y gi·ªù b·∫°n c√≥ th·ªÉ t·∫°o c√°c hi·ªáu ·ª©ng
                        t∆∞∆°ng t√°c b·∫±ng c√°ch s·ª≠ d·ª•ng l·ªõp gi·∫£ <strong><code>:hover</code></strong>.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>B·∫°n bi·∫øt c√°ch l√†m cho c√°c hi·ªáu ·ª©ng n√†y
                        tr·ªü n√™n m∆∞·ª£t m√† v√† ƒë·∫πp m·∫Øt b·∫±ng thu·ªôc t√≠nh <strong><code>transition</code></strong>.</p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>B·∫°n ƒë√£ k·∫øt h·ª£p ki·∫øn th·ª©c c≈© (Flexbox,
                        Box Model) v·ªõi c√°c kh√°i ni·ªám m·ªõi ƒë·ªÉ x√¢y d·ª±ng c√°c th√†nh ph·∫ßn UI th·ª±c t·∫ø nh∆∞
                        <strong>N√∫t, Th·∫ª v√† Th√¥ng b√°o</strong>.
                    </p>
                    <p><i class="fas fa-check-circle text-green-500 mr-2"></i>B·∫°n hi·ªÉu c√°ch c√°c ho·∫°t ·∫£nh tinh t·∫ø v·ªõi
                        <code>transform</code> c√≥ th·ªÉ c·∫£i thi·ªán ƒë√°ng k·ªÉ tr·∫£i nghi·ªám ng∆∞·ªùi d√πng.
                    </p>
                </div>
                <div
                    class="mt-12 bg-indigo-100 border-l-4 border-indigo-500 text-indigo-700 p-6 rounded-r-lg shadow-lg w-full max-w-4xl">
                    <h4 class="text-2xl font-bold mb-2">H·∫πn g·∫∑p l·∫°i ·ªü Bu·ªïi 6!</h4>
                    <p class="text-lg">Ch√∫ng ta s·∫Ω kh√°m ph√° m·ªôt h·ªá th·ªëng b·ªë c·ª•c m·∫°nh m·∫Ω kh√°c: <strong>CSS
                            Grid</strong>! N√≥ ho√†n h·∫£o cho c√°c b·ªë c·ª•c trang hai chi·ªÅu ph·ª©c t·∫°p.</p>
                </div>
            </div>
        </div>

    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const slides = Array.from(document.querySelectorAll('.slide'));
            const prevButton = document.getElementById('prevSlide');
            const nextButton = document.getElementById('nextSlide');
            const currentSlideNumDisplay = document.getElementById('currentSlideNum');
            const totalSlidesNumDisplay = document.getElementById('totalSlidesNum');

            let currentSlide = 0;
            if (totalSlidesNumDisplay) {
                totalSlidesNumDisplay.textContent = slides.length || '0';
            }

            function showSlide(index) {
                slides.forEach((slide, i) => {
                    slide.classList.remove('active');
                    if (i === index) {
                        slide.style.display = 'flex';
                        setTimeout(() => slide.classList.add('active'), 10);
                    } else {
                        setTimeout(() => {
                            if (!slide.classList.contains('active')) slide.style.display = 'none';
                        }, 400);
                    }
                });
                if (currentSlideNumDisplay) {
                    currentSlideNumDisplay.textContent = index + 1;
                }
                updateNavButtons();
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }

            function updateNavButtons() {
                if (!prevButton || !nextButton) return;
                prevButton.disabled = currentSlide === 0;
                nextButton.disabled = currentSlide === slides.length - 1;
            }

            function copyCode(buttonElement) {
                const codeBlock = buttonElement.closest('.code-block-container').querySelector('pre.code-block');
                if (!codeBlock) return;
                const codeToCopy = codeBlock.innerText;
                navigator.clipboard.writeText(codeToCopy).then(() => {
                    const originalIcon = buttonElement.innerHTML;
                    buttonElement.innerHTML = '<i class="fas fa-check"></i> ƒê√£ sao ch√©p!';
                    setTimeout(() => {
                        buttonElement.innerHTML = originalIcon;
                    }, 1500);
                }).catch(err => {
                    console.error('Kh√¥ng th·ªÉ sao ch√©p vƒÉn b·∫£n: ', err);
                });
            }

            function renderHtml(codeString, outputEl) {
                if (!outputEl) return;
                let styleContent = '';
                const styleMatch = codeString.match(/<style>([\s\S]*?)<\/style>/i);
                if (styleMatch) styleContent = styleMatch[1];

                let bodyContent = codeString.replace(/<style>([\s\S]*?)<\/style>/i, '').trim();
                let fontAwesome = bodyContent.includes('fas fa-') ? `<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">` : '';

                outputEl.innerHTML = '';
                const shadow = outputEl.attachShadow({ mode: 'open' });
                shadow.innerHTML = `<style>${styleContent}</style>${fontAwesome}<div style="font-family: 'Inter', sans-serif;">${bodyContent}</div>`;
            }

            function renderExample(codeBlockId, outputId) {
                const codeBlockEl = document.querySelector(`[data-code-id="${codeBlockId}"]`);
                const outputEl = document.getElementById(outputId);
                if (!codeBlockEl || !outputEl) return;
                renderHtml(codeBlockEl.innerText, outputEl);
            }

            // --- HI·ªÇN TH·ªä V√ç D·ª§ ---
            try {
                renderExample('hoverExampleCode', 'hoverExampleOutput');
                renderExample('transitionExampleCode', 'transitionExampleOutput');
                renderExample('buttonCode', 'buttonOutput');
                renderExample('cardCode', 'cardOutput');
                renderExample('alertCode', 'alertOutput');
            } catch (e) {
                console.error("L·ªói khi hi·ªÉn th·ªã v√≠ d·ª•:", e);
            }
            // --- K·∫æT TH√öC HI·ªÇN TH·ªä V√ç D·ª§ ---

            if (prevButton && nextButton) {
                prevButton.addEventListener('click', () => {
                    if (currentSlide > 0) {
                        currentSlide--;
                        showSlide(currentSlide);
                    }
                });

                nextButton.addEventListener('click', () => {
                    if (currentSlide < slides.length - 1) {
                        currentSlide++;
                        showSlide(currentSlide);
                    }
                });
            }

            document.querySelectorAll('.copy-button').forEach(button => {
                button.addEventListener('click', () => copyCode(button));
            });

            if (slides.length > 0) {
                showSlide(currentSlide);
            }
        });
    </script>
</body>

</html>
```

/* ===== Web Basic/lesson6_midterm.html ===== */
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>B√†i Thi Gi·ªØa Kho√°: X√¢y D·ª±ng Website Profile</title>
    <!-- Using Tailwind for utility classes if needed, but primary styling is custom CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@400;500;600;700&family=Fira+Code&display=swap"
        rel="stylesheet">
    <!-- Font Awesome for Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <style>
        /* Modern, Minimalist CSS for the Tutorial Page */
        :root {
            --bg-color: #f8fafc;
            /* Lighter gray background */
            --card-bg: #ffffff;
            --text-primary: #1e293b;
            /* Slate 800 */
            --text-secondary: #64748b;
            /* Slate 500 */
            --accent-color: #4f46e5;
            /* Indigo 600 */
            --accent-dark: #4338ca;
            /* Indigo 700 */
            --accent-light: #eef2ff;
            /* Indigo 50 */
            --border-color: #e2e8f0;
            /* Slate 200 */
            --code-bg: #1e293b;
            /* Slate 800 for code */
            --code-text: #e2e8f0;
            /* Slate 200 for code text */
        }

        html {
            scroll-behavior: smooth;
        }

        body {
            font-family: 'Be Vietnam Pro', sans-serif;
            background-color: var(--bg-color);
            color: var(--text-primary);
        }

        .tutorial-container {
            max-width: 1200px;
            margin: auto;
            padding: 2.5rem 1.5rem;
        }

        /* Main Header */
        .main-header h1 {
            font-size: 2.5rem;
            font-weight: 700;
            color: var(--text-primary);
        }

        .main-header p {
            font-size: 1.125rem;
            color: var(--text-secondary);
            max-width: 600px;
            margin: 0.5rem auto 0 auto;
        }

        /* Step Card Styling */
        .step {
            background: var(--card-bg);
            border: 1px solid var(--border-color);
            border-radius: 12px;
            margin-bottom: 3rem;
            box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.05), 0 2px 4px -2px rgb(0 0 0 / 0.05);
            overflow: hidden;
            transition: box-shadow 0.3s ease;
        }

        .step:hover {
            box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.07), 0 4px 6px -4px rgb(0 0 0 / 0.07);
        }

        .step-header {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1.25rem 1.5rem;
            border-bottom: 1px solid var(--border-color);
        }

        .step-header .step-number {
            background-color: var(--accent-light);
            color: var(--accent-color);
            font-weight: 700;
            font-size: 1rem;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-shrink: 0;
        }

        .step-header h2 {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--text-primary);
            margin: 0;
        }

        .step-header h2 span {
            display: block;
            font-size: 0.9rem;
            font-weight: 400;
            color: var(--text-secondary);
            margin-top: 0.25rem;
        }

        .step-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            padding: 1.5rem;
        }

        @media (max-width: 1024px) {
            .step-content {
                grid-template-columns: 1fr;
            }
        }

        /* Explanation Column */
        .explanation h3 {
            font-size: 1.25rem;
            font-weight: 600;
            margin-top: 0;
            margin-bottom: 1rem;
            color: var(--text-primary);
        }

        .explanation p,
        .explanation li {
            line-height: 1.7;
            color: #374151;
        }

        .explanation ul {
            padding-left: 20px;
            margin-top: 1rem;
        }

        /* Code Block */
        .code-block-container {
            background-color: var(--code-bg);
            border-radius: 10px;
            margin-top: 1.5rem;
            position: relative;
            box-shadow: 0 5px 20px rgba(27, 39, 59, 0.15);
        }

        .code-block-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem 1rem;
            background-color: #374151;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
            border-bottom: 1px solid #4b5563;
        }

        .file-name {
            color: #d1d5db;
            font-size: 0.875rem;
            font-family: 'Fira Code', monospace;
        }

        .copy-button {
            background-color: #4b5563;
            color: #e5e7eb;
            border: none;
            padding: 0.35rem 0.75rem;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.8rem;
            font-family: 'Be Vietnam Pro', sans-serif;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.2s ease;
        }

        .copy-button:hover:not(:disabled) {
            background-color: #6b7280;
            color: white;
        }

        .copy-button:disabled {
            background-color: var(--accent-dark);
            color: white;
            cursor: default;
        }


        .code-block {
            color: var(--code-text);
            padding: 1.25rem;
            font-family: 'Fira Code', monospace;
            font-size: 0.875rem;
            line-height: 1.6;
            white-space: pre-wrap;
            word-wrap: break-word;
            max-height: 400px;
            overflow-y: auto;
        }

        /* Custom scrollbar for code block */
        .code-block::-webkit-scrollbar {
            width: 8px;
        }

        .code-block::-webkit-scrollbar-track {
            background: transparent;
        }

        .code-block::-webkit-scrollbar-thumb {
            background-color: #4b5563;
            border-radius: 20px;
            border: 2px solid var(--code-bg);
        }


        /* Preview Column */
        .preview-area h4 {
            color: var(--text-primary);
            font-weight: 600;
            margin-bottom: 0.75rem;
        }

        .preview-box {
            border: 1px solid var(--border-color);
            border-radius: 8px;
            background-color: #f1f5f9;
            /* Slate 100 */
            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);
            height: 100%;
            min-height: 650px;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }

        .preview-box iframe {
            width: 100%;
            height: 100%;
            border: none;
            border-radius: 6px;
            background-color: white;
            transform: scale(1);
            transition: transform 0.3s ease;
        }

        /* Special styling for intro and final challenge */
        #intro-card,
        #final-challenge-card {
            grid-template-columns: 1fr;
        }

        #final-challenge-card .explanation ul {
            background: var(--accent-light);
            border-left: 4px solid var(--accent-color);
            padding: 1rem 1rem 1rem 2rem;
            list-style-type: 'üèÜ';
            border-radius: 6px;
            margin-left: 0;
            padding-left: 2rem;
        }

        #final-challenge-card .explanation li {
            padding-left: 0.75rem;
            margin-bottom: 0.5rem;
            color: var(--accent-dark);
            font-weight: 500;
        }
    </style>
</head>

<body>

    <div class="tutorial-container">
        <!-- Main Page Header -->
        <div class="text-center mb-16 main-header">
            <h1 class="text-4xl font-bold">B√†i Thi Gi·ªØa Kho√°: X√¢y D·ª±ng Website Profile</h1>
            <p class="mt-2">H∆∞·ªõng d·∫´n chi ti·∫øt ƒë·ªÉ t·∫°o trang gi·ªõi thi·ªáu b·∫£n th√¢n t·ª´ A-Z v·ªõi HTML & CSS.</p>
        </div>

        <!-- Step 0: Gi·ªõi thi·ªáu -->
        <div class="step">
            <div class="step-header">
                <div class="step-number">0</div>
                <h2>Gi·ªõi Thi·ªáu & Ti√™u Ch√≠ Ch·∫•m ƒêi·ªÉm</h2>
            </div>
            <div class="step-content" id="intro-card">
                <div class="explanation" id="final-challenge-card">
                    <h3>M·ª•c ti√™u c·ªßa b√†i thi</h3>
                    <p>Trong b√†i thi n√†y, ch√∫ng ta s·∫Ω v·∫≠n d·ª•ng to√†n b·ªô ki·∫øn th·ª©c ƒë√£ h·ªçc ƒë·ªÉ x√¢y d·ª±ng m·ªôt s·∫£n ph·∫©m th·ª±c
                        t·∫ø: m·ªôt trang web gi·ªõi thi·ªáu b·∫£n th√¢n (Portfolio). ƒê√¢y l√† "t·∫•m danh thi·∫øp" c·ªßa b·∫°n trong th·∫ø
                        gi·ªõi s·ªë, v√¨ v·∫≠y h√£y th·∫≠t chƒÉm ch√∫t cho n√≥ nh√©!</p>

                    <h3>Ti√™u ch√≠ ch·∫•m ƒëi·ªÉm</h3>
                    <ul>
                        <li><b>Ho√†n Thi·ªán Y√™u C·∫ßu C∆° B·∫£n (7 ƒëi·ªÉm):</b> X√¢y d·ª±ng trang web theo ƒë√∫ng c√°c b∆∞·ªõc h∆∞·ªõng d·∫´n,
                            ƒë·∫£m b·∫£o ƒë·∫ßy ƒë·ªß c√°c th√†nh ph·∫ßn v√† ch·ª©c nƒÉng c∆° b·∫£n.</li>
                        <li><b>S√°ng T·∫°o (3 ƒëi·ªÉm+):</b> ƒê√¢y l√† ph·∫ßn ƒë·ªÉ b·∫°n th·ªÉ hi·ªán c√° t√≠nh. ƒêi·ªÉm c·ªông s·∫Ω ƒë∆∞·ª£c trao cho
                            nh·ªØng b·∫°n thay ƒë·ªïi layout, m√†u s·∫Øc, font ch·ªØ, th√™m hi·ªáu ·ª©ng, b·ªï sung c√°c th√†nh ph·∫ßn m·ªõi,
                            ho·∫∑c t·ª± thi·∫øt k·∫ø m·ªôt layout ho√†n to√†n m·ªõi.</li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Step 1: HTML Structure -->
        <div class="step" id="step1">
            <div class="step-header">
                <div class="step-number">1</div>
                <h2>X√¢y D·ª±ng "B·ªô X∆∞∆°ng"<span>C·∫•u Tr√∫c HTML</span></h2>
            </div>
            <div class="step-content">
                <div>
                    <div class="explanation">
                        <h3>Kh·ªüi t·∫°o d·ª± √°n</h3>
                        <p>Vi·ªác ƒë·∫ßu ti√™n l√† t·∫°o m·ªôt th∆∞ m·ª•c cho d·ª± √°n. B√™n trong, h√£y t·∫°o 2 file:
                            <code>index.html</code> v√† <code>style.css</code>.
                        </p>
                        <h3>So·∫°n c·∫•u tr√∫c HTML</h3>
                        <p>M·ªü file <code>index.html</code> v√† sao ch√©p ƒëo·∫°n code b√™n d∆∞·ªõi. ƒê√¢y l√† c·∫•u tr√∫c c∆° b·∫£n cho
                            trang profile c·ªßa ch√∫ng ta, s·ª≠ d·ª•ng c√°c th·∫ª HTML ng·ªØ nghƒ©a.
                        </p>
                        <p>ƒê·ª´ng qu√™n thay th·∫ø c√°c th√¥ng tin m·∫´u b·∫±ng th√¥ng tin c√° nh√¢n c·ªßa b·∫°n!</p>
                    </div>
                    <div class="code-block-container">
                        <div class="code-block-header">
                            <span class="file-name">index.html</span>
                            <button class="copy-button" data-target="code-step1">
                                <span>Copy</span> <i class="fa-regular fa-copy"></i>
                            </button>
                        </div>
                        <pre class="code-block"><code id="code-step1">&lt;!DOCTYPE html&gt;
&lt;html lang="vi"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;title&gt;Trang C√° Nh√¢n C·ªßa [T√™n C·ªßa B·∫°n]&lt;/title&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class="profile-card"&gt;
        &lt;div class="info-section"&gt;
            &lt;img class="profile-pic" src="https://placehold.co/150x150/4f46e5/FFFFFF?text=Avatar" alt="·∫¢nh ƒë·∫°i di·ªán"&gt;
            &lt;h1 class="name"&gt;Nguy·ªÖn VƒÉn A&lt;/h1&gt;
            &lt;p class="title"&gt;L·∫≠p Tr√¨nh Vi√™n Web&lt;/p&gt;
            &lt;p class="bio"&gt;T√¥i l√† m·ªôt ng∆∞·ªùi ƒëam m√™ c√¥ng ngh·ªá v√† l·∫≠p tr√¨nh, lu√¥n t√¨m t√≤i h·ªçc h·ªèi nh·ªØng ki·∫øn th·ª©c m·ªõi.&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class="social-links"&gt;
            &lt;a href="#"&gt;&lt;i class="fab fa-facebook"&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a href="#"&gt;&lt;i class="fab fa-github"&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a href="#"&gt;&lt;i class="fab fa-linkedin"&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
                    </div>
                </div>
                <div class="preview-area">
                    <h4>Xem tr∆∞·ªõc k·∫øt qu·∫£:</h4>
                    <div class="preview-box">
                        <iframe id="preview-step1" title="Preview for Step 1"></iframe>
                    </div>
                </div>
            </div>
        </div>

        <!-- Step 2: CSS Box Model -->
        <div class="step" id="step2">
            <div class="step-header">
                <div class="step-number">2</div>
                <h2>"Trang ƒêi·ªÉm" Cho Card<span>Box Model & Layout</span></h2>
            </div>
            <div class="step-content">
                <div>
                    <div class="explanation">
                        <h3>T·∫°o style cho trang</h3>
                        <p>M·ªü file <code>style.css</code>. Ch√∫ng ta s·∫Ω b·∫Øt ƒë·∫ßu b·∫±ng vi·ªác ƒë·ªãnh d·∫°ng cho
                            <code>&lt;body&gt;</code> ƒë·ªÉ c√≥ m·ªôt n·ªÅn ƒë·∫πp v√† cƒÉn gi·ªØa n·ªôi dung b·∫±ng Flexbox.
                        </p>
                        <h3>ƒê·ªãnh h√¨nh th·∫ª Profile</h3>
                        <p>Ti·∫øp theo, ta s·∫Ω style cho class <code>.profile-card</code>. ƒê√¢y l√† l√∫c v·∫≠n d·ª•ng ki·∫øn th·ª©c v·ªÅ
                            <b>Box Model</b> (<code>padding</code>, <code>border</code>, <code>box-shadow</code>) ƒë·ªÉ t·∫°o
                            kh·ªëi ch√≠nh cho card.
                        </p>
                    </div>
                    <div class="code-block-container">
                        <div class="code-block-header">
                            <span class="file-name">style.css</span>
                            <button class="copy-button" data-target="code-step2">
                                <span>Copy</span> <i class="fa-regular fa-copy"></i>
                            </button>
                        </div>
                        <pre class="code-block"><code id="code-step2">/* Reset c∆° b·∫£n v√† font ch·ªØ */
body {
    font-family: 'Be Vietnam Pro', sans-serif;
    background-color: #f3f4f6;
    color: #333;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    margin: 0;
    padding: 20px;
}

/* Style cho card ch√≠nh */
.profile-card {
    background-color: white;
    max-width: 450px;
    width: 100%;
    padding: 40px;
    border-radius: 15px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    text-align: center;
    box-sizing: border-box;
}</code></pre>
                    </div>
                </div>
                <div class="preview-area">
                    <h4>Xem tr∆∞·ªõc k·∫øt qu·∫£:</h4>
                    <div class="preview-box">
                        <iframe id="preview-step2" title="Preview for Step 2"></iframe>
                    </div>
                </div>
            </div>
        </div>

        <!-- Step 3: Styling Content -->
        <div class="step" id="step3">
            <div class="step-header">
                <div class="step-number">3</div>
                <h2>Ho√†n Thi·ªán Giao Di·ªán<span>ƒê·ªãnh D·∫°ng N·ªôi Dung</span></h2>
            </div>
            <div class="step-content">
                <div>
                    <div class="explanation">
                        <h3>L√†m ƒë·∫πp ·∫£nh v√† ch·ªØ</h3>
                        <p>B√¢y gi·ªù ch√∫ng ta s·∫Ω ƒëi s√¢u v√†o t·ª´ng chi ti·∫øt b√™n trong card, ƒë·ªãnh d·∫°ng cho ·∫£nh ƒë·∫°i di·ªán, t√™n,
                            ch·ª©c danh v√† ph·∫ßn gi·ªõi thi·ªáu.</p>
                        <h3>Style cho icon m·∫°ng x√£ h·ªôi</h3>
                        <p>Cu·ªëi c√πng, ch√∫ng ta s·∫Ω ƒë·ªãnh d·∫°ng cho c√°c icon m·∫°ng x√£ h·ªôi, l√†m cho ch√∫ng l·ªõn h∆°n, ƒë·ªïi m√†u v√†
                            b·ªè g·∫°ch ch√¢n m·∫∑c ƒë·ªãnh c·ªßa th·∫ª <code>&lt;a&gt;</code>.</p>
                    </div>
                    <div class="code-block-container">
                        <div class="code-block-header">
                            <span class="file-name">style.css (vi·∫øt ti·∫øp)</span>
                            <button class="copy-button" data-target="code-step3">
                                <span>Copy</span> <i class="fa-regular fa-copy"></i>
                            </button>
                        </div>
                        <pre class="code-block"><code id="code-step3">/* Style ·∫£nh ƒë·∫°i di·ªán */
.profile-pic {
    width: 150px;
    height: 150px;
    border-radius: 50%;
    border: 5px solid #4f46e5;
    object-fit: cover;
    margin-bottom: 20px;
}
/* Style cho c√°c ph·∫ßn text */
.name {
    margin: 0;
    font-size: 2.25rem;
    font-weight: 700;
}
.title {
    margin: 5px 0 15px 0;
    font-size: 1.1rem;
    color: #6b7280;
    font-weight: 500;
}
.bio {
    font-size: 1rem;
    line-height: 1.6;
    color: #4b5563;
    margin-bottom: 30px;
}
/* Style cho c√°c li√™n k·∫øt MXH */
.social-links a {
    color: #4f46e5;
    font-size: 1.75rem;
    margin: 0 15px;
    text-decoration: none;
}</code></pre>
                    </div>
                </div>
                <div class="preview-area">
                    <h4>Xem tr∆∞·ªõc k·∫øt qu·∫£:</h4>
                    <div class="preview-box">
                        <iframe id="preview-step3" title="Preview for Step 3"></iframe>
                    </div>
                </div>
            </div>
        </div>

        <!-- Step 4: Interactivity -->
        <div class="step" id="step4">
            <div class="step-header">
                <div class="step-number">4</div>
                <h2>Th√™m "S·ª± S·ªëng"<span>Hi·ªáu ·ª®ng Hover & Transition</span></h2>
            </div>
            <div class="step-content">
                <div>
                    <div class="explanation">
                        <h3>T·∫°o hi·ªáu ·ª©ng m∆∞·ª£t m√†</h3>
                        <p>M·ªôt trang web tƒ©nh th√¨ kh√° nh√†m ch√°n. Ch√∫ng ta s·∫Ω th√™m "s·ª± s·ªëng" b·∫±ng c√°ch s·ª≠ d·ª•ng
                            <code>transition</code> ƒë·ªÉ t·∫°o hi·ªáu ·ª©ng chuy·ªÉn ƒë·ªông m∆∞·ª£t m√† khi ng∆∞·ªùi d√πng t∆∞∆°ng t√°c
                            (<code>:hover</code>) v·ªõi c√°c ph·∫ßn t·ª≠.
                        </p>
                    </div>
                    <div class="code-block-container">
                        <div class="code-block-header">
                            <span class="file-name">style.css (vi·∫øt ti·∫øp)</span>
                            <button class="copy-button" data-target="code-step4">
                                <span>Copy</span> <i class="fa-regular fa-copy"></i>
                            </button>
                        </div>
                        <pre class="code-block"><code id="code-step4">/* √Åp d·ª•ng transition cho card ·ªü tr·∫°ng th√°i g·ªëc */
.profile-card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}
/* Style KHI di chu·ªôt v√†o card */
.profile-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
}
/* √Åp d·ª•ng transition cho c√°c icon */
.social-links a {
    transition: transform 0.2s ease, color 0.2s ease;
}
/* Style KHI di chu·ªôt v√†o icon */
.social-links a:hover {
    transform: scale(1.2);
    color: #3730a3;
}</code></pre>
                    </div>
                </div>
                <div class="preview-area">
                    <h4>Xem tr∆∞·ªõc k·∫øt qu·∫£ (H√£y di chu·ªôt v√†o card v√† c√°c icon):</h4>
                    <div class="preview-box">
                        <iframe id="preview-step4" title="Preview for Step 4"></iframe>
                    </div>
                </div>
            </div>
        </div>

        <!-- Step 5: Creative Challenge -->
        <div class="step" id="step5">
            <div class="step-header">
                <div class="step-number">5</div>
                <h2>Th·ª≠ Th√°ch S√°ng T·∫°o<span>Th·ªÉ Hi·ªán C√° T√≠nh C·ªßa B·∫°n</span></h2>
            </div>
            <div class="step-content">
                <div>
                    <div class="explanation">
                        <h3>Th√™m khu v·ª±c "K·ªπ nƒÉng"</h3>
                        <p>ƒê√¢y l√† ph·∫ßn quan tr·ªçng nh·∫•t ƒë·ªÉ b·∫°n gi√†nh ƒëi·ªÉm c·ªông! H√£y th·ª≠ th√™m m·ªôt khu v·ª±c hi·ªÉn th·ªã c√°c k·ªπ
                            nƒÉng c·ªßa b·∫°n (v√≠ d·ª•: HTML, CSS, JavaScript) b·∫±ng c√°ch s·ª≠ d·ª•ng Flexbox ƒë·ªÉ s·∫Øp x·∫øp ch√∫ng.</p>
                    </div>
                    <div class="code-block-container">
                        <div class="code-block-header">
                            <span class="file-name">index.html (th√™m v√†o)</span>
                            <button class="copy-button" data-target="code-step5-html">
                                <span>Copy</span> <i class="fa-regular fa-copy"></i>
                            </button>
                        </div>
                        <pre class="code-block"><code id="code-step5-html">&lt;!-- ƒê·∫∑t ƒëo·∫°n code n√†y d∆∞·ªõi div.social-links --&gt;
&lt;div class="skills-section"&gt;
    &lt;h3 class="skills-title"&gt;K·ªπ NƒÉng C·ªßa T√¥i&lt;/h3&gt;
    &lt;div class="skills-list"&gt;
        &lt;div class="skill-item"&gt;HTML5&lt;/div&gt;
        &lt;div class="skill-item"&gt;CSS3&lt;/div&gt;
        &lt;div class="skill-item"&gt;Flexbox&lt;/div&gt;
        &lt;div class="skill-item"&gt;JavaScript&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;</code></pre>
                    </div>
                    <div class="code-block-container">
                        <div class="code-block-header">
                            <span class="file-name">style.css (vi·∫øt ti·∫øp)</span>
                            <button class="copy-button" data-target="code-step5-css">
                                <span>Copy</span> <i class="fa-regular fa-copy"></i>
                            </button>
                        </div>
                        <pre class="code-block"><code id="code-step5-css">.skills-section {
    margin-top: 30px;
    padding-top: 30px;
    border-top: 1px solid #e5e7eb;
}
.skills-title {
    margin-top: 0;
    margin-bottom: 20px;
    font-size: 1.5rem;
    color: #374151;
}
.skills-list {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 10px;
}
.skill-item {
    background-color: #eef2ff;
    color: #4338ca;
    padding: 8px 15px;
    border-radius: 20px;
    font-weight: 600;
    font-size: 0.9rem;
    transition: transform 0.2s ease, background-color 0.2s ease;
}
.skill-item:hover {
    background-color: #c7d2fe;
    transform: scale(1.05);
}</code></pre>
                    </div>
                </div>
                <div class="preview-area">
                    <h4>Xem tr∆∞·ªõc k·∫øt qu·∫£ cu·ªëi c√πng:</h4>
                    <div class="preview-box">
                        <iframe id="preview-step5" title="Preview for Step 5"></iframe>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // --- DATA STORE ---
            // Isolate all code snippets here to prevent DOM-related bugs.
            // This is the single source of truth for the preview iframes.
            const allCodeSnippets = {
                html: {
                    step1: document.getElementById('code-step1').innerHTML,
                    step5: document.getElementById('code-step5-html').innerHTML,
                },
                css: {
                    step2: document.getElementById('code-step2').textContent,
                    step3: document.getElementById('code-step3').textContent,
                    step4: document.getElementById('code-step4').textContent,
                    step5: document.getElementById('code-step5-css').textContent,
                }
            };

            // --- RENDER LOGIC ---
            function renderPreview(frameId, htmlContent, cssContent) {
                const previewFrame = document.getElementById(frameId);
                if (!previewFrame) {
                    console.error(`Preview frame with id ${frameId} not found.`);
                    return;
                }

                // Decode HTML entities for iframe
                const tempDiv = document.createElement('div');
                tempDiv.innerHTML = htmlContent;
                const decodedHtml = tempDiv.textContent || tempDiv.innerText || "";


                const fullHtml = `
                    <!DOCTYPE html>
                    <html lang="vi">
                    <head>
                        <meta charset="UTF-8">
                        <meta name="viewport" content="width=device-width, initial-scale=1.0">
                        <link rel="preconnect" href="https://fonts.googleapis.com">
                        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
                        <link href="https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@400;500;600;700&display=swap" rel="stylesheet">
                        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
                        <style>
                            ${cssContent}
                        </style>
                    </head>
                    ${decodedHtml.substring(decodedHtml.indexOf('<body>'))}
                    </html>
                `;
                previewFrame.srcdoc = fullHtml;
            }

            // --- INITIALIZATION ---
            function initializePreviews() {
                const baseHtml = allCodeSnippets.html.step1;
                const cssStep2 = allCodeSnippets.css.step2;
                const cssStep3 = cssStep2 + allCodeSnippets.css.step3;
                const cssStep4 = cssStep3 + allCodeSnippets.css.step4;

                const htmlStep5 = baseHtml.replace(
                    '&lt;/div&gt;\n&lt;/body&gt;',
                    allCodeSnippets.html.step5 + '\n        &lt;/div&gt;\n&lt;/body&gt;'
                );
                const cssStep5 = cssStep4 + allCodeSnippets.css.step5;

                renderPreview('preview-step1', baseHtml, '');
                renderPreview('preview-step2', baseHtml, cssStep2);
                renderPreview('preview-step3', baseHtml, cssStep3);
                renderPreview('preview-step4', baseHtml, cssStep4);
                renderPreview('preview-step5', htmlStep5, cssStep5);
            }

            function initializeCopyButtons() {
                document.querySelectorAll('.copy-button').forEach(button => {
                    button.addEventListener('click', (e) => {
                        const buttonEl = e.currentTarget;
                        const targetId = buttonEl.dataset.target;
                        const codeElement = document.getElementById(targetId);

                        if (codeElement) {
                            // Use a temporary textarea to preserve formatting and decode entities
                            const textArea = document.createElement('textarea');
                            textArea.innerHTML = codeElement.innerHTML;
                            const codeText = textArea.value;

                            navigator.clipboard.writeText(codeText).then(() => {
                                const originalContent = buttonEl.innerHTML;
                                buttonEl.innerHTML = `ƒê√£ ch√©p! <i class="fa-solid fa-check"></i>`;
                                buttonEl.disabled = true;

                                setTimeout(() => {
                                    buttonEl.innerHTML = originalContent;
                                    buttonEl.disabled = false;
                                }, 2000);

                            }).catch(err => {
                                console.error('L·ªói sao ch√©p: ', err);
                                // Fallback for older browsers
                                textArea.style.position = 'fixed';
                                textArea.style.top = '-9999px';
                                document.body.appendChild(textArea);
                                textArea.select();
                                document.execCommand('copy');
                                document.body.removeChild(textArea);
                            });
                        }
                    });
                });
            }

            initializePreviews();
            initializeCopyButtons();
        });
    </script>
</body>

</html>

